
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.25+1 (git sha1 d3216593d, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Parsing `top.sv' using frontend ` -sv' --

1. Executing Verilog-2005 frontend: top.sv
Parsing SystemVerilog input from `top.sv' to AST representation.
Storing AST representation for module `$abstract\top'.
Successfully finished Verilog frontend.

-- Parsing `../../provided_modules/axis_i2s2.v' using frontend ` -vlog2k' --

2. Executing Verilog-2005 frontend: ../../provided_modules/axis_i2s2.v
Parsing Verilog input from `../../provided_modules/axis_i2s2.v' to AST representation.
Storing AST representation for module `$abstract\axis_i2s2'.
Successfully finished Verilog frontend.

-- Parsing `../../provided_modules/inv.sv' using frontend ` -sv' --

3. Executing Verilog-2005 frontend: ../../provided_modules/inv.sv
Parsing SystemVerilog input from `../../provided_modules/inv.sv' to AST representation.
Storing AST representation for module `$abstract\inv'.
Successfully finished Verilog frontend.

-- Parsing `../../provided_modules/dff.sv' using frontend ` -sv' --

4. Executing Verilog-2005 frontend: ../../provided_modules/dff.sv
Parsing SystemVerilog input from `../../provided_modules/dff.sv' to AST representation.
Storing AST representation for module `$abstract\dff'.
Successfully finished Verilog frontend.

-- Parsing `statemachine.sv' using frontend ` -sv' --

5. Executing Verilog-2005 frontend: statemachine.sv
Parsing SystemVerilog input from `statemachine.sv' to AST representation.
Storing AST representation for module `$abstract\statemachine'.
Successfully finished Verilog frontend.

-- Parsing `lfsr.sv' using frontend ` -sv' --

6. Executing Verilog-2005 frontend: lfsr.sv
Parsing SystemVerilog input from `lfsr.sv' to AST representation.
Storing AST representation for module `$abstract\lfsr'.
Successfully finished Verilog frontend.

-- Parsing `counter.sv' using frontend ` -sv' --

7. Executing Verilog-2005 frontend: counter.sv
Parsing SystemVerilog input from `counter.sv' to AST representation.
Storing AST representation for module `$abstract\counter'.
Storing AST representation for module `$abstract\adder'.
Successfully finished Verilog frontend.

-- Parsing `sine.sv' using frontend ` -sv' --

8. Executing Verilog-2005 frontend: sine.sv
Parsing SystemVerilog input from `sine.sv' to AST representation.
Storing AST representation for module `$abstract\sine'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top top -json top.json' --

9. Executing SYNTH_ICE40 pass.

9.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

9.2. Executing HIERARCHY pass (managing design hierarchy).

9.3. Executing AST frontend in derive mode using pre-parsed AST for module `\top'.
Generating RTLIL representation for module `\top'.

9.3.1. Analyzing design hierarchy..
Top module:  \top

9.3.2. Executing AST frontend in derive mode using pre-parsed AST for module `\sine'.
Generating RTLIL representation for module `\sine'.
Parameter 1 (\FILE) = 96'011011010110000101110010011110010110110001100001011011010110001000101110011010000110010101111000
Parameter 2 (\numberofnotes) = 14

9.3.3. Executing AST frontend in derive mode using pre-parsed AST for module `\statemachine'.
Parameter 1 (\FILE) = 96'011011010110000101110010011110010110110001100001011011010110001000101110011010000110010101111000
Parameter 2 (\numberofnotes) = 14
Generating RTLIL representation for module `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine'.

9.3.4. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_i2s2'.
Generating RTLIL representation for module `\axis_i2s2'.
Note: Assuming pure combinatorial block at ../../provided_modules/axis_i2s2.v:102.5-109.29 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.

9.3.5. Executing AST frontend in derive mode using pre-parsed AST for module `\dff'.
Generating RTLIL representation for module `\dff'.

9.3.6. Executing AST frontend in derive mode using pre-parsed AST for module `\inv'.
Generating RTLIL representation for module `\inv'.

9.3.7. Analyzing design hierarchy..
Top module:  \top
Used module:     \sine
Used module:     $paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine
Used module:     \axis_i2s2
Used module:     \dff
Used module:     \inv
Parameter 1 (\width_p) = 25

9.3.8. Executing AST frontend in derive mode using pre-parsed AST for module `\counter'.
Parameter 1 (\width_p) = 25
Generating RTLIL representation for module `$paramod\counter\width_p=s32'00000000000000000000000000011001'.
Parameter 1 (\width_p) = 25
Found cached RTLIL representation for module `$paramod\counter\width_p=s32'00000000000000000000000000011001'.

9.3.9. Analyzing design hierarchy..
Top module:  \top
Used module:     \sine
Used module:     $paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine
Used module:         $paramod\counter\width_p=s32'00000000000000000000000000011001
Used module:     \axis_i2s2
Used module:     \dff
Used module:     \inv
Parameter 1 (\width_p) = 25

9.3.10. Executing AST frontend in derive mode using pre-parsed AST for module `\adder'.
Parameter 1 (\width_p) = 25
Generating RTLIL representation for module `$paramod\adder\width_p=s32'00000000000000000000000000011001'.

9.3.11. Analyzing design hierarchy..
Top module:  \top
Used module:     \sine
Used module:     $paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine
Used module:         $paramod\counter\width_p=s32'00000000000000000000000000011001
Used module:             $paramod\adder\width_p=s32'00000000000000000000000000011001
Used module:     \axis_i2s2
Used module:     \dff
Used module:     \inv

9.3.12. Analyzing design hierarchy..
Top module:  \top
Used module:     \sine
Used module:     $paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine
Used module:         $paramod\counter\width_p=s32'00000000000000000000000000011001
Used module:             $paramod\adder\width_p=s32'00000000000000000000000000011001
Used module:     \axis_i2s2
Used module:     \dff
Used module:     \inv
Removing unused module `$abstract\sine'.
Removing unused module `$abstract\adder'.
Removing unused module `$abstract\counter'.
Removing unused module `$abstract\lfsr'.
Removing unused module `$abstract\statemachine'.
Removing unused module `$abstract\dff'.
Removing unused module `$abstract\inv'.
Removing unused module `$abstract\axis_i2s2'.
Removing unused module `$abstract\top'.
Removed 9 unused modules.
Warning: Resizing cell port top.i2s2_inst.rx_axis_p_data from 24 bits to 32 bits.
Warning: Resizing cell port top.i2s2_inst.tx_axis_c_data from 24 bits to 32 bits.

9.4. Executing PROC pass (convert processes to netlists).

9.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:0$412'.
Removing empty process `sine.$proc$sine.sv:0$395'.
Cleaned up 0 empty switches.

9.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$243 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$236 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$232 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$225 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$222 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$219 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$216 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$213 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$205 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$198 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$194 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$187 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$184 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$181 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$178 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$175 in module SB_DFFSR.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$523 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$522 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$521 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$520 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$519 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$518 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$517 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$516 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$515 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$514 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$513 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$512 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$511 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$510 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$509 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$508 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$507 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$506 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$505 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$504 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$503 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$502 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$501 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$500 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$counter.sv:74$499 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 2 switch rules as full_case in process $proc$counter.sv:0$492 in module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Marked 1 switch rules as full_case in process $proc$../../provided_modules/dff.sv:21$490 in module dff.
Marked 2 switch rules as full_case in process $proc$../../provided_modules/axis_i2s2.v:149$468 in module axis_i2s2.
Marked 2 switch rules as full_case in process $proc$../../provided_modules/axis_i2s2.v:141$458 in module axis_i2s2.
Marked 1 switch rules as full_case in process $proc$../../provided_modules/axis_i2s2.v:130$451 in module axis_i2s2.
Marked 1 switch rules as full_case in process $proc$../../provided_modules/axis_i2s2.v:120$444 in module axis_i2s2.
Marked 2 switch rules as full_case in process $proc$../../provided_modules/axis_i2s2.v:102$438 in module axis_i2s2.
Marked 2 switch rules as full_case in process $proc$../../provided_modules/axis_i2s2.v:91$430 in module axis_i2s2.
Marked 2 switch rules as full_case in process $proc$../../provided_modules/axis_i2s2.v:77$424 in module axis_i2s2.
Marked 3 switch rules as full_case in process $proc$../../provided_modules/axis_i2s2.v:67$415 in module axis_i2s2.
Marked 4 switch rules as full_case in process $proc$statemachine.sv:109$402 in module $paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.
Removed 1 dead cases from process $proc$statemachine.sv:0$400 in module $paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.
Marked 6 switch rules as full_case in process $proc$statemachine.sv:0$400 in module $paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.
Marked 4 switch rules as full_case in process $proc$sine.sv:24$384 in module sine.
Removed a total of 1 dead cases.

9.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 39 redundant assignments.
Promoted 45 assignments to connections.

9.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$246'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$242'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$235'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$231'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$224'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$221'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$218'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$215'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$212'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$210'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$208'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$204'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$197'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$193'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$186'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$183'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$180'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$177'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$174'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$172'.
  Set init value: \Q = 1'0
Found init rule in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:29$524'.
  Set init value: \addin_l = 25'0000000000000000000000000
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:129$489'.
  Set init value: \rx_data_r = 0
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:128$488'.
  Set init value: \rx_data_l = 0
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:119$487'.
  Set init value: \rx_data_r_shift = 24'000000000000000000000000
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:118$486'.
  Set init value: \rx_data_l_shift = 24'000000000000000000000000
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:112$485'.
  Set init value: \din_sync_shift = 3'000
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:89$484'.
  Set init value: \tx_data_r_shift = 24'000000000000000000000000
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:88$483'.
  Set init value: \tx_data_l_shift = 24'000000000000000000000000
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:65$482'.
  Set init value: \tx_data_r = 0
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:64$481'.
  Set init value: \tx_data_l = 0
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:47$480'.
  Set init value: \count = 9'000000000
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:0$479'.
  Set init value: \rx_axis_p_last = 1'0
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:0$478'.
  Set init value: \rx_axis_p_valid = 1'0
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:0$477'.
  Set init value: \tx_axis_c_ready = 1'0
Found init rule in `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:21$411'.
  Set init value: \nstate_l = 2'00
Found init rule in `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:20$410'.
  Set init value: \cstate_l = 2'00
Found init rule in `\sine.$proc$sine.sv:13$394'.
  Set init value: \phase_l = 0

9.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$243'.
Found async reset \R in `\SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$232'.
Found async reset \S in `\SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$222'.
Found async reset \R in `\SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$216'.
Found async reset \S in `\SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$205'.
Found async reset \R in `\SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$194'.
Found async reset \S in `\SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$184'.
Found async reset \R in `\SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$178'.

9.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~83 debug messages>

9.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$246'.
Creating decoders for process `\SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$243'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$242'.
Creating decoders for process `\SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$236'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$235'.
Creating decoders for process `\SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$232'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$231'.
Creating decoders for process `\SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$225'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$224'.
Creating decoders for process `\SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$222'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$221'.
Creating decoders for process `\SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$219'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$218'.
Creating decoders for process `\SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$216'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$215'.
Creating decoders for process `\SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$213'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$212'.
Creating decoders for process `\SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$211'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$210'.
Creating decoders for process `\SB_DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:882$209'.
Creating decoders for process `\SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$208'.
Creating decoders for process `\SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$205'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$204'.
Creating decoders for process `\SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$198'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$197'.
Creating decoders for process `\SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$194'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$193'.
Creating decoders for process `\SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$187'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$186'.
Creating decoders for process `\SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$184'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$183'.
Creating decoders for process `\SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$181'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$180'.
Creating decoders for process `\SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$178'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$177'.
Creating decoders for process `\SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$175'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$174'.
Creating decoders for process `\SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$173'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$172'.
Creating decoders for process `\SB_DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$171'.
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:29$524'.
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$523'.
     1/1: $0\dffout_l[24:24]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$522'.
     1/1: $0\dffout_l[23:23]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$521'.
     1/1: $0\dffout_l[22:22]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$520'.
     1/1: $0\dffout_l[21:21]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$519'.
     1/1: $0\dffout_l[20:20]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$518'.
     1/1: $0\dffout_l[19:19]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$517'.
     1/1: $0\dffout_l[18:18]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$516'.
     1/1: $0\dffout_l[17:17]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$515'.
     1/1: $0\dffout_l[16:16]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$514'.
     1/1: $0\dffout_l[15:15]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$513'.
     1/1: $0\dffout_l[14:14]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$512'.
     1/1: $0\dffout_l[13:13]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$511'.
     1/1: $0\dffout_l[12:12]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$510'.
     1/1: $0\dffout_l[11:11]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$509'.
     1/1: $0\dffout_l[10:10]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$508'.
     1/1: $0\dffout_l[9:9]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$507'.
     1/1: $0\dffout_l[8:8]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$506'.
     1/1: $0\dffout_l[7:7]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$505'.
     1/1: $0\dffout_l[6:6]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$504'.
     1/1: $0\dffout_l[5:5]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$503'.
     1/1: $0\dffout_l[4:4]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$502'.
     1/1: $0\dffout_l[3:3]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$501'.
     1/1: $0\dffout_l[2:2]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$500'.
     1/1: $0\dffout_l[1:1]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$499'.
     1/1: $0\dffout_l[0:0]
Creating decoders for process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492'.
     1/2: $2\addin_l[24:0]
     2/2: $1\addin_l[24:0]
Creating decoders for process `\dff.$proc$../../provided_modules/dff.sv:21$490'.
     1/1: $0\q_r[0:0]
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:129$489'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:128$488'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:119$487'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:118$486'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:112$485'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:89$484'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:88$483'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:65$482'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:64$481'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:47$480'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:0$479'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:0$478'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:0$477'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:149$468'.
     1/1: $0\rx_axis_p_last[0:0]
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:141$458'.
     1/1: $0\rx_axis_p_valid[0:0]
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:130$451'.
     1/2: $0\rx_data_r[31:0]
     2/2: $0\rx_data_l[31:0]
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:120$444'.
     1/2: $0\rx_data_r_shift[23:0]
     2/2: $0\rx_data_l_shift[23:0]
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:114$443'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:102$438'.
     1/2: $2\tx_sdout[0:0]
     2/2: $1\tx_sdout[0:0]
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:91$430'.
     1/2: $0\tx_data_r_shift[23:0]
     2/2: $0\tx_data_l_shift[23:0]
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:77$424'.
     1/2: $0\tx_data_r[31:0]
     2/2: $0\tx_data_l[31:0]
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:67$415'.
     1/1: $0\tx_axis_c_ready[0:0]
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:50$413'.
Creating decoders for process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:21$411'.
Creating decoders for process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:20$410'.
Creating decoders for process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:109$402'.
     1/7: $0\cfstep_l[31:0]
     2/7: $0\pausecounter_reset[0:0]
     3/7: $0\playcounter_reset[0:0]
     4/7: $0\cstate_l[1:0]
     5/7: $0\pausecounterup[0:0]
     6/7: $0\playcounterup[0:0]
     7/7: $0\ncounter[4:0]
Creating decoders for process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:0$400'.
     1/7: $6\nstate_l[1:0]
     2/7: $5\nstate_l[1:0]
     3/7: $4\nstate_l[1:0]
     4/7: $3\nstate_l[1:0]
     5/7: $2\nstate_l[1:0]
     6/7: $1\nstate_l[1:0]
     7/7: $1\nfstep_l[31:0]
Creating decoders for process `\sine.$proc$sine.sv:13$394'.
Creating decoders for process `\sine.$proc$sine.sv:24$384'.
     1/8: $0\pipeline[1:0] [1]
     2/8: $0\pipeline[1:0] [0]
     3/8: $0\tblval[23:0]
     4/8: $0\index[5:0]
     5/8: $0\valid_o_l[0:0]
     6/8: $0\axis_last_l[0:0]
     7/8: $0\sine_val[23:0]
     8/8: $0\phase_l[31:0]

9.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l' from process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492'.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [0]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [1]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [2]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [3]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [4]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [5]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [6]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [7]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [8]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [9]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [10]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [11]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [12]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [13]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [14]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [15]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [16]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [17]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [18]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [19]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [20]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [21]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [22]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [23]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
Removing init bit 1'0 for non-memory siginal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\addin_l [24]` in process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492`.
No latch inferred for signal `\axis_i2s2.\tx_sdout' from process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:102$438'.
No latch inferred for signal `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.\nstate_l' from process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:0$400'.
Removing init bit 1'0 for non-memory siginal `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.\nstate_l [0]` in process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:0$400`.
Removing init bit 1'0 for non-memory siginal `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.\nstate_l [1]` in process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:0$400`.
No latch inferred for signal `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.\nfstep_l' from process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:0$400'.

9.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$243'.
  created $adff cell `$procdff$911' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$236'.
  created $dff cell `$procdff$912' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$232'.
  created $adff cell `$procdff$913' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$225'.
  created $dff cell `$procdff$914' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$222'.
  created $adff cell `$procdff$915' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$219'.
  created $dff cell `$procdff$916' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$216'.
  created $adff cell `$procdff$917' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$213'.
  created $dff cell `$procdff$918' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$211'.
  created $dff cell `$procdff$919' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:882$209'.
  created $dff cell `$procdff$920' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$205'.
  created $adff cell `$procdff$921' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$198'.
  created $dff cell `$procdff$922' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$194'.
  created $adff cell `$procdff$923' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$187'.
  created $dff cell `$procdff$924' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$184'.
  created $adff cell `$procdff$925' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$181'.
  created $dff cell `$procdff$926' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$178'.
  created $adff cell `$procdff$927' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$175'.
  created $dff cell `$procdff$928' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$173'.
  created $dff cell `$procdff$929' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$171'.
  created $dff cell `$procdff$930' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [24]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$523'.
  created $dff cell `$procdff$931' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [23]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$522'.
  created $dff cell `$procdff$932' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [22]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$521'.
  created $dff cell `$procdff$933' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [21]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$520'.
  created $dff cell `$procdff$934' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [20]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$519'.
  created $dff cell `$procdff$935' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [19]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$518'.
  created $dff cell `$procdff$936' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [18]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$517'.
  created $dff cell `$procdff$937' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [17]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$516'.
  created $dff cell `$procdff$938' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [16]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$515'.
  created $dff cell `$procdff$939' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [15]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$514'.
  created $dff cell `$procdff$940' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [14]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$513'.
  created $dff cell `$procdff$941' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [13]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$512'.
  created $dff cell `$procdff$942' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [12]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$511'.
  created $dff cell `$procdff$943' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [11]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$510'.
  created $dff cell `$procdff$944' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [10]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$509'.
  created $dff cell `$procdff$945' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [9]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$508'.
  created $dff cell `$procdff$946' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [8]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$507'.
  created $dff cell `$procdff$947' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [7]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$506'.
  created $dff cell `$procdff$948' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [6]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$505'.
  created $dff cell `$procdff$949' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [5]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$504'.
  created $dff cell `$procdff$950' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [4]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$503'.
  created $dff cell `$procdff$951' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [3]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$502'.
  created $dff cell `$procdff$952' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [2]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$501'.
  created $dff cell `$procdff$953' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [1]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$500'.
  created $dff cell `$procdff$954' with positive edge clock.
Creating register for signal `$paramod\counter\width_p=s32'00000000000000000000000000011001.\dffout_l [0]' using process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$499'.
  created $dff cell `$procdff$955' with positive edge clock.
Creating register for signal `\dff.\q_r' using process `\dff.$proc$../../provided_modules/dff.sv:21$490'.
  created $dff cell `$procdff$956' with positive edge clock.
Creating register for signal `\axis_i2s2.\rx_axis_p_last' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:149$468'.
  created $dff cell `$procdff$957' with positive edge clock.
Creating register for signal `\axis_i2s2.\rx_axis_p_valid' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:141$458'.
  created $dff cell `$procdff$958' with positive edge clock.
Creating register for signal `\axis_i2s2.\rx_data_l' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:130$451'.
  created $dff cell `$procdff$959' with positive edge clock.
Creating register for signal `\axis_i2s2.\rx_data_r' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:130$451'.
  created $dff cell `$procdff$960' with positive edge clock.
Creating register for signal `\axis_i2s2.\rx_data_l_shift' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:120$444'.
  created $dff cell `$procdff$961' with positive edge clock.
Creating register for signal `\axis_i2s2.\rx_data_r_shift' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:120$444'.
  created $dff cell `$procdff$962' with positive edge clock.
Creating register for signal `\axis_i2s2.\din_sync_shift' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:114$443'.
  created $dff cell `$procdff$963' with positive edge clock.
Creating register for signal `\axis_i2s2.\tx_data_l_shift' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:91$430'.
  created $dff cell `$procdff$964' with positive edge clock.
Creating register for signal `\axis_i2s2.\tx_data_r_shift' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:91$430'.
  created $dff cell `$procdff$965' with positive edge clock.
Creating register for signal `\axis_i2s2.\tx_data_l' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:77$424'.
  created $dff cell `$procdff$966' with positive edge clock.
Creating register for signal `\axis_i2s2.\tx_data_r' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:77$424'.
  created $dff cell `$procdff$967' with positive edge clock.
Creating register for signal `\axis_i2s2.\tx_axis_c_ready' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:67$415'.
  created $dff cell `$procdff$968' with positive edge clock.
Creating register for signal `\axis_i2s2.\count' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:50$413'.
  created $dff cell `$procdff$969' with positive edge clock.
Creating register for signal `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.\cstate_l' using process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:109$402'.
  created $dff cell `$procdff$970' with positive edge clock.
Creating register for signal `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.\ncounter' using process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:109$402'.
  created $dff cell `$procdff$971' with positive edge clock.
Creating register for signal `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.\cfstep_l' using process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:109$402'.
  created $dff cell `$procdff$972' with positive edge clock.
Creating register for signal `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.\playcounterup' using process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:109$402'.
  created $dff cell `$procdff$973' with positive edge clock.
Creating register for signal `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.\pausecounterup' using process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:109$402'.
  created $dff cell `$procdff$974' with positive edge clock.
Creating register for signal `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.\playcounter_reset' using process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:109$402'.
  created $dff cell `$procdff$975' with positive edge clock.
Creating register for signal `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.\pausecounter_reset' using process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:109$402'.
  created $dff cell `$procdff$976' with positive edge clock.
Creating register for signal `\sine.\phase_l' using process `\sine.$proc$sine.sv:24$384'.
  created $dff cell `$procdff$977' with positive edge clock.
Creating register for signal `\sine.\sine_val' using process `\sine.$proc$sine.sv:24$384'.
  created $dff cell `$procdff$978' with positive edge clock.
Creating register for signal `\sine.\valid_o_l' using process `\sine.$proc$sine.sv:24$384'.
  created $dff cell `$procdff$979' with positive edge clock.
Creating register for signal `\sine.\axis_last_l' using process `\sine.$proc$sine.sv:24$384'.
  created $dff cell `$procdff$980' with positive edge clock.
Creating register for signal `\sine.\pipeline' using process `\sine.$proc$sine.sv:24$384'.
  created $dff cell `$procdff$981' with positive edge clock.
Creating register for signal `\sine.\index' using process `\sine.$proc$sine.sv:24$384'.
  created $dff cell `$procdff$982' with positive edge clock.
Creating register for signal `\sine.\tblval' using process `\sine.$proc$sine.sv:24$384'.
  created $dff cell `$procdff$983' with positive edge clock.

9.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

9.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$246'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$243'.
Removing empty process `SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$243'.
Removing empty process `SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$242'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$236'.
Removing empty process `SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$236'.
Removing empty process `SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$235'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$232'.
Removing empty process `SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$232'.
Removing empty process `SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$231'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$225'.
Removing empty process `SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$225'.
Removing empty process `SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$224'.
Removing empty process `SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$222'.
Removing empty process `SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$221'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$219'.
Removing empty process `SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$219'.
Removing empty process `SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$218'.
Removing empty process `SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$216'.
Removing empty process `SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$215'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$213'.
Removing empty process `SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$213'.
Removing empty process `SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$212'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$211'.
Removing empty process `SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$211'.
Removing empty process `SB_DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$210'.
Removing empty process `SB_DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:882$209'.
Removing empty process `SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$208'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$205'.
Removing empty process `SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$205'.
Removing empty process `SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$204'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$198'.
Removing empty process `SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$198'.
Removing empty process `SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$197'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$194'.
Removing empty process `SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$194'.
Removing empty process `SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$193'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$187'.
Removing empty process `SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$187'.
Removing empty process `SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$186'.
Removing empty process `SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$184'.
Removing empty process `SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$183'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$181'.
Removing empty process `SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$181'.
Removing empty process `SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$180'.
Removing empty process `SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$178'.
Removing empty process `SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$177'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$175'.
Removing empty process `SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$175'.
Removing empty process `SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$174'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$173'.
Removing empty process `SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$173'.
Removing empty process `SB_DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$172'.
Removing empty process `SB_DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$171'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:29$524'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$523'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$523'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$522'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$522'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$521'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$521'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$520'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$520'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$519'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$519'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$518'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$518'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$517'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$517'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$516'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$516'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$515'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$515'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$514'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$514'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$513'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$513'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$512'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$512'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$511'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$511'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$510'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$510'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$509'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$509'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$508'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$508'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$507'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$507'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$506'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$506'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$505'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$505'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$504'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$504'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$503'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$503'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$502'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$502'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$501'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$501'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$500'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$500'.
Found and cleaned up 1 empty switch in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$499'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:74$499'.
Found and cleaned up 2 empty switches in `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492'.
Removing empty process `$paramod\counter\width_p=s32'00000000000000000000000000011001.$proc$counter.sv:0$492'.
Found and cleaned up 1 empty switch in `\dff.$proc$../../provided_modules/dff.sv:21$490'.
Removing empty process `dff.$proc$../../provided_modules/dff.sv:21$490'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:129$489'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:128$488'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:119$487'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:118$486'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:112$485'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:89$484'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:88$483'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:65$482'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:64$481'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:47$480'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:0$479'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:0$478'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:0$477'.
Found and cleaned up 3 empty switches in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:149$468'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:149$468'.
Found and cleaned up 3 empty switches in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:141$458'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:141$458'.
Found and cleaned up 2 empty switches in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:130$451'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:130$451'.
Found and cleaned up 2 empty switches in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:120$444'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:120$444'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:114$443'.
Found and cleaned up 2 empty switches in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:102$438'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:102$438'.
Found and cleaned up 3 empty switches in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:91$430'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:91$430'.
Found and cleaned up 3 empty switches in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:77$424'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:77$424'.
Found and cleaned up 4 empty switches in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:67$415'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:67$415'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:50$413'.
Removing empty process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:21$411'.
Removing empty process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:20$410'.
Found and cleaned up 5 empty switches in `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:109$402'.
Removing empty process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:109$402'.
Found and cleaned up 6 empty switches in `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:0$400'.
Removing empty process `$paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.$proc$statemachine.sv:0$400'.
Removing empty process `sine.$proc$sine.sv:13$394'.
Found and cleaned up 4 empty switches in `\sine.$proc$sine.sv:24$384'.
Removing empty process `sine.$proc$sine.sv:24$384'.
Cleaned up 83 empty switches.

9.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\adder\width_p=s32'00000000000000000000000000011001.
Optimizing module $paramod\counter\width_p=s32'00000000000000000000000000011001.
<suppressed ~4 debug messages>
Optimizing module inv.
Optimizing module dff.
Optimizing module axis_i2s2.
<suppressed ~31 debug messages>
Optimizing module $paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.
<suppressed ~4 debug messages>
Optimizing module sine.
Optimizing module top.

9.5. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\adder\width_p=s32'00000000000000000000000000011001.
Deleting now unused module $paramod\counter\width_p=s32'00000000000000000000000000011001.
Deleting now unused module inv.
Deleting now unused module dff.
Deleting now unused module axis_i2s2.
Deleting now unused module $paramod$ecdcb85c7ffb2b58c45915badb9e94e61ae896ad\statemachine.
Deleting now unused module sine.
<suppressed ~9 debug messages>

9.6. Executing TRIBUF pass.

9.7. Executing DEMINOUT pass (demote inout ports to input or output).

9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~22 debug messages>

9.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 44 unused cells and 349 unused wires.
<suppressed ~60 debug messages>

9.10. Executing CHECK pass (checking for obvious problems).
Checking module top...
Warning: Wire top.\led_o [4] is used but has no driver.
Warning: Wire top.\led_o [3] is used but has no driver.
Warning: Wire top.\led_o [2] is used but has no driver.
Warning: Wire top.\led_o [1] is used but has no driver.
Warning: Wire top.\led_o [0] is used but has no driver.
Found and reported 5 problems.

9.11. Executing OPT pass (performing simple optimizations).

9.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

9.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\i2s2_inst.$procmux$698.
    dead port 2/2 on $mux $flatten\sm.$procmux$817.
    dead port 2/2 on $mux $flatten\sm.$procmux$823.
    dead port 2/2 on $mux $flatten\sm.$procmux$830.
    dead port 2/2 on $mux $flatten\sm.$procmux$837.
    dead port 2/2 on $mux $flatten\sm.$procmux$845.
    dead port 1/2 on $mux $flatten\sm.\pausecounter_inst.$procmux$650.
    dead port 1/2 on $mux $flatten\sm.\playcounter_inst.$procmux$650.
Removed 8 multiplexer ports.
<suppressed ~74 debug messages>

9.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\sm.$procmux$852: { $flatten\sm.$eq$statemachine.sv:133$404_Y $flatten\sm.$eq$statemachine.sv:139$407_Y $auto$opt_reduce.cc:134:opt_pmux$985 }
  Optimizing cells in module \top.
Performed a total of 1 changes.

9.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

9.11.6. Executing OPT_DFF pass (perform DFF optimizations).

9.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 25 unused wires.
<suppressed ~3 debug messages>

9.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.11.9. Rerunning OPT passes. (Maybe there is more to do..)

9.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~75 debug messages>

9.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

9.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.11.13. Executing OPT_DFF pass (perform DFF optimizations).

9.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.11.16. Finished OPT passes. (There is nothing left to do.)

9.12. Executing FSM pass (extract and optimize FSM).

9.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.sm.cstate_l as FSM state register:
    Register has an initialization value.

9.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

9.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

9.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

9.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

9.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

9.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

9.13. Executing OPT pass (performing simple optimizations).

9.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~75 debug messages>

9.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

9.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\sound.$procdff$983 ($dff) from module top (D = $flatten\sound.$memrd$\quarterwave$sine.sv:48$390_DATA, Q = \sound.tblval).
Adding EN signal on $flatten\sound.$procdff$982 ($dff) from module top (D = $flatten\sound.$procmux$877_Y, Q = \sound.index).
Adding EN signal on $flatten\sound.$procdff$981 ($dff) from module top (D = { \sound.pipeline [0] \sound.phase_l [31] }, Q = \sound.pipeline).
Adding EN signal on $flatten\sound.$procdff$980 ($dff) from module top (D = $flatten\sound.$not$sine.sv:56$392_Y, Q = \sound.axis_last_l).
Adding SRST signal on $flatten\sound.$procdff$979 ($dff) from module top (D = $flatten\sound.$procmux$885_Y, Q = \sound.valid_o_l, rval = 1'0).
Adding EN signal on $flatten\sound.$procdff$978 ($dff) from module top (D = $flatten\sound.$procmux$898_Y, Q = \sound.sine_val).
Adding SRST signal on $flatten\sound.$procdff$977 ($dff) from module top (D = $flatten\sound.$procmux$906_Y, Q = \sound.phase_l, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$1012 ($sdff) from module top (D = $flatten\sound.$add$sine.sv:37$388_Y, Q = \sound.phase_l).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$955 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [0], Q = \sm.playcounter_inst.dffout_l [0], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$954 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [1], Q = \sm.playcounter_inst.dffout_l [1], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$953 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [2], Q = \sm.playcounter_inst.dffout_l [2], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$952 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [3], Q = \sm.playcounter_inst.dffout_l [3], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$951 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [4], Q = \sm.playcounter_inst.dffout_l [4], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$950 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [5], Q = \sm.playcounter_inst.dffout_l [5], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$949 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [6], Q = \sm.playcounter_inst.dffout_l [6], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$948 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [7], Q = \sm.playcounter_inst.dffout_l [7], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$947 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [8], Q = \sm.playcounter_inst.dffout_l [8], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$946 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [9], Q = \sm.playcounter_inst.dffout_l [9], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$945 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [10], Q = \sm.playcounter_inst.dffout_l [10], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$944 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [11], Q = \sm.playcounter_inst.dffout_l [11], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$943 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [12], Q = \sm.playcounter_inst.dffout_l [12], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$942 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [13], Q = \sm.playcounter_inst.dffout_l [13], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$941 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [14], Q = \sm.playcounter_inst.dffout_l [14], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$940 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [15], Q = \sm.playcounter_inst.dffout_l [15], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$939 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [16], Q = \sm.playcounter_inst.dffout_l [16], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$938 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [17], Q = \sm.playcounter_inst.dffout_l [17], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$937 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [18], Q = \sm.playcounter_inst.dffout_l [18], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$936 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [19], Q = \sm.playcounter_inst.dffout_l [19], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$935 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [20], Q = \sm.playcounter_inst.dffout_l [20], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$934 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [21], Q = \sm.playcounter_inst.dffout_l [21], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$933 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [22], Q = \sm.playcounter_inst.dffout_l [22], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$932 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [23], Q = \sm.playcounter_inst.dffout_l [23], rval = 1'0).
Adding SRST signal on $flatten\sm.\playcounter_inst.$procdff$931 ($dff) from module top (D = \sm.playcounter_inst.adder_inst.sum_o [24], Q = \sm.playcounter_inst.dffout_l [24], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$955 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [0], Q = \sm.pausecounter_inst.dffout_l [0], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$954 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [1], Q = \sm.pausecounter_inst.dffout_l [1], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$953 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [2], Q = \sm.pausecounter_inst.dffout_l [2], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$952 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [3], Q = \sm.pausecounter_inst.dffout_l [3], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$951 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [4], Q = \sm.pausecounter_inst.dffout_l [4], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$950 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [5], Q = \sm.pausecounter_inst.dffout_l [5], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$949 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [6], Q = \sm.pausecounter_inst.dffout_l [6], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$948 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [7], Q = \sm.pausecounter_inst.dffout_l [7], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$947 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [8], Q = \sm.pausecounter_inst.dffout_l [8], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$946 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [9], Q = \sm.pausecounter_inst.dffout_l [9], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$945 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [10], Q = \sm.pausecounter_inst.dffout_l [10], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$944 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [11], Q = \sm.pausecounter_inst.dffout_l [11], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$943 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [12], Q = \sm.pausecounter_inst.dffout_l [12], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$942 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [13], Q = \sm.pausecounter_inst.dffout_l [13], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$941 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [14], Q = \sm.pausecounter_inst.dffout_l [14], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$940 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [15], Q = \sm.pausecounter_inst.dffout_l [15], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$939 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [16], Q = \sm.pausecounter_inst.dffout_l [16], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$938 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [17], Q = \sm.pausecounter_inst.dffout_l [17], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$937 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [18], Q = \sm.pausecounter_inst.dffout_l [18], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$936 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [19], Q = \sm.pausecounter_inst.dffout_l [19], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$935 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [20], Q = \sm.pausecounter_inst.dffout_l [20], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$934 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [21], Q = \sm.pausecounter_inst.dffout_l [21], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$933 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [22], Q = \sm.pausecounter_inst.dffout_l [22], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$932 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [23], Q = \sm.pausecounter_inst.dffout_l [23], rval = 1'0).
Adding SRST signal on $flatten\sm.\pausecounter_inst.$procdff$931 ($dff) from module top (D = \sm.pausecounter_inst.adder_inst.sum_o [24], Q = \sm.pausecounter_inst.dffout_l [24], rval = 1'0).
Adding SRST signal on $flatten\sm.$procdff$976 ($dff) from module top (D = $flatten\sm.$procmux$751_Y, Q = \sm.pausecounter_reset, rval = 1'0).
Adding SRST signal on $flatten\sm.$procdff$975 ($dff) from module top (D = $flatten\sm.$procmux$765_Y, Q = \sm.playcounter_reset, rval = 1'0).
Adding SRST signal on $flatten\sm.$procdff$974 ($dff) from module top (D = $flatten\sm.$procmux$785_Y, Q = \sm.pausecounterup, rval = 1'0).
Adding SRST signal on $flatten\sm.$procdff$973 ($dff) from module top (D = $flatten\sm.$procmux$799_Y, Q = \sm.playcounterup, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1071 ($sdff) from module top (D = $flatten\sm.$procmux$799_Y, Q = \sm.playcounterup).
Adding SRST signal on $flatten\sm.$procdff$972 ($dff) from module top (D = \sm.nfstep_l, Q = \sm.cfstep_l, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$1075 ($sdff) from module top (D = \sm.nfstep_l, Q = \sm.cfstep_l).
Adding SRST signal on $flatten\sm.$procdff$971 ($dff) from module top (D = $flatten\sm.$procmux$808_Y, Q = \sm.ncounter, rval = 5'00000).
Adding EN signal on $auto$ff.cc:266:slice$1079 ($sdff) from module top (D = $flatten\sm.$add$statemachine.sv:134$406_Y [4:0], Q = \sm.ncounter).
Adding SRST signal on $flatten\sm.$procdff$970 ($dff) from module top (D = \sm.nstate_l, Q = \sm.cstate_l, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$1085 ($sdff) from module top (D = \sm.nstate_l, Q = \sm.cstate_l).
Adding SRST signal on $flatten\i2s2_inst.$procdff$968 ($dff) from module top (D = $flatten\i2s2_inst.$procmux$735_Y, Q = \i2s2_inst.tx_axis_c_ready, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1093 ($sdff) from module top (D = 1'1, Q = \i2s2_inst.tx_axis_c_ready).
Adding SRST signal on $flatten\i2s2_inst.$procdff$967 ($dff) from module top (D = $flatten\i2s2_inst.$procmux$722_Y, Q = \i2s2_inst.tx_data_r, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$1097 ($sdff) from module top (D = { 8'00000000 \sound.sine_val }, Q = \i2s2_inst.tx_data_r).
Adding SRST signal on $flatten\i2s2_inst.$procdff$966 ($dff) from module top (D = $flatten\i2s2_inst.$procmux$730_Y, Q = \i2s2_inst.tx_data_l, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$1101 ($sdff) from module top (D = { 8'00000000 \sound.sine_val }, Q = \i2s2_inst.tx_data_l).
Adding EN signal on $flatten\i2s2_inst.$procdff$965 ($dff) from module top (D = $flatten\i2s2_inst.$0\tx_data_r_shift[23:0], Q = \i2s2_inst.tx_data_r_shift).
Adding EN signal on $flatten\i2s2_inst.$procdff$964 ($dff) from module top (D = $flatten\i2s2_inst.$0\tx_data_l_shift[23:0], Q = \i2s2_inst.tx_data_l_shift).
Setting constant 0-bit at position 24 on $auto$ff.cc:266:slice$1102 ($sdffe) from module top.
Setting constant 0-bit at position 25 on $auto$ff.cc:266:slice$1102 ($sdffe) from module top.
Setting constant 0-bit at position 26 on $auto$ff.cc:266:slice$1102 ($sdffe) from module top.
Setting constant 0-bit at position 27 on $auto$ff.cc:266:slice$1102 ($sdffe) from module top.
Setting constant 0-bit at position 28 on $auto$ff.cc:266:slice$1102 ($sdffe) from module top.
Setting constant 0-bit at position 29 on $auto$ff.cc:266:slice$1102 ($sdffe) from module top.
Setting constant 0-bit at position 30 on $auto$ff.cc:266:slice$1102 ($sdffe) from module top.
Setting constant 0-bit at position 31 on $auto$ff.cc:266:slice$1102 ($sdffe) from module top.
Setting constant 0-bit at position 24 on $auto$ff.cc:266:slice$1098 ($sdffe) from module top.
Setting constant 0-bit at position 25 on $auto$ff.cc:266:slice$1098 ($sdffe) from module top.
Setting constant 0-bit at position 26 on $auto$ff.cc:266:slice$1098 ($sdffe) from module top.
Setting constant 0-bit at position 27 on $auto$ff.cc:266:slice$1098 ($sdffe) from module top.
Setting constant 0-bit at position 28 on $auto$ff.cc:266:slice$1098 ($sdffe) from module top.
Setting constant 0-bit at position 29 on $auto$ff.cc:266:slice$1098 ($sdffe) from module top.
Setting constant 0-bit at position 30 on $auto$ff.cc:266:slice$1098 ($sdffe) from module top.
Setting constant 0-bit at position 31 on $auto$ff.cc:266:slice$1098 ($sdffe) from module top.

9.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 87 unused cells and 86 unused wires.
<suppressed ~88 debug messages>

9.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~6 debug messages>

9.13.9. Rerunning OPT passes. (Maybe there is more to do..)

9.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

9.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\sm.$procmux$847: { $flatten\sm.$eq$statemachine.sv:124$403_Y $flatten\sm.$eq$statemachine.sv:133$404_Y $flatten\sm.$eq$statemachine.sv:139$407_Y }
    New ctrl vector for $pmux cell $flatten\sm.$procmux$852: { $flatten\sm.$eq$statemachine.sv:133$404_Y $flatten\sm.$eq$statemachine.sv:139$407_Y }
  Optimizing cells in module \top.
Performed a total of 2 changes.

9.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

9.13.13. Executing OPT_DFF pass (perform DFF optimizations).

9.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 12 unused wires.
<suppressed ~2 debug messages>

9.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.13.16. Rerunning OPT passes. (Maybe there is more to do..)

9.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

9.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

9.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.13.20. Executing OPT_DFF pass (perform DFF optimizations).

9.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.13.23. Finished OPT passes. (There is nothing left to do.)

9.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port top.$flatten\sm.$meminit$\notes_to_play$statemachine.sv:0$409 (sm.notes_to_play).
Removed top 1 address bits (of 5) from memory read port top.$flatten\sm.$memrd$\notes_to_play$statemachine.sv:80$401 (sm.notes_to_play).
Removed top 26 address bits (of 32) from memory init port top.$flatten\sound.$meminit$\quarterwave$sine.sv:0$393 (sound.quarterwave).
Removed top 2 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1111 ($ne).
Removed top 3 bits (of 4) from port B of cell top.$flatten\i2s2_inst.$ge$../../provided_modules/axis_i2s2.v:103$440 ($ge).
Removed top 4 bits (of 5) from port B of cell top.$flatten\i2s2_inst.$ge$../../provided_modules/axis_i2s2.v:95$433 ($ge).
Removed top 31 bits (of 32) from port B of cell top.$flatten\i2s2_inst.$add$../../provided_modules/axis_i2s2.v:51$414 ($add).
Removed top 23 bits (of 32) from port Y of cell top.$flatten\i2s2_inst.$add$../../provided_modules/axis_i2s2.v:51$414 ($add).
Removed top 24 bits (of 25) from mux cell top.$flatten\sm.\pausecounter_inst.$procmux$653 ($mux).
Removed top 24 bits (of 25) from mux cell top.$flatten\sm.\playcounter_inst.$procmux$653 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$flatten\sm.$add$statemachine.sv:134$406 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$flatten\sm.$add$statemachine.sv:134$406 ($add).
Removed top 1 bits (of 2) from port B of cell top.$flatten\sm.$eq$statemachine.sv:133$404 ($eq).
Removed top 24 bits (of 25) from port B of cell top.$flatten\sm.\pausecounter_inst.\adder_inst.$add$counter.sv:104$525 ($add).
Removed top 1 bits (of 26) from port Y of cell top.$flatten\sm.\pausecounter_inst.\adder_inst.$add$counter.sv:104$525 ($add).
Removed top 24 bits (of 25) from port B of cell top.$flatten\sm.\playcounter_inst.\adder_inst.$add$counter.sv:104$525 ($add).
Removed top 1 bits (of 26) from port Y of cell top.$flatten\sm.\playcounter_inst.\adder_inst.$add$counter.sv:104$525 ($add).
Removed top 1 bits (of 5) from port B of cell top.$flatten\sm.$eq$statemachine.sv:31$396 ($eq).
Removed top 27 bits (of 32) from wire top.$flatten\sm.$add$statemachine.sv:134$406_Y.

9.15. Executing PEEPOPT pass (run peephole optimizers).

9.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

9.17. Executing SHARE pass (SAT-based resource sharing).

9.18. Executing TECHMAP pass (map to technology primitives).

9.18.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/cmp2lut.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

9.18.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~62 debug messages>

9.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.21. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\i2s2_inst.$add$../../provided_modules/axis_i2s2.v:51$414 ($add).
  creating $macc model for $flatten\sm.$add$statemachine.sv:134$406 ($add).
  creating $macc model for $flatten\sm.\pausecounter_inst.\adder_inst.$add$counter.sv:104$525 ($add).
  creating $macc model for $flatten\sm.\playcounter_inst.\adder_inst.$add$counter.sv:104$525 ($add).
  creating $macc model for $flatten\sound.$add$sine.sv:37$388 ($add).
  creating $macc model for $flatten\sound.$neg$sine.sv:52$391 ($neg).
  creating $alu model for $macc $flatten\sound.$neg$sine.sv:52$391.
  creating $alu model for $macc $flatten\sound.$add$sine.sv:37$388.
  creating $alu model for $macc $flatten\sm.\playcounter_inst.\adder_inst.$add$counter.sv:104$525.
  creating $alu model for $macc $flatten\sm.\pausecounter_inst.\adder_inst.$add$counter.sv:104$525.
  creating $alu model for $macc $flatten\sm.$add$statemachine.sv:134$406.
  creating $alu model for $macc $flatten\i2s2_inst.$add$../../provided_modules/axis_i2s2.v:51$414.
  creating $alu model for $flatten\i2s2_inst.$ge$../../provided_modules/axis_i2s2.v:103$440 ($ge): new $alu
  creating $alu model for $flatten\i2s2_inst.$ge$../../provided_modules/axis_i2s2.v:95$433 ($ge): merged with $flatten\i2s2_inst.$ge$../../provided_modules/axis_i2s2.v:103$440.
  creating $alu model for $flatten\i2s2_inst.$le$../../provided_modules/axis_i2s2.v:103$439 ($le): new $alu
  creating $alu cell for $flatten\i2s2_inst.$le$../../provided_modules/axis_i2s2.v:103$439: $auto$alumacc.cc:485:replace_alu$1127
  creating $alu cell for $flatten\i2s2_inst.$ge$../../provided_modules/axis_i2s2.v:103$440, $flatten\i2s2_inst.$ge$../../provided_modules/axis_i2s2.v:95$433: $auto$alumacc.cc:485:replace_alu$1140
  creating $alu cell for $flatten\i2s2_inst.$add$../../provided_modules/axis_i2s2.v:51$414: $auto$alumacc.cc:485:replace_alu$1151
  creating $alu cell for $flatten\sm.$add$statemachine.sv:134$406: $auto$alumacc.cc:485:replace_alu$1154
  creating $alu cell for $flatten\sm.\pausecounter_inst.\adder_inst.$add$counter.sv:104$525: $auto$alumacc.cc:485:replace_alu$1157
  creating $alu cell for $flatten\sm.\playcounter_inst.\adder_inst.$add$counter.sv:104$525: $auto$alumacc.cc:485:replace_alu$1160
  creating $alu cell for $flatten\sound.$add$sine.sv:37$388: $auto$alumacc.cc:485:replace_alu$1163
  creating $alu cell for $flatten\sound.$neg$sine.sv:52$391: $auto$alumacc.cc:485:replace_alu$1166
  created 8 $alu and 0 $macc cells.

9.22. Executing OPT pass (performing simple optimizations).

9.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

9.22.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

9.22.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

9.22.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.22.6. Executing OPT_DFF pass (perform DFF optimizations).

9.22.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

9.22.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.22.9. Rerunning OPT passes. (Maybe there is more to do..)

9.22.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

9.22.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

9.22.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.22.13. Executing OPT_DFF pass (perform DFF optimizations).

9.22.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.22.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.22.16. Finished OPT passes. (There is nothing left to do.)

9.23. Executing MEMORY pass.

9.23.1. Executing OPT_MEM pass (optimize memories).
top.sm.notes_to_play: removing const-0 lane 2
top.sm.notes_to_play: removing const-0 lane 17
top.sm.notes_to_play: removing const-0 lane 22
top.sm.notes_to_play: removing const-0 lane 26
top.sm.notes_to_play: removing const-0 lane 27
top.sm.notes_to_play: removing const-x lane 28
top.sm.notes_to_play: removing const-x lane 29
top.sm.notes_to_play: removing const-x lane 30
top.sm.notes_to_play: removing const-x lane 31
top.sound.quarterwave: removing const-0 lane 22
top.sound.quarterwave: removing const-0 lane 23
Performed a total of 2 transformations.

9.23.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

9.23.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

9.23.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

9.23.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\sm.notes_to_play'[0] in module `\top': no output FF found.
Checking read port `\sound.quarterwave'[0] in module `\top': merging output FF to cell.
Checking read port address `\sm.notes_to_play'[0] in module `\top': merged address FF to cell.

9.23.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.23.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

9.23.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

9.23.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.23.10. Executing MEMORY_COLLECT pass (generating $mem cells).

9.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.25. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory top.sm.notes_to_play
using FF mapping for memory top.sound.quarterwave
<suppressed ~92 debug messages>

9.26. Executing TECHMAP pass (map to technology primitives).

9.26.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

9.26.2. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

9.26.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

9.27. Executing ICE40_BRAMINIT pass.

9.28. Executing OPT pass (performing simple optimizations).

9.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~32 debug messages>

9.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.28.3. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 1 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 2 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 3 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 4 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 5 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 6 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 7 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 8 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 9 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 10 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 11 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 12 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 13 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 14 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 15 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 16 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 17 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 18 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 19 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 20 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 1-bit at position 21 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 0-bit at position 22 on $auto$ff.cc:266:slice$986 ($dffe) from module top.
Setting constant 0-bit at position 23 on $auto$ff.cc:266:slice$986 ($dffe) from module top.

9.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 32 unused wires.
<suppressed ~2 debug messages>

9.28.5. Rerunning OPT passes. (Removed registers in this run.)

9.28.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

9.28.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.28.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$1114 ($dffe) from module top (D = \i2s2_inst.tx_data_l [0], Q = \i2s2_inst.tx_data_l_shift [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$1107 ($dffe) from module top (D = \i2s2_inst.tx_data_r [0], Q = \i2s2_inst.tx_data_r_shift [0], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$1007 ($dffe) from module top (D = $flatten\sound.$neg$sine.sv:52$391_Y [23:22], Q = \sound.sine_val [23:22], rval = 2'00).

9.28.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

9.28.10. Rerunning OPT passes. (Removed registers in this run.)

9.28.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.28.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.28.13. Executing OPT_DFF pass (perform DFF optimizations).

9.28.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.28.15. Finished fast OPT passes.

9.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \sm.notes_to_play in module \top:
  created 14 $dff cells and 0 static cells of width 23.
Extracted data FF from read port 0 of top.sm.notes_to_play: $\sm.notes_to_play$rdreg[0]
  read interface: 1 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory \sound.quarterwave in module \top:
  created 64 $dff cells and 0 static cells of width 22.
Extracted data FF from read port 0 of top.sound.quarterwave: $\sound.quarterwave$rdreg[0]
  read interface: 1 $dff and 63 $mux cells.
  write interface: 0 write mux blocks.

9.30. Executing OPT pass (performing simple optimizations).

9.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~7 debug messages>

9.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~15 debug messages>

9.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][26]$1442:
      Old ports: A=22'1111010011111010000010, B=22'1111011010111010000001, Y=$memory\sound.quarterwave$rdmux[0][4][13]$a$1356
      New ports: A=2'10, B=2'01, Y=$memory\sound.quarterwave$rdmux[0][4][13]$a$1356 [1:0]
      New connections: $memory\sound.quarterwave$rdmux[0][4][13]$a$1356 [21:2] = { 6'111101 $memory\sound.quarterwave$rdmux[0][4][13]$a$1356 [0] 2'01 $memory\sound.quarterwave$rdmux[0][4][13]$a$1356 [1] 10'1110100000 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][25]$1439:
      Old ports: A=22'1111000100001001000010, B=22'1111001100010100010001, Y=$memory\sound.quarterwave$rdmux[0][4][12]$b$1354
      New ports: A=2'10, B=2'01, Y=$memory\sound.quarterwave$rdmux[0][4][12]$b$1354 [1:0]
      New connections: $memory\sound.quarterwave$rdmux[0][4][12]$b$1354 [21:2] = { 6'111100 $memory\sound.quarterwave$rdmux[0][4][12]$b$1354 [0] 4'1000 $memory\sound.quarterwave$rdmux[0][4][12]$b$1354 [0] $memory\sound.quarterwave$rdmux[0][4][12]$b$1354 [1:0] 1'0 $memory\sound.quarterwave$rdmux[0][4][12]$b$1354 [1] 1'0 $memory\sound.quarterwave$rdmux[0][4][12]$b$1354 [0] 2'00 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][24]$1436:
      Old ports: A=22'1110110010000011010111, B=22'1110111011011000100111, Y=$memory\sound.quarterwave$rdmux[0][4][12]$a$1353
      New ports: A=2'01, B=2'10, Y=$memory\sound.quarterwave$rdmux[0][4][12]$a$1353 [5:4]
      New connections: { $memory\sound.quarterwave$rdmux[0][4][12]$a$1353 [21:6] $memory\sound.quarterwave$rdmux[0][4][12]$a$1353 [3:0] } = { 6'111011 $memory\sound.quarterwave$rdmux[0][4][12]$a$1353 [5] 2'01 $memory\sound.quarterwave$rdmux[0][4][12]$a$1353 [5] 1'0 $memory\sound.quarterwave$rdmux[0][4][12]$a$1353 [5] $memory\sound.quarterwave$rdmux[0][4][12]$a$1353 [5] 1'0 $memory\sound.quarterwave$rdmux[0][4][12]$a$1353 [4] $memory\sound.quarterwave$rdmux[0][4][12]$a$1353 [4] 4'0111 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][23]$1433:
      Old ports: A=22'1110011101101011110101, B=22'1110101000001001101001, Y=$memory\sound.quarterwave$rdmux[0][4][11]$b$1351
      New ports: A=2'01, B=2'10, Y=$memory\sound.quarterwave$rdmux[0][4][11]$b$1351 [3:2]
      New connections: { $memory\sound.quarterwave$rdmux[0][4][11]$b$1351 [21:4] $memory\sound.quarterwave$rdmux[0][4][11]$b$1351 [1:0] } = { 4'1110 $memory\sound.quarterwave$rdmux[0][4][11]$b$1351 [3:2] 1'1 $memory\sound.quarterwave$rdmux[0][4][11]$b$1351 [2] 1'0 $memory\sound.quarterwave$rdmux[0][4][11]$b$1351 [2] $memory\sound.quarterwave$rdmux[0][4][11]$b$1351 [2] 3'010 $memory\sound.quarterwave$rdmux[0][4][11]$b$1351 [2] 2'11 $memory\sound.quarterwave$rdmux[0][4][11]$b$1351 [2] 2'01 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][22]$1430:
      Old ports: A=22'1110000111000101100101, B=22'1110010010101010010110, Y=$memory\sound.quarterwave$rdmux[0][4][11]$a$1350
      New ports: A=2'01, B=2'10, Y=$memory\sound.quarterwave$rdmux[0][4][11]$a$1350 [1:0]
      New connections: $memory\sound.quarterwave$rdmux[0][4][11]$a$1350 [21:2] = { 5'11100 $memory\sound.quarterwave$rdmux[0][4][11]$a$1350 [1] 1'0 $memory\sound.quarterwave$rdmux[0][4][11]$a$1350 [0] 1'1 $memory\sound.quarterwave$rdmux[0][4][11]$a$1350 [0] $memory\sound.quarterwave$rdmux[0][4][11]$a$1350 [1] 1'0 $memory\sound.quarterwave$rdmux[0][4][11]$a$1350 [1:0] $memory\sound.quarterwave$rdmux[0][4][11]$a$1350 [1:0] $memory\sound.quarterwave$rdmux[0][4][11]$a$1350 [0] $memory\sound.quarterwave$rdmux[0][4][11]$a$1350 [1] 2'01 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][21]$1427:
      Old ports: A=22'1101101110010100000110, B=22'1101111010111110000001, Y=$memory\sound.quarterwave$rdmux[0][4][10]$b$1348
      New ports: A=2'10, B=2'01, Y=$memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [1:0]
      New connections: $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [21:2] = { 5'11011 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [0] 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [1] 2'10 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [0] 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [0] 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [0] 4'0000 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [1] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][20]$1424:
      Old ports: A=22'1101010011011011001100, B=22'1101100001001000010100, Y=$memory\sound.quarterwave$rdmux[0][4][10]$a$1347
      New ports: A=2'01, B=2'10, Y=$memory\sound.quarterwave$rdmux[0][4][10]$a$1347 [4:3]
      New connections: { $memory\sound.quarterwave$rdmux[0][4][10]$a$1347 [21:5] $memory\sound.quarterwave$rdmux[0][4][10]$a$1347 [2:0] } = { 4'1101 $memory\sound.quarterwave$rdmux[0][4][10]$a$1347 [4:3] 2'00 $memory\sound.quarterwave$rdmux[0][4][10]$a$1347 [3] 2'10 $memory\sound.quarterwave$rdmux[0][4][10]$a$1347 [3] 2'10 $memory\sound.quarterwave$rdmux[0][4][10]$a$1347 [3] $memory\sound.quarterwave$rdmux[0][4][10]$a$1347 [3] 4'0100 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][19]$1421:
      Old ports: A=22'1100110110011111000000, B=22'1101000101001101001111, Y=$memory\sound.quarterwave$rdmux[0][4][9]$b$1345
      New ports: A=2'10, B=2'01, Y={ $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [7] $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [21:8] $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [6:1] } = { 3'110 $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [0] $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [7] $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [7] 2'01 $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [7] $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [0] 1'0 $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [7] 5'11100 $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [0] $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [0] $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [0] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][18]$1418:
      Old ports: A=22'1100010111100100000000, B=22'1100100111010001000100, Y=$memory\sound.quarterwave$rdmux[0][4][9]$a$1344
      New ports: A=2'10, B=2'01, Y={ $memory\sound.quarterwave$rdmux[0][4][9]$a$1344 [8] $memory\sound.quarterwave$rdmux[0][4][9]$a$1344 [2] }
      New connections: { $memory\sound.quarterwave$rdmux[0][4][9]$a$1344 [21:9] $memory\sound.quarterwave$rdmux[0][4][9]$a$1344 [7:3] $memory\sound.quarterwave$rdmux[0][4][9]$a$1344 [1:0] } = { 4'1100 $memory\sound.quarterwave$rdmux[0][4][9]$a$1344 [2] $memory\sound.quarterwave$rdmux[0][4][9]$a$1344 [8] 4'0111 $memory\sound.quarterwave$rdmux[0][4][9]$a$1344 [8] $memory\sound.quarterwave$rdmux[0][4][9]$a$1344 [2] 2'00 $memory\sound.quarterwave$rdmux[0][4][9]$a$1344 [2] 5'00000 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][17]$1415:
      Old ports: A=22'1011110110101110111110, B=22'1100000111011000011100, Y=$memory\sound.quarterwave$rdmux[0][4][8]$b$1342
      New ports: A=2'01, B=2'10, Y={ $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [10] $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [1] }
      New connections: { $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [21:11] $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [9:2] $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [0] } = { 1'1 $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [10] $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [1] $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [1] $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [1] $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [1] 3'011 $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [10] $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [1] 1'1 $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [1] $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [1] 1'0 $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [1] 4'1110 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][16]$1412:
      Old ports: A=22'1011010100000100111100, B=22'1011100101101000010000, Y=$memory\sound.quarterwave$rdmux[0][4][8]$a$1341
      New ports: A=2'01, B=2'10, Y={ $memory\sound.quarterwave$rdmux[0][4][8]$a$1341 [9] $memory\sound.quarterwave$rdmux[0][4][8]$a$1341 [2] }
      New connections: { $memory\sound.quarterwave$rdmux[0][4][8]$a$1341 [21:10] $memory\sound.quarterwave$rdmux[0][4][8]$a$1341 [8:3] $memory\sound.quarterwave$rdmux[0][4][8]$a$1341 [1:0] } = { 4'1011 $memory\sound.quarterwave$rdmux[0][4][8]$a$1341 [9] $memory\sound.quarterwave$rdmux[0][4][8]$a$1341 [2] 3'010 $memory\sound.quarterwave$rdmux[0][4][8]$a$1341 [9] $memory\sound.quarterwave$rdmux[0][4][8]$a$1341 [9] 1'0 $memory\sound.quarterwave$rdmux[0][4][8]$a$1341 [2] 2'00 $memory\sound.quarterwave$rdmux[0][4][8]$a$1341 [2] 1'1 $memory\sound.quarterwave$rdmux[0][4][8]$a$1341 [2] 2'00 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][15]$1409:
      Old ports: A=22'1010101111101011010010, B=22'1011000010000101101110, Y=$memory\sound.quarterwave$rdmux[0][4][7]$b$1339
      New ports: A=2'10, B=2'01, Y={ $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [4] $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [2] }
      New connections: { $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [21:5] $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [3] $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [1:0] } = { 3'101 $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [2] $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [4] 1'0 $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [4] $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [4] 1'1 $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [4] $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [4] 1'0 $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [4] $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [2] $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [4] 1'1 $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [2] $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [2] 2'10 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][14]$1406:
      Old ports: A=22'1010001001100111100110, B=22'1010011100110110010101, Y=$memory\sound.quarterwave$rdmux[0][4][7]$a$1338
      New ports: A=2'10, B=2'01, Y=$memory\sound.quarterwave$rdmux[0][4][7]$a$1338 [1:0]
      New connections: $memory\sound.quarterwave$rdmux[0][4][7]$a$1338 [21:2] = { 5'10100 $memory\sound.quarterwave$rdmux[0][4][7]$a$1338 [0] 1'1 $memory\sound.quarterwave$rdmux[0][4][7]$a$1338 [0] 1'0 $memory\sound.quarterwave$rdmux[0][4][7]$a$1338 [1] 1'1 $memory\sound.quarterwave$rdmux[0][4][7]$a$1338 [0] 3'011 $memory\sound.quarterwave$rdmux[0][4][7]$a$1338 [1] $memory\sound.quarterwave$rdmux[0][4][7]$a$1338 [1:0] 2'01 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][13]$1403:
      Old ports: A=22'1001100001111111101111, B=22'1001110101111111110100, Y=$memory\sound.quarterwave$rdmux[0][4][6]$b$1336
      New ports: A=2'01, B=2'10, Y={ $memory\sound.quarterwave$rdmux[0][4][6]$b$1336 [4] $memory\sound.quarterwave$rdmux[0][4][6]$b$1336 [0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][4][6]$b$1336 [21:5] $memory\sound.quarterwave$rdmux[0][4][6]$b$1336 [3:1] } = { 5'10011 $memory\sound.quarterwave$rdmux[0][4][6]$b$1336 [4] 1'0 $memory\sound.quarterwave$rdmux[0][4][6]$b$1336 [4] 9'011111111 $memory\sound.quarterwave$rdmux[0][4][6]$b$1336 [0] 1'1 $memory\sound.quarterwave$rdmux[0][4][6]$b$1336 [0] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][12]$1400:
      Old ports: A=22'1000111000111001110110, B=22'1001001101101000001010, Y=$memory\sound.quarterwave$rdmux[0][4][6]$a$1335
      New ports: A=2'01, B=2'10, Y=$memory\sound.quarterwave$rdmux[0][4][6]$a$1335 [3:2]
      New connections: { $memory\sound.quarterwave$rdmux[0][4][6]$a$1335 [21:4] $memory\sound.quarterwave$rdmux[0][4][6]$a$1335 [1:0] } = { 3'100 $memory\sound.quarterwave$rdmux[0][4][6]$a$1335 [3:2] $memory\sound.quarterwave$rdmux[0][4][6]$a$1335 [2] 1'1 $memory\sound.quarterwave$rdmux[0][4][6]$a$1335 [3] 1'0 $memory\sound.quarterwave$rdmux[0][4][6]$a$1335 [3] 1'1 $memory\sound.quarterwave$rdmux[0][4][6]$a$1335 [2] 3'100 $memory\sound.quarterwave$rdmux[0][4][6]$a$1335 [2] $memory\sound.quarterwave$rdmux[0][4][6]$a$1335 [2] $memory\sound.quarterwave$rdmux[0][4][6]$a$1335 [2] 2'10 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][11]$1397:
      Old ports: A=22'1000001110011100001111, B=22'1000100011110101100110, Y=$memory\sound.quarterwave$rdmux[0][4][5]$b$1333
      New ports: A=2'01, B=2'10, Y={ $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [5] $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [21:6] $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [4:1] } = { 4'1000 $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [5] 1'0 $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [0] $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [0] 1'1 $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [5] $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [5] 1'1 $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [0] 2'10 $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [5] 1'0 $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [0] 2'11 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][10]$1394:
      Old ports: A=22'0111100010101101011101, B=22'0111111000101110100100, Y=$memory\sound.quarterwave$rdmux[0][4][5]$a$1332
      New ports: A=2'01, B=2'10, Y={ $memory\sound.quarterwave$rdmux[0][4][5]$a$1332 [5] $memory\sound.quarterwave$rdmux[0][4][5]$a$1332 [0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][4][5]$a$1332 [21:6] $memory\sound.quarterwave$rdmux[0][4][5]$a$1332 [4:1] } = { 5'01111 $memory\sound.quarterwave$rdmux[0][4][5]$a$1332 [5] $memory\sound.quarterwave$rdmux[0][4][5]$a$1332 [5] 1'0 $memory\sound.quarterwave$rdmux[0][4][5]$a$1332 [0] 5'01011 $memory\sound.quarterwave$rdmux[0][4][5]$a$1332 [5] $memory\sound.quarterwave$rdmux[0][4][5]$a$1332 [0] $memory\sound.quarterwave$rdmux[0][4][5]$a$1332 [0] $memory\sound.quarterwave$rdmux[0][4][5]$a$1332 [0] 2'10 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][9]$1391:
      Old ports: A=22'0110110101110100010000, B=22'0111001100011001101110, Y=$memory\sound.quarterwave$rdmux[0][4][4]$b$1330
      New ports: A=2'10, B=2'01, Y={ $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [4] $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [1] }
      New connections: { $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [21:5] $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [3:2] $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [0] } = { 3'011 $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [1] $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [4] $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [4] $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [1] 2'10 $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [4] $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [4] 1'1 $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [1] $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [4] 1'0 $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [1] $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [1] $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [1] $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][8]$1388:
      Old ports: A=22'0110000111110111100010, B=22'0110011110111101111001, Y=$memory\sound.quarterwave$rdmux[0][4][4]$a$1329
      New ports: A=2'10, B=2'01, Y=$memory\sound.quarterwave$rdmux[0][4][4]$a$1329 [1:0]
      New connections: $memory\sound.quarterwave$rdmux[0][4][4]$a$1329 [21:2] = { 5'01100 $memory\sound.quarterwave$rdmux[0][4][4]$a$1329 [0] $memory\sound.quarterwave$rdmux[0][4][4]$a$1329 [0] 2'11 $memory\sound.quarterwave$rdmux[0][4][4]$a$1329 [1] 2'11 $memory\sound.quarterwave$rdmux[0][4][4]$a$1329 [0] 1'1 $memory\sound.quarterwave$rdmux[0][4][4]$a$1329 [1] 2'11 $memory\sound.quarterwave$rdmux[0][4][4]$a$1329 [0] $memory\sound.quarterwave$rdmux[0][4][4]$a$1329 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][7]$1385:
      Old ports: A=22'0101011000111110011010, B=22'0101110000100010000101, Y=$memory\sound.quarterwave$rdmux[0][4][3]$b$1327
      New ports: A=2'10, B=2'01, Y=$memory\sound.quarterwave$rdmux[0][4][3]$b$1327 [1:0]
      New connections: $memory\sound.quarterwave$rdmux[0][4][3]$b$1327 [21:2] = { 4'0101 $memory\sound.quarterwave$rdmux[0][4][3]$b$1327 [0] 1'1 $memory\sound.quarterwave$rdmux[0][4][3]$b$1327 [1] 4'0001 $memory\sound.quarterwave$rdmux[0][4][3]$b$1327 [1] $memory\sound.quarterwave$rdmux[0][4][3]$b$1327 [1] $memory\sound.quarterwave$rdmux[0][4][3]$b$1327 [1] 3'100 $memory\sound.quarterwave$rdmux[0][4][3]$b$1327 [1] $memory\sound.quarterwave$rdmux[0][4][3]$b$1327 [1:0] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][6]$1382:
      Old ports: A=22'0100101001010000000110, B=22'0101000001001101011100, Y=$memory\sound.quarterwave$rdmux[0][4][3]$a$1326
      New ports: A=2'01, B=2'10, Y={ $memory\sound.quarterwave$rdmux[0][4][3]$a$1326 [3] $memory\sound.quarterwave$rdmux[0][4][3]$a$1326 [1] }
      New connections: { $memory\sound.quarterwave$rdmux[0][4][3]$a$1326 [21:4] $memory\sound.quarterwave$rdmux[0][4][3]$a$1326 [2] $memory\sound.quarterwave$rdmux[0][4][3]$a$1326 [0] } = { 3'010 $memory\sound.quarterwave$rdmux[0][4][3]$a$1326 [3] $memory\sound.quarterwave$rdmux[0][4][3]$a$1326 [1] 1'0 $memory\sound.quarterwave$rdmux[0][4][3]$a$1326 [1] 4'0010 $memory\sound.quarterwave$rdmux[0][4][3]$a$1326 [1] $memory\sound.quarterwave$rdmux[0][4][3]$a$1326 [3] $memory\sound.quarterwave$rdmux[0][4][3]$a$1326 [3] 1'0 $memory\sound.quarterwave$rdmux[0][4][3]$a$1326 [3] 1'0 $memory\sound.quarterwave$rdmux[0][4][3]$a$1326 [3] 2'10 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][5]$1379:
      Old ports: A=22'0011111000110011111100, B=22'0100010001000111010010, Y=$memory\sound.quarterwave$rdmux[0][4][2]$b$1324
      New ports: A=2'10, B=2'01, Y=$memory\sound.quarterwave$rdmux[0][4][2]$b$1324 [2:1]
      New connections: { $memory\sound.quarterwave$rdmux[0][4][2]$b$1324 [21:3] $memory\sound.quarterwave$rdmux[0][4][2]$b$1324 [0] } = { 1'0 $memory\sound.quarterwave$rdmux[0][4][2]$b$1324 [1] $memory\sound.quarterwave$rdmux[0][4][2]$b$1324 [2] $memory\sound.quarterwave$rdmux[0][4][2]$b$1324 [2] $memory\sound.quarterwave$rdmux[0][4][2]$b$1324 [2] 1'1 $memory\sound.quarterwave$rdmux[0][4][2]$b$1324 [2] 2'00 $memory\sound.quarterwave$rdmux[0][4][2]$b$1324 [1] $memory\sound.quarterwave$rdmux[0][4][2]$b$1324 [2] $memory\sound.quarterwave$rdmux[0][4][2]$b$1324 [2] 1'0 $memory\sound.quarterwave$rdmux[0][4][2]$b$1324 [1] 2'11 $memory\sound.quarterwave$rdmux[0][4][2]$b$1324 [2] 1'1 $memory\sound.quarterwave$rdmux[0][4][2]$b$1324 [2] 1'0 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][4]$1376:
      Old ports: A=22'0011000111110001011100, B=22'0011100000010111000001, Y=$memory\sound.quarterwave$rdmux[0][4][2]$a$1323
      New ports: A=2'10, B=2'01, Y={ $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [2] $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [21:3] $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [1] } = { 4'0011 $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [0] 2'00 $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [2] $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [2] $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [2] $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [2] 2'10 $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [0] $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [0] 2'10 $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [2] $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [2] 1'0 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][3]$1373:
      Old ports: A=22'0010010110010000001000, B=22'0010101111000100001010, Y=$memory\sound.quarterwave$rdmux[0][4][1]$b$1321
      New ports: A=2'10, B=2'01, Y={ $memory\sound.quarterwave$rdmux[0][4][1]$b$1321 [10] $memory\sound.quarterwave$rdmux[0][4][1]$b$1321 [1] }
      New connections: { $memory\sound.quarterwave$rdmux[0][4][1]$b$1321 [21:11] $memory\sound.quarterwave$rdmux[0][4][1]$b$1321 [9:2] $memory\sound.quarterwave$rdmux[0][4][1]$b$1321 [0] } = { 4'0010 $memory\sound.quarterwave$rdmux[0][4][1]$b$1321 [1] $memory\sound.quarterwave$rdmux[0][4][1]$b$1321 [10] $memory\sound.quarterwave$rdmux[0][4][1]$b$1321 [1] 2'11 $memory\sound.quarterwave$rdmux[0][4][1]$b$1321 [1] 2'00 $memory\sound.quarterwave$rdmux[0][4][1]$b$1321 [1] 7'0000100 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][2]$1370:
      Old ports: A=22'0001100100010111101001, B=22'0001111101010110010011, Y=$memory\sound.quarterwave$rdmux[0][4][1]$a$1320
      New ports: A=2'10, B=2'01, Y={ $memory\sound.quarterwave$rdmux[0][4][1]$a$1320 [3] $memory\sound.quarterwave$rdmux[0][4][1]$a$1320 [1] }
      New connections: { $memory\sound.quarterwave$rdmux[0][4][1]$a$1320 [21:4] $memory\sound.quarterwave$rdmux[0][4][1]$a$1320 [2] $memory\sound.quarterwave$rdmux[0][4][1]$a$1320 [0] } = { 5'00011 $memory\sound.quarterwave$rdmux[0][4][1]$a$1320 [1] $memory\sound.quarterwave$rdmux[0][4][1]$a$1320 [1] 2'10 $memory\sound.quarterwave$rdmux[0][4][1]$a$1320 [1] 5'01011 $memory\sound.quarterwave$rdmux[0][4][1]$a$1320 [3] $memory\sound.quarterwave$rdmux[0][4][1]$a$1320 [3] $memory\sound.quarterwave$rdmux[0][4][1]$a$1320 [1] 2'01 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][1]$1367:
      Old ports: A=22'0000110010001111101100, B=22'0001001011010101001000, Y=$memory\sound.quarterwave$rdmux[0][4][0]$b$1318
      New ports: A=2'01, B=2'10, Y={ $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [10] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [2] }
      New connections: { $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [21:11] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [9:3] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [1:0] } = { 3'000 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [10] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [2] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [2] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [10] 2'01 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [10] 1'0 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [2] 1'1 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [2] 1'1 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [2] 4'0100 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][0]$1364:
      Old ports: A=22'0000000000000000000000, B=22'0000011001001000010101, Y=$memory\sound.quarterwave$rdmux[0][4][0]$a$1317
      New ports: A=1'0, B=1'1, Y=$memory\sound.quarterwave$rdmux[0][4][0]$a$1317 [0]
      New connections: $memory\sound.quarterwave$rdmux[0][4][0]$a$1317 [21:1] = { 5'00000 $memory\sound.quarterwave$rdmux[0][4][0]$a$1317 [0] $memory\sound.quarterwave$rdmux[0][4][0]$a$1317 [0] 2'00 $memory\sound.quarterwave$rdmux[0][4][0]$a$1317 [0] 2'00 $memory\sound.quarterwave$rdmux[0][4][0]$a$1317 [0] 4'0000 $memory\sound.quarterwave$rdmux[0][4][0]$a$1317 [0] 1'0 $memory\sound.quarterwave$rdmux[0][4][0]$a$1317 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory\sm.notes_to_play$rdmux[0][3][6]$1265:
      Old ports: A=23'01111000000011010111101, B=23'00000000000000000000000, Y=$memory\sm.notes_to_play$rdmux[0][2][3]$a$1245
      New ports: A=1'1, B=1'0, Y=$memory\sm.notes_to_play$rdmux[0][2][3]$a$1245 [0]
      New connections: $memory\sm.notes_to_play$rdmux[0][2][3]$a$1245 [22:1] = { 1'0 $memory\sm.notes_to_play$rdmux[0][2][3]$a$1245 [0] $memory\sm.notes_to_play$rdmux[0][2][3]$a$1245 [0] $memory\sm.notes_to_play$rdmux[0][2][3]$a$1245 [0] $memory\sm.notes_to_play$rdmux[0][2][3]$a$1245 [0] 7'0000000 $memory\sm.notes_to_play$rdmux[0][2][3]$a$1245 [0] $memory\sm.notes_to_play$rdmux[0][2][3]$a$1245 [0] 1'0 $memory\sm.notes_to_play$rdmux[0][2][3]$a$1245 [0] 1'0 $memory\sm.notes_to_play$rdmux[0][2][3]$a$1245 [0] $memory\sm.notes_to_play$rdmux[0][2][3]$a$1245 [0] $memory\sm.notes_to_play$rdmux[0][2][3]$a$1245 [0] $memory\sm.notes_to_play$rdmux[0][2][3]$a$1245 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][30]$1454:
      Old ports: A=22'1111111011000100011011, B=22'1111111101001110011011, Y=$memory\sound.quarterwave$rdmux[0][4][15]$a$1362
      New ports: A=2'10, B=2'01, Y={ $memory\sound.quarterwave$rdmux[0][4][15]$a$1362 [13] $memory\sound.quarterwave$rdmux[0][4][15]$a$1362 [7] }
      New connections: { $memory\sound.quarterwave$rdmux[0][4][15]$a$1362 [21:14] $memory\sound.quarterwave$rdmux[0][4][15]$a$1362 [12:8] $memory\sound.quarterwave$rdmux[0][4][15]$a$1362 [6:0] } = { 7'1111111 $memory\sound.quarterwave$rdmux[0][4][15]$a$1362 [7] 3'100 $memory\sound.quarterwave$rdmux[0][4][15]$a$1362 [7] 8'10011011 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][29]$1451:
      Old ports: A=22'1111110100111010101010, B=22'1111111000010011001000, Y=$memory\sound.quarterwave$rdmux[0][4][14]$b$1360
      New ports: A=2'01, B=2'10, Y={ $memory\sound.quarterwave$rdmux[0][4][14]$b$1360 [6] $memory\sound.quarterwave$rdmux[0][4][14]$b$1360 [1] }
      New connections: { $memory\sound.quarterwave$rdmux[0][4][14]$b$1360 [21:7] $memory\sound.quarterwave$rdmux[0][4][14]$b$1360 [5:2] $memory\sound.quarterwave$rdmux[0][4][14]$b$1360 [0] } = { 6'111111 $memory\sound.quarterwave$rdmux[0][4][14]$b$1360 [6] $memory\sound.quarterwave$rdmux[0][4][14]$b$1360 [1] 2'00 $memory\sound.quarterwave$rdmux[0][4][14]$b$1360 [1] 1'1 $memory\sound.quarterwave$rdmux[0][4][14]$b$1360 [1] 2'01 $memory\sound.quarterwave$rdmux[0][4][14]$b$1360 [1] 4'0100 }
    Consolidated identical input bits for $mux cell $memory\sm.notes_to_play$rdmux[0][3][3]$1256:
      Old ports: A=23'01111000000011010111101, B=23'01100000111001111111010, Y=$memory\sm.notes_to_play$rdmux[0][2][1]$b$1240
      New ports: A=2'01, B=2'10, Y=$memory\sm.notes_to_play$rdmux[0][2][1]$b$1240 [1:0]
      New connections: $memory\sm.notes_to_play$rdmux[0][2][1]$b$1240 [22:2] = { 3'011 $memory\sm.notes_to_play$rdmux[0][2][1]$b$1240 [0] $memory\sm.notes_to_play$rdmux[0][2][1]$b$1240 [0] 3'000 $memory\sm.notes_to_play$rdmux[0][2][1]$b$1240 [1] $memory\sm.notes_to_play$rdmux[0][2][1]$b$1240 [1] $memory\sm.notes_to_play$rdmux[0][2][1]$b$1240 [1] 1'0 $memory\sm.notes_to_play$rdmux[0][2][1]$b$1240 [0] 1'1 $memory\sm.notes_to_play$rdmux[0][2][1]$b$1240 [1] 1'1 $memory\sm.notes_to_play$rdmux[0][2][1]$b$1240 [1] 3'111 $memory\sm.notes_to_play$rdmux[0][2][1]$b$1240 [0] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][27]$1445:
      Old ports: A=22'1111100001010011111101, B=22'1111100111000111100111, Y=$memory\sound.quarterwave$rdmux[0][4][13]$b$1357
      New ports: A=2'10, B=2'01, Y={ $memory\sound.quarterwave$rdmux[0][4][13]$b$1357 [3] $memory\sound.quarterwave$rdmux[0][4][13]$b$1357 [1] }
      New connections: { $memory\sound.quarterwave$rdmux[0][4][13]$b$1357 [21:4] $memory\sound.quarterwave$rdmux[0][4][13]$b$1357 [2] $memory\sound.quarterwave$rdmux[0][4][13]$b$1357 [0] } = { 7'1111100 $memory\sound.quarterwave$rdmux[0][4][13]$b$1357 [1] $memory\sound.quarterwave$rdmux[0][4][13]$b$1357 [1] 2'10 $memory\sound.quarterwave$rdmux[0][4][13]$b$1357 [3] 1'0 $memory\sound.quarterwave$rdmux[0][4][13]$b$1357 [1] 3'111 $memory\sound.quarterwave$rdmux[0][4][13]$b$1357 [3] 2'11 }
    Consolidated identical input bits for $mux cell $memory\sm.notes_to_play$rdmux[0][3][1]$1250:
      Old ports: A=23'10110111110101011001001, B=23'01100000111001111111010, Y=$memory\sm.notes_to_play$rdmux[0][2][0]$b$1237
      New ports: A=2'01, B=2'10, Y=$memory\sm.notes_to_play$rdmux[0][2][0]$b$1237 [1:0]
      New connections: $memory\sm.notes_to_play$rdmux[0][2][0]$b$1237 [22:2] = { $memory\sm.notes_to_play$rdmux[0][2][0]$b$1237 [0] $memory\sm.notes_to_play$rdmux[0][2][0]$b$1237 [1] 1'1 $memory\sm.notes_to_play$rdmux[0][2][0]$b$1237 [0] 1'0 $memory\sm.notes_to_play$rdmux[0][2][0]$b$1237 [0] $memory\sm.notes_to_play$rdmux[0][2][0]$b$1237 [0] $memory\sm.notes_to_play$rdmux[0][2][0]$b$1237 [0] 2'11 $memory\sm.notes_to_play$rdmux[0][2][0]$b$1237 [1:0] 2'01 $memory\sm.notes_to_play$rdmux[0][2][0]$b$1237 [1] 2'11 $memory\sm.notes_to_play$rdmux[0][2][0]$b$1237 [1] $memory\sm.notes_to_play$rdmux[0][2][0]$b$1237 [1] 2'10 }
    Consolidated identical input bits for $mux cell $memory\sm.notes_to_play$rdmux[0][3][0]$1247:
      Old ports: A=23'01111000000011010111101, B=23'01100000111001111111010, Y=$memory\sm.notes_to_play$rdmux[0][2][0]$a$1236
      New ports: A=2'01, B=2'10, Y=$memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [1:0]
      New connections: $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [22:2] = { 3'011 $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [0] $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [0] 3'000 $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [1] $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [1] $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [1] 1'0 $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [0] 1'1 $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [1] 1'1 $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [1] 3'111 $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [0] }
    Consolidated identical input bits for $mux cell $memory\sm.notes_to_play$rdmux[0][2][2]$1241:
      Old ports: A=23'01100000111001111111010, B=23'01111000000011010111101, Y=$memory\sm.notes_to_play$rdmux[0][1][1]$a$1233
      New ports: A=2'10, B=2'01, Y=$memory\sm.notes_to_play$rdmux[0][1][1]$a$1233 [1:0]
      New connections: $memory\sm.notes_to_play$rdmux[0][1][1]$a$1233 [22:2] = { 3'011 $memory\sm.notes_to_play$rdmux[0][1][1]$a$1233 [0] $memory\sm.notes_to_play$rdmux[0][1][1]$a$1233 [0] 3'000 $memory\sm.notes_to_play$rdmux[0][1][1]$a$1233 [1] $memory\sm.notes_to_play$rdmux[0][1][1]$a$1233 [1] $memory\sm.notes_to_play$rdmux[0][1][1]$a$1233 [1] 1'0 $memory\sm.notes_to_play$rdmux[0][1][1]$a$1233 [0] 1'1 $memory\sm.notes_to_play$rdmux[0][1][1]$a$1233 [1] 1'1 $memory\sm.notes_to_play$rdmux[0][1][1]$a$1233 [1] 3'111 $memory\sm.notes_to_play$rdmux[0][1][1]$a$1233 [0] }
    Consolidated identical input bits for $mux cell $flatten\sm.$procmux$852:
      Old ports: A={ 6'xxxx00 $flatten\sm.$memrd$\notes_to_play$statemachine.sv:80$401_DATA [25:23] 1'0 $flatten\sm.$memrd$\notes_to_play$statemachine.sv:80$401_DATA [21:18] 1'0 $flatten\sm.$memrd$\notes_to_play$statemachine.sv:80$401_DATA [16:3] 1'0 $flatten\sm.$memrd$\notes_to_play$statemachine.sv:80$401_DATA [1:0] }, B=0, Y=\sm.nfstep_l
      New ports: A={ 1'x $flatten\sm.$memrd$\notes_to_play$statemachine.sv:80$401_DATA [25:23] $flatten\sm.$memrd$\notes_to_play$statemachine.sv:80$401_DATA [21:18] $flatten\sm.$memrd$\notes_to_play$statemachine.sv:80$401_DATA [16:3] $flatten\sm.$memrd$\notes_to_play$statemachine.sv:80$401_DATA [1:0] }, B=24'000000000000000000000000, Y={ \sm.nfstep_l [28] \sm.nfstep_l [25:23] \sm.nfstep_l [21:18] \sm.nfstep_l [16:3] \sm.nfstep_l [1:0] }
      New connections: { \sm.nfstep_l [31:29] \sm.nfstep_l [27:26] \sm.nfstep_l [22] \sm.nfstep_l [17] \sm.nfstep_l [2] } = { \sm.nfstep_l [28] \sm.nfstep_l [28] \sm.nfstep_l [28] 5'00000 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][28]$1448:
      Old ports: A=22'1111101100010100101111, B=22'1111110000111011001001, Y=$memory\sound.quarterwave$rdmux[0][4][14]$a$1359
      New ports: A=2'01, B=2'10, Y={ $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [6] $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [1] }
      New connections: { $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [21:7] $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [5:2] $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [0] } = { 5'11111 $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [6] $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [1] $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [1] 2'00 $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [6] 1'1 $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [6] $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [1] $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [6] $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [1] 2'01 $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [1] 1'1 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][5][31]$1457:
      Old ports: A=22'1111111110110001000011, B=22'1111111111101100010000, Y=$memory\sound.quarterwave$rdmux[0][4][15]$b$1363
      New ports: A=2'01, B=2'10, Y={ $memory\sound.quarterwave$rdmux[0][4][15]$b$1363 [4] $memory\sound.quarterwave$rdmux[0][4][15]$b$1363 [0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][4][15]$b$1363 [21:5] $memory\sound.quarterwave$rdmux[0][4][15]$b$1363 [3:1] } = { 9'111111111 $memory\sound.quarterwave$rdmux[0][4][15]$b$1363 [4] 1'1 $memory\sound.quarterwave$rdmux[0][4][15]$b$1363 [0] $memory\sound.quarterwave$rdmux[0][4][15]$b$1363 [4] $memory\sound.quarterwave$rdmux[0][4][15]$b$1363 [4] 1'0 $memory\sound.quarterwave$rdmux[0][4][15]$b$1363 [0] 3'000 $memory\sound.quarterwave$rdmux[0][4][15]$b$1363 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][15]$1361:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][4][15]$a$1362, B=$memory\sound.quarterwave$rdmux[0][4][15]$b$1363, Y=$memory\sound.quarterwave$rdmux[0][3][7]$b$1315
      New ports: A={ $memory\sound.quarterwave$rdmux[0][4][15]$a$1362 [7] $memory\sound.quarterwave$rdmux[0][4][15]$a$1362 [13] 1'0 $memory\sound.quarterwave$rdmux[0][4][15]$a$1362 [7] $memory\sound.quarterwave$rdmux[0][4][15]$a$1362 [7] 4'0111 }, B={ 3'111 $memory\sound.quarterwave$rdmux[0][4][15]$b$1363 [4] 1'0 $memory\sound.quarterwave$rdmux[0][4][15]$b$1363 [0] $memory\sound.quarterwave$rdmux[0][4][15]$b$1363 [4] 1'0 $memory\sound.quarterwave$rdmux[0][4][15]$b$1363 [0] }, Y={ $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [14:13] $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [11] $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [9] $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [7:6] $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [4:3] $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [21:15] $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [12] $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [10] $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [8] $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [5] $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [2:1] } = { 7'1111111 $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [4] $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [6] $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [4] 2'00 $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [0] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][14]$1358:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][4][14]$a$1359, B=$memory\sound.quarterwave$rdmux[0][4][14]$b$1360, Y=$memory\sound.quarterwave$rdmux[0][3][7]$a$1314
      New ports: A={ $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [1] $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [6] $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [6] $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [6] $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [1] $memory\sound.quarterwave$rdmux[0][4][14]$a$1359 [1] 1'1 }, B={ $memory\sound.quarterwave$rdmux[0][4][14]$b$1360 [6] $memory\sound.quarterwave$rdmux[0][4][14]$b$1360 [1] 1'1 $memory\sound.quarterwave$rdmux[0][4][14]$b$1360 [6] 1'0 $memory\sound.quarterwave$rdmux[0][4][14]$b$1360 [1] 1'0 }, Y={ $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [15] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [9] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [7:6] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [2:0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [21:16] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [14:10] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [8] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [5:3] } = { 5'11111 $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [7] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [1] 2'00 $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [9] 1'1 $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [2:1] 2'01 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][13]$1355:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][4][13]$a$1356, B=$memory\sound.quarterwave$rdmux[0][4][13]$b$1357, Y=$memory\sound.quarterwave$rdmux[0][3][6]$b$1312
      New ports: A={ $memory\sound.quarterwave$rdmux[0][4][13]$a$1356 [0] 1'1 $memory\sound.quarterwave$rdmux[0][4][13]$a$1356 [1] 5'11000 $memory\sound.quarterwave$rdmux[0][4][13]$a$1356 [1:0] }, B={ 1'0 $memory\sound.quarterwave$rdmux[0][4][13]$b$1357 [1] 1'1 $memory\sound.quarterwave$rdmux[0][4][13]$b$1357 [3] 1'0 $memory\sound.quarterwave$rdmux[0][4][13]$b$1357 [1] $memory\sound.quarterwave$rdmux[0][4][13]$b$1357 [3] 1'1 $memory\sound.quarterwave$rdmux[0][4][13]$b$1357 [1] 1'1 }, Y={ $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [15] $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [13:12] $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [10:8] $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [3:0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [21:16] $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [14] $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [11] $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [7:4] } = { 4'1111 $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [2] $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [9:8] $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [9] 1'1 $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [2] $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [2] $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [3] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][12]$1352:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][4][12]$a$1353, B=$memory\sound.quarterwave$rdmux[0][4][12]$b$1354, Y=$memory\sound.quarterwave$rdmux[0][3][6]$a$1311
      New ports: A={ 1'0 $memory\sound.quarterwave$rdmux[0][4][12]$a$1353 [5] $memory\sound.quarterwave$rdmux[0][4][12]$a$1353 [5] 1'0 $memory\sound.quarterwave$rdmux[0][4][12]$a$1353 [4] $memory\sound.quarterwave$rdmux[0][4][12]$a$1353 [4] $memory\sound.quarterwave$rdmux[0][4][12]$a$1353 [5:4] 3'111 }, B={ 1'1 $memory\sound.quarterwave$rdmux[0][4][12]$b$1354 [0] $memory\sound.quarterwave$rdmux[0][4][12]$b$1354 [1:0] 1'0 $memory\sound.quarterwave$rdmux[0][4][12]$b$1354 [1] 1'0 $memory\sound.quarterwave$rdmux[0][4][12]$b$1354 [0] 1'0 $memory\sound.quarterwave$rdmux[0][4][12]$b$1354 [1:0] }, Y={ $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [14] $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [10:4] $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [2:0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [21:15] $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [13:11] $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [3] } = { 3'111 $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [14] $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [2] $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [2] $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [10] $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [2] $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [5] 2'00 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][11]$1349:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][4][11]$a$1350, B=$memory\sound.quarterwave$rdmux[0][4][11]$b$1351, Y=$memory\sound.quarterwave$rdmux[0][3][5]$b$1309
      New ports: A={ 2'01 $memory\sound.quarterwave$rdmux[0][4][11]$a$1350 [0] $memory\sound.quarterwave$rdmux[0][4][11]$a$1350 [1:0] $memory\sound.quarterwave$rdmux[0][4][11]$a$1350 [1] 2'01 $memory\sound.quarterwave$rdmux[0][4][11]$a$1350 [1:0] }, B={ 2'10 $memory\sound.quarterwave$rdmux[0][4][11]$b$1351 [2] 2'10 $memory\sound.quarterwave$rdmux[0][4][11]$b$1351 [2] $memory\sound.quarterwave$rdmux[0][4][11]$b$1351 [3:2] 2'01 }, Y={ $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [15] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [13:12] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [9:8] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [4:0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [21:16] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [14] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [11:10] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [7:5] } = { 4'1110 $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [3] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [4] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [12] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [4] 1'0 $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [4] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [0] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [0] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][10]$1346:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][4][10]$a$1347, B=$memory\sound.quarterwave$rdmux[0][4][10]$b$1348, Y=$memory\sound.quarterwave$rdmux[0][3][5]$a$1308
      New ports: A={ $memory\sound.quarterwave$rdmux[0][4][10]$a$1347 [4] 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$a$1347 [3] 2'10 $memory\sound.quarterwave$rdmux[0][4][10]$a$1347 [3] $memory\sound.quarterwave$rdmux[0][4][10]$a$1347 [4:3] 3'100 }, B={ 3'101 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [0] 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [0] 2'00 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [1] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [1:0] }, Y={ $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [17] $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [12] $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [10:7] $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [4:0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [21:18] $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [16:13] $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [11] $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [6:5] } = { 4'1101 $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [7] $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [8] $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [1] $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [10] $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [0] $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [3] 1'0 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][9]$1343:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][4][9]$a$1344, B=$memory\sound.quarterwave$rdmux[0][4][9]$b$1345, Y=$memory\sound.quarterwave$rdmux[0][3][4]$b$1306
      New ports: A={ $memory\sound.quarterwave$rdmux[0][4][9]$a$1344 [8] 2'11 $memory\sound.quarterwave$rdmux[0][4][9]$a$1344 [8] $memory\sound.quarterwave$rdmux[0][4][9]$a$1344 [2] 1'0 $memory\sound.quarterwave$rdmux[0][4][9]$a$1344 [8] 1'0 $memory\sound.quarterwave$rdmux[0][4][9]$a$1344 [2] $memory\sound.quarterwave$rdmux[0][4][9]$a$1344 [2] 1'0 }, B={ $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [7] $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [7] $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [0] 1'0 $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [7] 2'11 $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [7] 1'1 $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [0] $memory\sound.quarterwave$rdmux[0][4][9]$b$1345 [0] }, Y={ $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [16] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [13:6] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [2] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [21:17] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [15:14] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [5:3] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [1] } = { 3'110 $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [0] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [10] 4'0100 $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [0] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [0] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][8]$1340:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][4][8]$a$1341, B=$memory\sound.quarterwave$rdmux[0][4][8]$b$1342, Y=$memory\sound.quarterwave$rdmux[0][3][4]$a$1305
      New ports: A={ 2'10 $memory\sound.quarterwave$rdmux[0][4][8]$a$1341 [9] $memory\sound.quarterwave$rdmux[0][4][8]$a$1341 [9] 1'0 $memory\sound.quarterwave$rdmux[0][4][8]$a$1341 [9] $memory\sound.quarterwave$rdmux[0][4][8]$a$1341 [2] $memory\sound.quarterwave$rdmux[0][4][8]$a$1341 [2] 1'0 }, B={ $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [1] 1'1 $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [10] $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [1] $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [10] 1'1 $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [1] 1'1 $memory\sound.quarterwave$rdmux[0][4][8]$b$1342 [1] }, Y={ $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [18] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [13:9] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [5] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [2:1] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [21:19] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [17:14] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [8:6] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [4:3] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [0] } = { 1'1 $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [10] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [18] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [11] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [5] 2'01 $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [5] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [1] 2'01 $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [2] 1'0 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][7]$1337:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][4][7]$a$1338, B=$memory\sound.quarterwave$rdmux[0][4][7]$b$1339, Y=$memory\sound.quarterwave$rdmux[0][3][3]$b$1303
      New ports: A={ 1'0 $memory\sound.quarterwave$rdmux[0][4][7]$a$1338 [1] 2'01 $memory\sound.quarterwave$rdmux[0][4][7]$a$1338 [1:0] 2'01 $memory\sound.quarterwave$rdmux[0][4][7]$a$1338 [1:0] }, B={ 1'1 $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [4] $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [4] $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [4] $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [2] $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [4] $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [2] $memory\sound.quarterwave$rdmux[0][4][7]$b$1339 [2] 2'10 }, Y={ $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [13:12] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [9] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [7] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [5:0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [21:14] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [11:10] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [8] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [6] } = { 3'101 $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [3] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [9] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [0] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [7] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [4] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [7] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [0] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [2:1] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][6]$1334:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][4][6]$a$1335, B=$memory\sound.quarterwave$rdmux[0][4][6]$b$1336, Y=$memory\sound.quarterwave$rdmux[0][3][3]$a$1302
      New ports: A={ 1'1 $memory\sound.quarterwave$rdmux[0][4][6]$a$1335 [3] $memory\sound.quarterwave$rdmux[0][4][6]$a$1335 [3] 1'0 $memory\sound.quarterwave$rdmux[0][4][6]$a$1335 [2] $memory\sound.quarterwave$rdmux[0][4][6]$a$1335 [3:2] 2'10 }, B={ 1'0 $memory\sound.quarterwave$rdmux[0][4][6]$b$1336 [4] 2'11 $memory\sound.quarterwave$rdmux[0][4][6]$b$1336 [4] $memory\sound.quarterwave$rdmux[0][4][6]$b$1336 [0] 1'1 $memory\sound.quarterwave$rdmux[0][4][6]$b$1336 [0] $memory\sound.quarterwave$rdmux[0][4][6]$b$1336 [0] }, Y={ $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [15:14] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [12] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [7] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [4:0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [21:16] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [13] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [11:8] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [6:5] } = { 3'100 $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [12] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [2] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [4] 2'01 $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [2] 1'1 $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [7] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [2] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [2] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][5]$1331:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][4][5]$a$1332, B=$memory\sound.quarterwave$rdmux[0][4][5]$b$1333, Y=$memory\sound.quarterwave$rdmux[0][3][2]$b$1300
      New ports: A={ 1'1 $memory\sound.quarterwave$rdmux[0][4][5]$a$1332 [5] 1'0 $memory\sound.quarterwave$rdmux[0][4][5]$a$1332 [0] 3'011 $memory\sound.quarterwave$rdmux[0][4][5]$a$1332 [5] $memory\sound.quarterwave$rdmux[0][4][5]$a$1332 [0] $memory\sound.quarterwave$rdmux[0][4][5]$a$1332 [5] $memory\sound.quarterwave$rdmux[0][4][5]$a$1332 [0] 1'0 $memory\sound.quarterwave$rdmux[0][4][5]$a$1332 [0] }, B={ 1'0 $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [0] $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [0] 1'1 $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [5] $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [5] $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [0] 1'0 $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [5] $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [5] 2'01 $memory\sound.quarterwave$rdmux[0][4][5]$b$1333 [0] }, Y={ $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [18] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [15:11] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [9] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [7:4] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [1:0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [21:19] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [17:16] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [10] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [8] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [3:2] } = { $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [1] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [18] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [18] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [11] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [7] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [1] 1'1 $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][4]$1328:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][4][4]$a$1329, B=$memory\sound.quarterwave$rdmux[0][4][4]$b$1330, Y=$memory\sound.quarterwave$rdmux[0][3][2]$a$1299
      New ports: A={ 2'01 $memory\sound.quarterwave$rdmux[0][4][4]$a$1329 [1] 1'1 $memory\sound.quarterwave$rdmux[0][4][4]$a$1329 [1] 1'1 $memory\sound.quarterwave$rdmux[0][4][4]$a$1329 [0] $memory\sound.quarterwave$rdmux[0][4][4]$a$1329 [0] 1'0 $memory\sound.quarterwave$rdmux[0][4][4]$a$1329 [1:0] }, B={ $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [4] 1'0 $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [4] $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [4] 1'0 $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [1] $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [4] $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [1] $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [1] $memory\sound.quarterwave$rdmux[0][4][4]$b$1330 [1] 1'0 }, Y={ $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [17] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [13:12] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [8:7] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [5:0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [21:18] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [16:14] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [11:9] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [6] } = { 3'011 $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [2] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [4:3] 1'1 $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [8] 1'1 $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [3] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [5] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][3]$1325:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][4][3]$a$1326, B=$memory\sound.quarterwave$rdmux[0][4][3]$b$1327, Y=$memory\sound.quarterwave$rdmux[0][3][1]$b$1297
      New ports: A={ $memory\sound.quarterwave$rdmux[0][4][3]$a$1326 [3] $memory\sound.quarterwave$rdmux[0][4][3]$a$1326 [1] 2'10 $memory\sound.quarterwave$rdmux[0][4][3]$a$1326 [3] $memory\sound.quarterwave$rdmux[0][4][3]$a$1326 [3] 1'1 $memory\sound.quarterwave$rdmux[0][4][3]$a$1326 [1] 1'0 }, B={ 1'1 $memory\sound.quarterwave$rdmux[0][4][3]$b$1327 [0] 3'010 $memory\sound.quarterwave$rdmux[0][4][3]$b$1327 [1:0] $memory\sound.quarterwave$rdmux[0][4][3]$b$1327 [1:0] }, Y={ $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [18:17] $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [12] $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [7:6] $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [3:0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [21:19] $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [16:13] $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [11:8] $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [5:4] } = { 3'010 $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [7] $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [1] 2'00 $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [7] $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [1] $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [3] $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [3] 1'0 $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [3] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][2]$1322:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][4][2]$a$1323, B=$memory\sound.quarterwave$rdmux[0][4][2]$b$1324, Y=$memory\sound.quarterwave$rdmux[0][3][1]$a$1296
      New ports: A={ $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [0] 1'0 $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [2] $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [2] 1'1 $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [0] $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [0] 1'0 $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [2] $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [2] 1'0 $memory\sound.quarterwave$rdmux[0][4][2]$a$1323 [0] }, B={ $memory\sound.quarterwave$rdmux[0][4][2]$b$1324 [2] 2'10 $memory\sound.quarterwave$rdmux[0][4][2]$b$1324 [1] $memory\sound.quarterwave$rdmux[0][4][2]$b$1324 [2:1] 1'1 $memory\sound.quarterwave$rdmux[0][4][2]$b$1324 [2] 1'1 $memory\sound.quarterwave$rdmux[0][4][2]$b$1324 [2:1] 1'0 }, Y={ $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [17:16] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [13:12] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [10] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [8:7] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [5:4] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [2:0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [21:18] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [15:14] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [11] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [9] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [6] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [3] } = { 1'0 $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [1] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [10] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [10] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [5] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [13] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [2] 2'01 $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [2] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][1]$1319:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][4][1]$a$1320, B=$memory\sound.quarterwave$rdmux[0][4][1]$b$1321, Y=$memory\sound.quarterwave$rdmux[0][3][0]$b$1294
      New ports: A={ $memory\sound.quarterwave$rdmux[0][4][1]$a$1320 [1] 3'011 $memory\sound.quarterwave$rdmux[0][4][1]$a$1320 [3] $memory\sound.quarterwave$rdmux[0][4][1]$a$1320 [1] $memory\sound.quarterwave$rdmux[0][4][1]$a$1320 [3] $memory\sound.quarterwave$rdmux[0][4][1]$a$1320 [1] 1'1 }, B={ $memory\sound.quarterwave$rdmux[0][4][1]$b$1321 [10] 1'1 $memory\sound.quarterwave$rdmux[0][4][1]$b$1321 [10] $memory\sound.quarterwave$rdmux[0][4][1]$b$1321 [1] 3'001 $memory\sound.quarterwave$rdmux[0][4][1]$b$1321 [1] 1'0 }, Y={ $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [16] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [13] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [10] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [8] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [5:3] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [1:0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [21:17] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [15:14] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [12:11] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [9] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [7:6] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [2] } = { 2'00 $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [13] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [0] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [8] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [1] 1'1 $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [1] 2'00 $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [0] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [5] 1'0 }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][0]$1316:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][4][0]$a$1317, B=$memory\sound.quarterwave$rdmux[0][4][0]$b$1318, Y=$memory\sound.quarterwave$rdmux[0][3][0]$a$1293
      New ports: A={ $memory\sound.quarterwave$rdmux[0][4][0]$a$1317 [0] 3'000 $memory\sound.quarterwave$rdmux[0][4][0]$a$1317 [0] $memory\sound.quarterwave$rdmux[0][4][0]$a$1317 [0] }, B={ $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [10] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [10] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [2] 1'1 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [2] 1'0 }, Y={ $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [12] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [10] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [5] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [3:2] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [21:13] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [11] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [9:6] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [4] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [1] } = { 3'000 $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [10] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [5] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [2] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [12] 1'0 $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [3] 1'0 $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [2] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [3] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [5] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [3] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory\sm.notes_to_play$rdmux[0][2][3]$1244:
      Old ports: A=$memory\sm.notes_to_play$rdmux[0][2][3]$a$1245, B=23'x, Y=$memory\sm.notes_to_play$rdmux[0][1][1]$b$1234
      New ports: A={ 1'0 $memory\sm.notes_to_play$rdmux[0][2][3]$a$1245 [0] }, B=2'x, Y=$memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [1:0]
      New connections: $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [22:2] = { $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [1:0] $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [0] $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [0] $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [0] $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [1] $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [1] $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [1] $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [1] $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [1] $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [1] $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [1:0] $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [0] $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [1:0] $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [1:0] $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [0] $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [0] $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [0] }
    Consolidated identical input bits for $mux cell $memory\sm.notes_to_play$rdmux[0][2][1]$1238:
      Old ports: A=23'01111000000011010111101, B=$memory\sm.notes_to_play$rdmux[0][2][1]$b$1240, Y=$memory\sm.notes_to_play$rdmux[0][1][0]$b$1231
      New ports: A=2'01, B=$memory\sm.notes_to_play$rdmux[0][2][1]$b$1240 [1:0], Y=$memory\sm.notes_to_play$rdmux[0][1][0]$b$1231 [1:0]
      New connections: $memory\sm.notes_to_play$rdmux[0][1][0]$b$1231 [22:2] = { 3'011 $memory\sm.notes_to_play$rdmux[0][1][0]$b$1231 [0] $memory\sm.notes_to_play$rdmux[0][1][0]$b$1231 [0] 3'000 $memory\sm.notes_to_play$rdmux[0][1][0]$b$1231 [1] $memory\sm.notes_to_play$rdmux[0][1][0]$b$1231 [1] $memory\sm.notes_to_play$rdmux[0][1][0]$b$1231 [1] 1'0 $memory\sm.notes_to_play$rdmux[0][1][0]$b$1231 [0] 1'1 $memory\sm.notes_to_play$rdmux[0][1][0]$b$1231 [1] 1'1 $memory\sm.notes_to_play$rdmux[0][1][0]$b$1231 [1] 3'111 $memory\sm.notes_to_play$rdmux[0][1][0]$b$1231 [0] }
    Consolidated identical input bits for $mux cell $memory\sm.notes_to_play$rdmux[0][2][0]$1235:
      Old ports: A=$memory\sm.notes_to_play$rdmux[0][2][0]$a$1236, B=$memory\sm.notes_to_play$rdmux[0][2][0]$b$1237, Y=$memory\sm.notes_to_play$rdmux[0][1][0]$a$1230
      New ports: A={ 1'0 $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [1] 1'1 $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [0] $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [1:0] }, B={ $memory\sm.notes_to_play$rdmux[0][2][0]$b$1237 [0] 1'1 $memory\sm.notes_to_play$rdmux[0][2][0]$b$1237 [1] 1'0 $memory\sm.notes_to_play$rdmux[0][2][0]$b$1237 [1:0] }, Y={ $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [11] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [6] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [4] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [2:0] }
      New connections: { $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [22:12] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [10:7] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [5] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [3] } = { $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [11] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [4] 1'1 $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [0] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [2] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [11] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [11] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [11] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [6] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [6] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [1] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [2] 1'1 $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [1] 1'1 $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [4] 1'1 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][3][7]$1313:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][3][7]$a$1314, B=$memory\sound.quarterwave$rdmux[0][3][7]$b$1315, Y=$memory\sound.quarterwave$rdmux[0][2][3]$b$1291
      New ports: A={ $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [7] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [15] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [1] 1'0 $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [9] 1'1 $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [9] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [2] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [7:6] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [1] 2'01 $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [2:0] }, B={ 2'11 $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [14:13] $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [11] $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [6] $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [9] $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [4] $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [7:6] 1'0 $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [4:3] 1'0 $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [0] $memory\sound.quarterwave$rdmux[0][3][7]$b$1315 [0] }, Y={ $memory\sound.quarterwave$rdmux[0][2][3]$b$1291 [16:13] $memory\sound.quarterwave$rdmux[0][2][3]$b$1291 [11:0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][2][3]$b$1291 [21:17] $memory\sound.quarterwave$rdmux[0][2][3]$b$1291 [12] } = { 5'11111 $memory\sound.quarterwave$rdmux[0][2][3]$b$1291 [4] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][3][6]$1310:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][3][6]$a$1311, B=$memory\sound.quarterwave$rdmux[0][3][6]$b$1312, Y=$memory\sound.quarterwave$rdmux[0][2][3]$a$1290
      New ports: A={ $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [14] $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [2] $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [10] $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [14] $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [2] $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [5] 1'0 $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [10:4] 1'0 $memory\sound.quarterwave$rdmux[0][3][6]$a$1311 [2:0] }, B={ 1'1 $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [9] $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [15] $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [8] $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [13:12] $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [9] $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [10:8] 1'1 $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [2] $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [2] $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [3] $memory\sound.quarterwave$rdmux[0][3][6]$b$1312 [3:0] }, Y={ $memory\sound.quarterwave$rdmux[0][2][3]$a$1290 [18] $memory\sound.quarterwave$rdmux[0][2][3]$a$1290 [16:0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][2][3]$a$1290 [21:19] $memory\sound.quarterwave$rdmux[0][2][3]$a$1290 [17] } = { 3'111 $memory\sound.quarterwave$rdmux[0][2][3]$a$1290 [2] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][3][5]$1307:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][3][5]$a$1308, B=$memory\sound.quarterwave$rdmux[0][3][5]$b$1309, Y=$memory\sound.quarterwave$rdmux[0][2][2]$b$1288
      New ports: A={ 2'01 $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [17] $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [8] $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [1] $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [10] $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [12] $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [0] $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [10:7] $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [3] 1'0 $memory\sound.quarterwave$rdmux[0][3][5]$a$1308 [4:0] }, B={ 2'10 $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [3] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [15] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [12] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [13:12] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [4] 1'0 $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [9:8] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [4] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [0] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [0] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [4:0] }, Y={ $memory\sound.quarterwave$rdmux[0][2][2]$b$1288 [19:17] $memory\sound.quarterwave$rdmux[0][2][2]$b$1288 [15:0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][2][2]$b$1288 [21:20] $memory\sound.quarterwave$rdmux[0][2][2]$b$1288 [16] } = { 2'11 $memory\sound.quarterwave$rdmux[0][2][2]$b$1288 [7] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][3][4]$1304:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][3][4]$a$1305, B=$memory\sound.quarterwave$rdmux[0][3][4]$b$1306, Y=$memory\sound.quarterwave$rdmux[0][2][2]$a$1287
      New ports: A={ $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [10] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [18] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [18] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [11] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [5] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [13:9] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [5] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [1] 1'0 $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [5] 1'1 $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [2] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [2:1] 1'0 }, B={ 2'10 $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [0] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [10] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [16] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [13:6] 2'00 $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [0] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [2] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [0] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [0] }, Y={ $memory\sound.quarterwave$rdmux[0][2][2]$a$1287 [20:16] $memory\sound.quarterwave$rdmux[0][2][2]$a$1287 [13:0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][2][2]$a$1287 [21] $memory\sound.quarterwave$rdmux[0][2][2]$a$1287 [15:14] } = 3'101
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][3][3]$1301:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][3][3]$a$1302, B=$memory\sound.quarterwave$rdmux[0][3][3]$b$1303, Y=$memory\sound.quarterwave$rdmux[0][2][1]$b$1285
      New ports: A={ 1'0 $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [12] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [2] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [4] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [15:14] 1'0 $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [12] 1'1 $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [2] 1'1 $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [7] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [7] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [2] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [2] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [4:0] }, B={ 1'1 $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [3] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [9] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [0] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [7] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [4] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [13:12] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [7] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [0] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [9] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [2] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [7] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [1] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [5:0] }, Y=$memory\sound.quarterwave$rdmux[0][2][1]$b$1285 [19:0]
      New connections: $memory\sound.quarterwave$rdmux[0][2][1]$b$1285 [21:20] = 2'10
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][3][2]$1298:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][3][2]$a$1299, B=$memory\sound.quarterwave$rdmux[0][3][2]$b$1300, Y=$memory\sound.quarterwave$rdmux[0][2][1]$a$1284
      New ports: A={ 2'01 $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [2] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [17] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [4:3] 1'1 $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [13:12] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [8] 1'1 $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [3] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [8:7] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [5] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [5:0] }, B={ $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [1] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [18] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [18] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [11] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [7] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [15:11] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [1] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [9] 1'1 $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [7:4] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [0] 1'1 $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [1:0] }, Y={ $memory\sound.quarterwave$rdmux[0][2][1]$a$1284 [21] $memory\sound.quarterwave$rdmux[0][2][1]$a$1284 [19:0] }
      New connections: $memory\sound.quarterwave$rdmux[0][2][1]$a$1284 [20] = $memory\sound.quarterwave$rdmux[0][2][1]$a$1284 [19]
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][3][1]$1295:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][3][1]$a$1296, B=$memory\sound.quarterwave$rdmux[0][3][1]$b$1297, Y=$memory\sound.quarterwave$rdmux[0][2][0]$b$1282
      New ports: A={ $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [1] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [10] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [10] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [17:16] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [5] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [13:12] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [2] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [10] 1'0 $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [8:7] 1'1 $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [5:4] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [2] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [2:0] }, B={ 2'10 $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [18:17] $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [7] $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [1] 1'0 $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [12] $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [7] $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [1] $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [3] $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [3] $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [7:6] 1'0 $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [3] $memory\sound.quarterwave$rdmux[0][3][1]$b$1297 [3:0] }, Y={ $memory\sound.quarterwave$rdmux[0][2][0]$b$1282 [20:15] $memory\sound.quarterwave$rdmux[0][2][0]$b$1282 [13:0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][2][0]$b$1282 [21] $memory\sound.quarterwave$rdmux[0][2][0]$b$1282 [14] } = { 1'0 $memory\sound.quarterwave$rdmux[0][2][0]$b$1282 [13] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][3][0]$1292:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][3][0]$a$1293, B=$memory\sound.quarterwave$rdmux[0][3][0]$b$1294, Y=$memory\sound.quarterwave$rdmux[0][2][0]$a$1281
      New ports: A={ 1'0 $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [10] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [5] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [2] 1'0 $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [3] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [12] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [10] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [3] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [5] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [3] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [5] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [0] $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [3:2] 1'0 $memory\sound.quarterwave$rdmux[0][3][0]$a$1293 [0] }, B={ $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [13] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [0] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [8] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [16] 1'1 $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [13] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [1] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [10] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [8] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [0] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [5] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [5:3] 1'0 $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [1:0] }, Y={ $memory\sound.quarterwave$rdmux[0][2][0]$a$1281 [19:16] $memory\sound.quarterwave$rdmux[0][2][0]$a$1281 [14:12] $memory\sound.quarterwave$rdmux[0][2][0]$a$1281 [10] $memory\sound.quarterwave$rdmux[0][2][0]$a$1281 [8:0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][2][0]$a$1281 [21:20] $memory\sound.quarterwave$rdmux[0][2][0]$a$1281 [15] $memory\sound.quarterwave$rdmux[0][2][0]$a$1281 [11] $memory\sound.quarterwave$rdmux[0][2][0]$a$1281 [9] } = { 2'00 $memory\sound.quarterwave$rdmux[0][2][0]$a$1281 [12] 1'0 $memory\sound.quarterwave$rdmux[0][2][0]$a$1281 [2] }
    Consolidated identical input bits for $mux cell $memory\sm.notes_to_play$rdmux[0][1][1]$1232:
      Old ports: A=$memory\sm.notes_to_play$rdmux[0][1][1]$a$1233, B=$memory\sm.notes_to_play$rdmux[0][1][1]$b$1234, Y=$memory\sm.notes_to_play$rdmux[0][0][0]$b$1228
      New ports: A={ 2'01 $memory\sm.notes_to_play$rdmux[0][1][1]$a$1233 [1:0] }, B={ $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [1:0] $memory\sm.notes_to_play$rdmux[0][1][1]$b$1234 [1:0] }, Y={ $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [11] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [3] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [1:0] }
      New connections: { $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [22:12] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [10:4] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [2] } = { $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [11] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [3] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [3] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [0] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [0] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [11] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [11] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [11] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [1] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [1] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [1:0] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [3] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [1] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [3] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [1] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [3] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [3] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [0] }
    Consolidated identical input bits for $mux cell $memory\sm.notes_to_play$rdmux[0][1][0]$1229:
      Old ports: A=$memory\sm.notes_to_play$rdmux[0][1][0]$a$1230, B=$memory\sm.notes_to_play$rdmux[0][1][0]$b$1231, Y=$memory\sm.notes_to_play$rdmux[0][0][0]$a$1227
      New ports: A={ $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [11] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [6] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [4] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [2:0] }, B={ 1'0 $memory\sm.notes_to_play$rdmux[0][1][0]$b$1231 [1] 1'1 $memory\sm.notes_to_play$rdmux[0][1][0]$b$1231 [0] $memory\sm.notes_to_play$rdmux[0][1][0]$b$1231 [1:0] }, Y={ $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [11] $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [6] $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [4] $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [2:0] }
      New connections: { $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [22:12] $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [10:7] $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [5] $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [3] } = { $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [11] $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [4] 1'1 $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [0] $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [2] $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [11] $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [11] $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [11] $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [6] $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [6] $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [1] $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [2] 1'1 $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [1] 1'1 $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [4] 1'1 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][2][3]$1289:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][2][3]$a$1290, B=$memory\sound.quarterwave$rdmux[0][2][3]$b$1291, Y=$memory\sound.quarterwave$rdmux[0][1][1]$b$1279
      New ports: A={ $memory\sound.quarterwave$rdmux[0][2][3]$a$1290 [18] $memory\sound.quarterwave$rdmux[0][2][3]$a$1290 [2] $memory\sound.quarterwave$rdmux[0][2][3]$a$1290 [16:0] }, B={ 2'11 $memory\sound.quarterwave$rdmux[0][2][3]$b$1291 [16:13] $memory\sound.quarterwave$rdmux[0][2][3]$b$1291 [4] $memory\sound.quarterwave$rdmux[0][2][3]$b$1291 [11:0] }, Y=$memory\sound.quarterwave$rdmux[0][1][1]$b$1279 [18:0]
      New connections: $memory\sound.quarterwave$rdmux[0][1][1]$b$1279 [21:19] = 3'111
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][2][2]$1286:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][2][2]$a$1287, B=$memory\sound.quarterwave$rdmux[0][2][2]$b$1288, Y=$memory\sound.quarterwave$rdmux[0][1][1]$a$1278
      New ports: A={ $memory\sound.quarterwave$rdmux[0][2][2]$a$1287 [20:16] 2'01 $memory\sound.quarterwave$rdmux[0][2][2]$a$1287 [13:0] }, B={ 1'1 $memory\sound.quarterwave$rdmux[0][2][2]$b$1288 [19:17] $memory\sound.quarterwave$rdmux[0][2][2]$b$1288 [7] $memory\sound.quarterwave$rdmux[0][2][2]$b$1288 [15:0] }, Y=$memory\sound.quarterwave$rdmux[0][1][1]$a$1278 [20:0]
      New connections: $memory\sound.quarterwave$rdmux[0][1][1]$a$1278 [21] = 1'1
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][2][0]$1280:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][2][0]$a$1281, B=$memory\sound.quarterwave$rdmux[0][2][0]$b$1282, Y=$memory\sound.quarterwave$rdmux[0][1][0]$a$1275
      New ports: A={ 1'0 $memory\sound.quarterwave$rdmux[0][2][0]$a$1281 [19:16] $memory\sound.quarterwave$rdmux[0][2][0]$a$1281 [12] $memory\sound.quarterwave$rdmux[0][2][0]$a$1281 [14:12] 1'0 $memory\sound.quarterwave$rdmux[0][2][0]$a$1281 [10] $memory\sound.quarterwave$rdmux[0][2][0]$a$1281 [2] $memory\sound.quarterwave$rdmux[0][2][0]$a$1281 [8:0] }, B={ $memory\sound.quarterwave$rdmux[0][2][0]$b$1282 [20:15] $memory\sound.quarterwave$rdmux[0][2][0]$b$1282 [13] $memory\sound.quarterwave$rdmux[0][2][0]$b$1282 [13:0] }, Y=$memory\sound.quarterwave$rdmux[0][1][0]$a$1275 [20:0]
      New connections: $memory\sound.quarterwave$rdmux[0][1][0]$a$1275 [21] = 1'0
    Consolidated identical input bits for $mux cell $memory\sm.notes_to_play$rdmux[0][0][0]$1226:
      Old ports: A=$memory\sm.notes_to_play$rdmux[0][0][0]$a$1227, B=$memory\sm.notes_to_play$rdmux[0][0][0]$b$1228, Y=$\sm.notes_to_play$rdreg[0]$d
      New ports: A={ $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [11] $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [6] $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [4] 1'1 $memory\sm.notes_to_play$rdmux[0][0][0]$a$1227 [2:0] }, B={ $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [11] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [1] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [3] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [3] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [0] $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [1:0] }, Y={ $\sm.notes_to_play$rdreg[0]$d [11] $\sm.notes_to_play$rdreg[0]$d [6] $\sm.notes_to_play$rdreg[0]$d [4:0] }
      New connections: { $\sm.notes_to_play$rdreg[0]$d [22:12] $\sm.notes_to_play$rdreg[0]$d [10:7] $\sm.notes_to_play$rdreg[0]$d [5] } = { $\sm.notes_to_play$rdreg[0]$d [11] $\sm.notes_to_play$rdreg[0]$d [4:3] $\sm.notes_to_play$rdreg[0]$d [0] $\sm.notes_to_play$rdreg[0]$d [2] $\sm.notes_to_play$rdreg[0]$d [11] $\sm.notes_to_play$rdreg[0]$d [11] $\sm.notes_to_play$rdreg[0]$d [11] $\sm.notes_to_play$rdreg[0]$d [6] $\sm.notes_to_play$rdreg[0]$d [6] $\sm.notes_to_play$rdreg[0]$d [1] $\sm.notes_to_play$rdreg[0]$d [2] $\sm.notes_to_play$rdreg[0]$d [3] $\sm.notes_to_play$rdreg[0]$d [1] $\sm.notes_to_play$rdreg[0]$d [3] $\sm.notes_to_play$rdreg[0]$d [4] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][1][1]$1277:
      Old ports: A=$memory\sound.quarterwave$rdmux[0][1][1]$a$1278, B=$memory\sound.quarterwave$rdmux[0][1][1]$b$1279, Y=$memory\sound.quarterwave$rdmux[0][0][0]$b$1273
      New ports: A=$memory\sound.quarterwave$rdmux[0][1][1]$a$1278 [20:0], B={ 2'11 $memory\sound.quarterwave$rdmux[0][1][1]$b$1279 [18:0] }, Y=$memory\sound.quarterwave$rdmux[0][0][0]$b$1273 [20:0]
      New connections: $memory\sound.quarterwave$rdmux[0][0][0]$b$1273 [21] = 1'1
  Optimizing cells in module \top.
Performed a total of 72 changes.

9.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~93 debug messages>
Removed a total of 31 cells.

9.30.6. Executing OPT_DFF pass (perform DFF optimizations).

9.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 115 unused wires.
<suppressed ~1 debug messages>

9.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.30.9. Rerunning OPT passes. (Maybe there is more to do..)

9.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~18 debug messages>

9.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\sm.notes_to_play$rdmux[0][2][0]$1235:
      Old ports: A={ 1'0 $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [14] 1'1 $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [19] $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [14] $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [19] }, B={ $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [19] 1'1 $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [14] 1'0 $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [14] $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [19] }, Y={ $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [22] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [14] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [21] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [18] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [12] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [19] }
      New ports: A={ 1'0 $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [14] 1'1 $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [19] }, B={ $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [19] 1'1 $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [14] 1'0 }, Y={ $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [22] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [14] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [21] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [18] }
      New connections: { $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [12] $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [19] } = { $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [14] $memory\sm.notes_to_play$rdmux[0][2][0]$a$1236 [19] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][11]$1349:
      Old ports: A={ 2'01 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] 2'01 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] }, B={ 2'10 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] 2'10 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] 2'01 }, Y={ $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [15] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [13] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [14] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [9:8] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [16] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [17] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [2:1] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [6] }
      New ports: A={ 2'01 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] 2'01 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] }, B={ 4'1010 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] 2'01 }, Y={ $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [15] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [13] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [9:8] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [16] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [17] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [2:1] $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [6] }
      New connections: $memory\sound.quarterwave$rdmux[0][3][5]$b$1309 [14] = $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17]
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][14]$1358:
      Old ports: A={ $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] 1'1 }, B={ $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] 1'1 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] 1'0 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] 1'0 }, Y={ $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [15] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [11] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [16] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [6] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [8] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [14] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [0] }
      New ports: A={ $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] 1'1 }, B={ $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] 3'100 }, Y={ $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [15] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [11] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [16] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [8] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [6] $memory\sound.quarterwave$rdmux[0][3][7]$a$1314 [14] } = $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17]
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][1]$1319:
      Old ports: A={ $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 3'011 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 1'1 }, B={ $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 3'001 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 1'0 }, Y={ $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [16] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [19] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [10] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [17] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [6] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [4:3] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [15] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [18] }
      New ports: A={ $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 3'011 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'1 }, B={ $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 4'0010 }, Y={ $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [16] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [19] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [10] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [17] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [6] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [4:3] $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [18] }
      New connections: $memory\sound.quarterwave$rdmux[0][3][0]$b$1294 [15] = $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16]
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][2]$1322:
      Old ports: A={ $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 1'0 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 1'0 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'0 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] }, B={ $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 2'10 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 1'0 }, Y={ $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [17:16] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [14] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [12] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [19] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [8:7] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [15] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [4] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [11] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [20] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [0] }
      New ports: A={ $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 1'0 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 1'0 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'0 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] }, B={ $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 2'10 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 1'0 }, Y={ $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [17:16] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [14] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [12] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [19] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [7] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [15] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [4] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [20] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [8] $memory\sound.quarterwave$rdmux[0][3][1]$a$1296 [11] } = { $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][4]$1328:
      Old ports: A={ 2'01 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 1'0 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] }, B={ $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'0 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'0 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 1'0 }, Y={ $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [17] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [13:11] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [7:6] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [16:15] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [18] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [1:0] }
      New ports: A={ 3'011 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 1'0 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] }, B={ $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'0 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'0 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 1'0 }, Y={ $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [17] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [13] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [11] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [7:6] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [16] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [18] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [1:0] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [12] $memory\sound.quarterwave$rdmux[0][3][2]$a$1299 [15] } = { $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] }
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][5]$1331:
      Old ports: A={ 1'1 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] 1'0 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] 3'011 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] 1'0 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] }, B={ 1'0 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] 1'1 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] 1'0 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] 2'01 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] }, Y={ $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [20] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [15:12] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [17] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [9] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [16] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [6:4] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [21] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [3] }
      New ports: A={ 1'1 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] 1'0 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] 3'011 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] 1'0 }, B={ 1'0 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] 1'1 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] 1'0 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] 2'01 }, Y={ $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [20] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [15:12] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [17] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [9] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [16] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [6] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [4] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [21] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [5] $memory\sound.quarterwave$rdmux[0][3][2]$b$1300 [3] } = $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17]
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][6]$1334:
      Old ports: A={ 1'1 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] 1'0 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] 2'10 }, B={ 1'0 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] 2'11 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] 1'1 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] }, Y={ $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [15:14] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [18] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [8] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [16] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [3] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [17] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [1:0] }
      New ports: A={ 1'1 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] 1'0 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] 2'10 }, B={ 3'011 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] 1'1 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] }, Y={ $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [15] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [18] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [8] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [16] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [3] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [17] $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [1:0] }
      New connections: $memory\sound.quarterwave$rdmux[0][3][3]$a$1302 [14] = $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18]
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][7]$1337:
      Old ports: A={ 1'0 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 2'01 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 2'01 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] }, B={ 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 2'10 }, Y={ $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [13:12] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [17] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [15] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [5] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [14] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [18] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [8] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [6] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [16] }
      New ports: A={ 3'001 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 2'01 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] }, B={ 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 2'10 }, Y={ $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [13] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [17] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [15] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [5] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [14] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [18] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [8] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [6] $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [16] }
      New connections: $memory\sound.quarterwave$rdmux[0][3][3]$b$1303 [12] = $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14]
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][8]$1340:
      Old ports: A={ 2'10 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] 1'0 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] 1'0 }, B={ $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] 1'1 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] 1'1 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] 1'1 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] }, Y={ $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [19] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [13:12] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [17] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [20] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [9] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [16] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [3] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [7] }
      New ports: A={ 2'10 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] 1'0 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17] 1'0 }, B={ $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] 1'1 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18] 2'11 $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [17] }, Y={ $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [19] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [13] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [17] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [20] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [9] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [3] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [7] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [12] $memory\sound.quarterwave$rdmux[0][3][4]$a$1305 [16] } = $memory\sound.quarterwave$rdmux[0][4][0]$b$1318 [18:17]
    Consolidated identical input bits for $mux cell $memory\sound.quarterwave$rdmux[0][4][9]$1343:
      Old ports: A={ $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 2'11 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 1'0 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'0 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 1'0 }, B={ $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 1'0 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 2'11 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] }, Y={ $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [16] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [13:11] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [17] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [9:6] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [2] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [18] }
      New ports: A={ 2'11 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 1'0 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'0 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 1'0 }, B={ $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] 1'0 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 2'11 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] 1'1 $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] }, Y={ $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [13:11] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [17] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [9:6] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [18] }
      New connections: { $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [16] $memory\sound.quarterwave$rdmux[0][3][4]$b$1306 [2] } = { $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [14] $memory\sound.quarterwave$rdmux[0][4][10]$b$1348 [16] }
  Optimizing cells in module \top.
Performed a total of 11 changes.

9.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.30.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $\sound.quarterwave$rdreg[0] ($dffe) from module top (D = $memory\sound.quarterwave$rdmux[0][0][0]$a$1272 [21], Q = \sound.tblval [21], rval = 1'1).
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$1076 ($sdffe) from module top.
Setting constant 0-bit at position 17 on $auto$ff.cc:266:slice$1076 ($sdffe) from module top.
Setting constant 0-bit at position 22 on $auto$ff.cc:266:slice$1076 ($sdffe) from module top.
Setting constant 0-bit at position 26 on $auto$ff.cc:266:slice$1076 ($sdffe) from module top.
Setting constant 0-bit at position 27 on $auto$ff.cc:266:slice$1076 ($sdffe) from module top.

9.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

9.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.30.16. Rerunning OPT passes. (Maybe there is more to do..)

9.30.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~19 debug messages>

9.30.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

9.30.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.30.20. Executing OPT_DFF pass (perform DFF optimizations).

9.30.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.30.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.30.23. Finished OPT passes. (There is nothing left to do.)

9.31. Executing ICE40_WRAPCARRY pass (wrap carries).

9.32. Executing TECHMAP pass (map to technology primitives).

9.32.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

9.32.2. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

9.32.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $not.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$6b90a16b6f3b57b9c9d958838204f952a01dc262\_80_ice40_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$c6885379b74fbbf6906b35106e386e521d86cbb2\_80_ice40_alu for cells of type $alu.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_80_ice40_alu for cells of type $alu.
Using template $paramod$eb7b10130dcc524c861990164c5c579e3444e29e\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
No more expansions possible.
<suppressed ~461 debug messages>

9.33. Executing OPT pass (performing simple optimizations).

9.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~397 debug messages>

9.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~765 debug messages>
Removed a total of 255 cells.

9.33.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$2563 ($_DFF_P_) from module top (D = $memory\sm.notes_to_play$rdmux[0][0][0]$b$1228 [21], Q = $flatten\sm.$memrd$\notes_to_play$statemachine.sv:80$401_DATA [23], rval = 1'1).

9.33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 97 unused cells and 216 unused wires.
<suppressed ~99 debug messages>

9.33.5. Rerunning OPT passes. (Removed registers in this run.)

9.33.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~9 debug messages>

9.33.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

9.33.8. Executing OPT_DFF pass (perform DFF optimizations).

9.33.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

9.33.10. Finished fast OPT passes.

9.34. Executing ICE40_OPT pass (performing simple optimizations).

9.34.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1127.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1127.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1140.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1127.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1151.slice[0].carry: CO=\i2s2_inst.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1154.slice[0].carry: CO=\sm.ncounter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1166.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1166.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1166.slice[22].carry: CO=$auto$alumacc.cc:485:replace_alu$1166.C [22]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1166.slice[23].carry: CO=$auto$alumacc.cc:485:replace_alu$1166.C [23]

9.34.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4 debug messages>

9.34.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

9.34.4. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$2560 ($_DFF_P_) from module top (D = $memory\sm.notes_to_play$rdmux[0][1][0]$a$1230 [19], Q = $flatten\sm.$memrd$\notes_to_play$statemachine.sv:80$401_DATA [25], rval = 1'0).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$1935 ($_SDFFE_PP0N_) from module top.

9.34.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 5 unused cells and 3 unused wires.
<suppressed ~6 debug messages>

9.34.6. Rerunning OPT passes. (Removed registers in this run.)

9.34.7. Running ICE40 specific optimizations.

9.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.34.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

9.34.10. Executing OPT_DFF pass (perform DFF optimizations).

9.34.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

9.34.12. Rerunning OPT passes. (Removed registers in this run.)

9.34.13. Running ICE40 specific optimizations.

9.34.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.34.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.34.16. Executing OPT_DFF pass (perform DFF optimizations).

9.34.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.34.18. Finished OPT passes. (There is nothing left to do.)

9.35. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

9.36. Executing TECHMAP pass (map to technology primitives).

9.36.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

9.36.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
No more expansions possible.
<suppressed ~290 debug messages>

9.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$1151.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1154.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1166.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1166.slice[22].carry ($lut).

9.39. Executing ICE40_OPT pass (performing simple optimizations).

9.39.1. Running ICE40 specific optimizations.

9.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~108 debug messages>

9.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~306 debug messages>
Removed a total of 102 cells.

9.39.4. Executing OPT_DFF pass (perform DFF optimizations).

9.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1537 unused wires.
<suppressed ~1 debug messages>

9.39.6. Rerunning OPT passes. (Removed registers in this run.)

9.39.7. Running ICE40 specific optimizations.

9.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

9.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

9.39.10. Executing OPT_DFF pass (perform DFF optimizations).

9.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

9.39.12. Finished OPT passes. (There is nothing left to do.)

9.40. Executing TECHMAP pass (map to technology primitives).

9.40.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

9.40.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

9.41. Executing ABC pass (technology mapping using ABC).

9.41.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 533 gates and 724 wires to a netlist network with 189 inputs and 170 outputs.

9.41.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =     230.
ABC: Participating nodes from both networks       =     484.
ABC: Participating nodes from the first network   =     230. (  71.65 % of nodes)
ABC: Participating nodes from the second network  =     254. (  79.13 % of nodes)
ABC: Node pairs (any polarity)                    =     230. (  71.65 % of names can be moved)
ABC: Node pairs (same polarity)                   =     206. (  64.17 % of names can be moved)
ABC: Total runtime =     0.02 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

9.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      320
ABC RESULTS:        internal signals:      365
ABC RESULTS:           input signals:      189
ABC RESULTS:          output signals:      170
Removing temp directory.

9.42. Executing ICE40_WRAPCARRY pass (wrap carries).

9.43. Executing TECHMAP pass (map to technology primitives).

9.43.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

9.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 12 unused cells and 391 unused wires.

9.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      435
  1-LUT               34
  2-LUT               50
  3-LUT              226
  4-LUT              125
  with \SB_CARRY    (#0)  110
  with \SB_CARRY    (#1)  109

Eliminating LUTs.
Number of LUTs:      435
  1-LUT               34
  2-LUT               50
  3-LUT              226
  4-LUT              125
  with \SB_CARRY    (#0)  110
  with \SB_CARRY    (#1)  109

Combining LUTs.
Number of LUTs:      435
  1-LUT               34
  2-LUT               50
  3-LUT              226
  4-LUT              125
  with \SB_CARRY    (#0)  110
  with \SB_CARRY    (#1)  109

Eliminated 0 LUTs.
Combined 0 LUTs.
<suppressed ~2146 debug messages>

9.45. Executing TECHMAP pass (map to technology primitives).

9.45.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

9.45.2. Continuing TECHMAP pass.
Using template $paramod$1b79a8523665c670a6b8dc2343e75f55ac7de704\$lut for cells of type $lut.
Using template $paramod$2f9fae8bbd80eaa4cf88492d9c7b840031064f13\$lut for cells of type $lut.
Using template $paramod$bdb7f9ed72fd4f5c7ad81c376f2d8a5c72a0098d\$lut for cells of type $lut.
Using template $paramod$9ea9fff65835ee3c9c0f9d10aeaf03e526785d11\$lut for cells of type $lut.
Using template $paramod$4deb82d0fa76dbde3c255fc4e89bdf27a7d4765c\$lut for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$05b24cd448065956230aeb913981191da46674f4\$lut for cells of type $lut.
Using template $paramod$188cf2c62a6bd882f0bdb27e5595dd18015ce4c8\$lut for cells of type $lut.
Using template $paramod$7e900f474b2feb4c6472fbbb61ff648eb400616c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod$0a94662b0161fc067fc2a1123fd5ac94da2ec1db\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101011 for cells of type $lut.
Using template $paramod$62217661a6c7b2fda0aa8b78d5d5a29eaa53df5d\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod$f6914128303d972b041d4a54c9600a49a5f3fcb0\$lut for cells of type $lut.
Using template $paramod$4972722c284f07fee673f7cb99e6a36ce4a244f0\$lut for cells of type $lut.
Using template $paramod$da00daf53e78dd2e09459359d6f3540b82bd2c76\$lut for cells of type $lut.
Using template $paramod$d4fae2c0d9ad2966369cd4e39b81c71bcd1327c9\$lut for cells of type $lut.
Using template $paramod$acaf438e6f4f31b5725b67e171b88692c75d36a3\$lut for cells of type $lut.
Using template $paramod$179ad4f7dc48cd9a10e9ddccda92f188e00839b3\$lut for cells of type $lut.
Using template $paramod$abe32c4e11952b3f94fcf9f0ba8330f824d4eda1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111110 for cells of type $lut.
Using template $paramod$fe0f8207175ded052429dc00bc15a13655a94d1a\$lut for cells of type $lut.
Using template $paramod$ef8c7195305096e888736fec646147190f69010c\$lut for cells of type $lut.
Using template $paramod$5c030668fc27cb72f1a65cee55fb569b1b136f95\$lut for cells of type $lut.
Using template $paramod$da396db60304c79ae2aea1496dfb7c21aeba5247\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod$6817cb27a5474568b13f02f9684998e687ff341b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111111 for cells of type $lut.
Using template $paramod$935a01ed0eaf9ce11b7629fed4b1953d25a675a3\$lut for cells of type $lut.
Using template $paramod$6f0849655119557ca71e8e08e5bcbaec39651977\$lut for cells of type $lut.
Using template $paramod$781a9aec0d3f5e2e8f1ac0da04bc801330b7d232\$lut for cells of type $lut.
Using template $paramod$59ec461f6f07e2257bba3c91787278d6be59c407\$lut for cells of type $lut.
Using template $paramod$c115709f98bd05d373f971e9cd7a5d47115d06f1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$ae9b8abdb4f811ce37985dd5106af9cd21223954\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod$0afec23c7ec6ad3073bfbabdb26ef38951e604fc\$lut for cells of type $lut.
Using template $paramod$0da83e42f30155d345fb4d67a31e8b07fb24e448\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod$e06ab2c5532ba6ec8a1fe73f4bc565e03b079c9d\$lut for cells of type $lut.
Using template $paramod$1b24100b2fd4c673c0fb73caa29fa7c0e2a28808\$lut for cells of type $lut.
Using template $paramod$dc4be4d5ceb8f0bedd0f4c00f6851902d0832634\$lut for cells of type $lut.
Using template $paramod$1674868d909954f1798905b10bc8fc182227e6d9\$lut for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000011 for cells of type $lut.
Using template $paramod$02d2788718f2d85ab1b4b2190c53c46e751b523b\$lut for cells of type $lut.
Using template $paramod$5280a6fb15b184512b48cc6d199288a0bfdcb7a5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010011 for cells of type $lut.
Using template $paramod$a670b08a47dd8a34f954c50cd06e9996d77e8467\$lut for cells of type $lut.
Using template $paramod$3393401a1d87e74b4daa296492c2ba94690e397e\$lut for cells of type $lut.
Using template $paramod$b4410865e8124402796f9dfbf73ef8d279fdbd08\$lut for cells of type $lut.
Using template $paramod$12879138d1e376f344e47ea40be66b776233be75\$lut for cells of type $lut.
Using template $paramod$12e9049d8709286a770fe60b59ec4d94c39ce3c9\$lut for cells of type $lut.
Using template $paramod$15365c4f5e958631bafee68c0af766f5f350e645\$lut for cells of type $lut.
Using template $paramod$a4df2b5be2b644499880e088a11556935f22b401\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$adac5163f2ca606e303e4fcb6e4ac1a8cfe9825d\$lut for cells of type $lut.
Using template $paramod$82ef8f0dce7b071d4266f4fa88a807ef539a09b8\$lut for cells of type $lut.
Using template $paramod$5c03ca3698d3a475205f16e96cbefa4cb870ca31\$lut for cells of type $lut.
Using template $paramod$ffd2378ab8e7352643c4c93416eedca645db528c\$lut for cells of type $lut.
Using template $paramod$d2a2eb877adf55a09626aa24c277d95d0391fe7f\$lut for cells of type $lut.
Using template $paramod$25445de1ee050b172294b1ea87db649c42a0151d\$lut for cells of type $lut.
Using template $paramod$9230fa54f8ca79d1df7f27694442de0e829b202a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$62eb5dde232c3c093e91cb23ae88e58b1968f3fe\$lut for cells of type $lut.
Using template $paramod$dc677cbdfd2fd02370dcc9b1f964947e142ef960\$lut for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod$cd05f04889088c47a0a5abae8c2d644fd314805e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$c14b34f16c7002b88d20e40ed8901e64fbdbc0cd\$lut for cells of type $lut.
Using template $paramod$c285476abb9cd76436c09b4601701c781e9f06ad\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111110 for cells of type $lut.
Using template $paramod$4da2782c2e024b3eded45331a6607870b9d0254f\$lut for cells of type $lut.
Using template $paramod$90211918a84e1cef3407e0f8e61fa8260d248e82\$lut for cells of type $lut.
Using template $paramod$0d36487aeddbe99518862d8886e2cef990c3a36a\$lut for cells of type $lut.
Using template $paramod$c2c7fe860c90cfc70af61d39029863cfb8b6f377\$lut for cells of type $lut.
Using template $paramod$59de045429641615f9fe556a2af28d0739e5972e\$lut for cells of type $lut.
Using template $paramod$c4a97cf0b46779df8741d618ac94cb76d112af85\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001011 for cells of type $lut.
Using template $paramod$d5dc8bdb40fd8609b78a0490a3aa62fa1035e4ef\$lut for cells of type $lut.
Using template $paramod$1b4b7625ffe031d40bdb5b64957238b126d89a31\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110100 for cells of type $lut.
Using template $paramod$bb4fff1cc3b827238aa40993cafede1c5beecbe3\$lut for cells of type $lut.
Using template $paramod$c5f3c57a6d466a2f42208bafb8985b96ce884440\$lut for cells of type $lut.
Using template $paramod$74f3e1382a1da2c16bbfb511295b3c1fbc49a124\$lut for cells of type $lut.
Using template $paramod$066defbb768264292983a163d5458a9e52196764\$lut for cells of type $lut.
Using template $paramod$96cdb5a2806a4f703f922548a9fa4dcffcd8ad7a\$lut for cells of type $lut.
Using template $paramod$dd4e7da19f5a5dc729067b86883fba57a8a9685c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$ce4de48da1dae474e040e32e00891e27893389af\$lut for cells of type $lut.
Using template $paramod$933f4f3e373a784da64d137def3625bdd36d1695\$lut for cells of type $lut.
Using template $paramod$96a3fe6598593729f244fa011a332401bbcb48fb\$lut for cells of type $lut.
Using template $paramod$45d617c2ce0041e27b541f62b0fc3c3ce441a616\$lut for cells of type $lut.
Using template $paramod$575415f3cca507f0b14c5755a920bd1178c958fb\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod$d1246f070b69171a8f0389f36df53e0745def7ef\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010100 for cells of type $lut.
Using template $paramod$bf60f6ec407ee294958b6566514fc3125ec42258\$lut for cells of type $lut.
Using template $paramod$7d3cbfc289ec00e0691f33de08826f2254fca668\$lut for cells of type $lut.
Using template $paramod$cd6c4b4da6d8737b72fd2dc8f5d83d8967445809\$lut for cells of type $lut.
Using template $paramod$9583ab40db57ba76ead4c869be5b61dc3f252411\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$c471af5667a682bd131a5b479e58e470d1b2b7cd\$lut for cells of type $lut.
Using template $paramod$855e47f6b19c324c46580bd6b8219b9e8178f78e\$lut for cells of type $lut.
Using template $paramod$d6cf0a4b6f6ccd87588da28c41b5b6c258da2509\$lut for cells of type $lut.
Using template $paramod$ea0faad69a26c91786a25961ea149d0e0961eb1f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100011 for cells of type $lut.
Using template $paramod$1b06c04477fb6e170b8c3f833c330a24229c881a\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000010 for cells of type $lut.
Using template $paramod$ad3a97108c9f4d10f8acfa309b668b9455d3d733\$lut for cells of type $lut.
Using template $paramod$3204210736873ef5d53b95f3dbe4714b354f9351\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$9423d73477f88bd1bf9672c3754bed076beee016\$lut for cells of type $lut.
Using template $paramod$d119410bab96963da0139669592048db2c09198b\$lut for cells of type $lut.
Using template $paramod$51307cdec77060d17363ea3d60427c9afef1ddc2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011100 for cells of type $lut.
Using template $paramod$e053a22d78e6bd5ea33183ea69976f0db741be0e\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~2297 debug messages>
Removed 0 unused cells and 948 unused wires.

9.46. Executing AUTONAME pass.
Renamed 9972 objects in module top (43 iterations).
<suppressed ~1020 debug messages>

9.47. Executing HIERARCHY pass (managing design hierarchy).

9.47.1. Analyzing design hierarchy..
Top module:  \top

9.47.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

9.48. Printing statistics.

=== top ===

   Number of wires:                308
   Number of wire bits:           1634
   Number of public wires:         308
   Number of public wire bits:    1634
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                821
     SB_CARRY                      117
     SB_DFF                         16
     SB_DFFE                        98
     SB_DFFESR                      97
     SB_DFFESS                       1
     SB_DFFSR                       55
     SB_DFFSS                        1
     SB_LUT4                       435
     SB_PLL40_PAD                    1

9.49. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

9.50. Executing JSON backend.

Warnings: 7 unique messages, 7 total
End of script. Logfile hash: f185d33e45, CPU: user 0.86s system 0.03s, MEM: 38.31 MB peak
Yosys 0.25+1 (git sha1 d3216593d, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 29% 1x abc (0 sec), 20% 27x read_verilog (0 sec), ...
