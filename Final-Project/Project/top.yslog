
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.25+1 (git sha1 d3216593d, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Parsing `top.sv' using frontend ` -sv' --

1. Executing Verilog-2005 frontend: top.sv
Parsing SystemVerilog input from `top.sv' to AST representation.
Storing AST representation for module `$abstract\top'.
Successfully finished Verilog frontend.

-- Parsing `sine.sv' using frontend ` -sv' --

2. Executing Verilog-2005 frontend: sine.sv
Parsing SystemVerilog input from `sine.sv' to AST representation.
Storing AST representation for module `$abstract\sine'.
Successfully finished Verilog frontend.

-- Parsing `../../provided_modules/axis_i2s2.v' using frontend ` -vlog2k' --

3. Executing Verilog-2005 frontend: ../../provided_modules/axis_i2s2.v
Parsing Verilog input from `../../provided_modules/axis_i2s2.v' to AST representation.
Storing AST representation for module `$abstract\axis_i2s2'.
Successfully finished Verilog frontend.

-- Parsing `../../provided_modules/inv.sv' using frontend ` -sv' --

4. Executing Verilog-2005 frontend: ../../provided_modules/inv.sv
Parsing SystemVerilog input from `../../provided_modules/inv.sv' to AST representation.
Storing AST representation for module `$abstract\inv'.
Successfully finished Verilog frontend.

-- Parsing `../../provided_modules/dff.sv' using frontend ` -sv' --

5. Executing Verilog-2005 frontend: ../../provided_modules/dff.sv
Parsing SystemVerilog input from `../../provided_modules/dff.sv' to AST representation.
Storing AST representation for module `$abstract\dff'.
Successfully finished Verilog frontend.

-- Parsing `ram_1r1w_sync.sv' using frontend ` -sv' --

6. Executing Verilog-2005 frontend: ram_1r1w_sync.sv
Parsing SystemVerilog input from `ram_1r1w_sync.sv' to AST representation.
Storing AST representation for module `$abstract\ram_1r1w_sync'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top top -json top.json' --

7. Executing SYNTH_ICE40 pass.

7.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

7.2. Executing HIERARCHY pass (managing design hierarchy).

7.3. Executing AST frontend in derive mode using pre-parsed AST for module `\top'.
Generating RTLIL representation for module `\top'.

7.3.1. Analyzing design hierarchy..
Top module:  \top

7.3.2. Executing AST frontend in derive mode using pre-parsed AST for module `\sine'.
Generating RTLIL representation for module `\sine'.

7.3.3. Executing AST frontend in derive mode using pre-parsed AST for module `\axis_i2s2'.
Generating RTLIL representation for module `\axis_i2s2'.
Note: Assuming pure combinatorial block at ../../provided_modules/axis_i2s2.v:102.5-109.29 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.

7.3.4. Executing AST frontend in derive mode using pre-parsed AST for module `\dff'.
Generating RTLIL representation for module `\dff'.

7.3.5. Executing AST frontend in derive mode using pre-parsed AST for module `\inv'.
Generating RTLIL representation for module `\inv'.

7.3.6. Analyzing design hierarchy..
Top module:  \top
Used module:     \sine
Used module:     \axis_i2s2
Used module:     \dff
Used module:     \inv
Parameter \width_p = 24
Parameter \depth_p = 64
Parameter \filename_p = 64'0111001101101001011011100110010100101110011010000110010101111000

7.3.7. Executing AST frontend in derive mode using pre-parsed AST for module `\ram_1r1w_sync'.
Parameter \width_p = 24
Parameter \depth_p = 64
Parameter \filename_p = 64'0111001101101001011011100110010100101110011010000110010101111000
Generating RTLIL representation for module `$paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync'.

7.3.8. Analyzing design hierarchy..
Top module:  \top
Used module:     \sine
Used module:         $paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync
Used module:     \axis_i2s2
Used module:     \dff
Used module:     \inv

7.3.9. Analyzing design hierarchy..
Top module:  \top
Used module:     \sine
Used module:         $paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync
Used module:     \axis_i2s2
Used module:     \dff
Used module:     \inv
Removing unused module `$abstract\ram_1r1w_sync'.
Removing unused module `$abstract\dff'.
Removing unused module `$abstract\inv'.
Removing unused module `$abstract\axis_i2s2'.
Removing unused module `$abstract\sine'.
Removing unused module `$abstract\top'.
Removed 6 unused modules.
Warning: Resizing cell port top.i2s2_inst.rx_axis_p_data from 24 bits to 32 bits.
Warning: Resizing cell port top.i2s2_inst.tx_axis_c_data from 24 bits to 32 bits.

7.4. Executing PROC pass (convert processes to netlists).

7.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync.$proc$ram_1r1w_sync.sv:0$476'.
Cleaned up 0 empty switches.

7.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$241 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$234 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$230 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$223 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$220 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$217 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$214 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$211 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$203 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$196 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$192 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$185 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$182 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$179 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$176 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$173 in module SB_DFFSR.
Marked 1 switch rules as full_case in process $proc$ram_1r1w_sync.sv:34$468 in module $paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync.
Marked 1 switch rules as full_case in process $proc$../../provided_modules/dff.sv:21$463 in module dff.
Marked 2 switch rules as full_case in process $proc$../../provided_modules/axis_i2s2.v:149$441 in module axis_i2s2.
Marked 2 switch rules as full_case in process $proc$../../provided_modules/axis_i2s2.v:141$431 in module axis_i2s2.
Marked 1 switch rules as full_case in process $proc$../../provided_modules/axis_i2s2.v:130$424 in module axis_i2s2.
Marked 1 switch rules as full_case in process $proc$../../provided_modules/axis_i2s2.v:120$417 in module axis_i2s2.
Marked 2 switch rules as full_case in process $proc$../../provided_modules/axis_i2s2.v:102$411 in module axis_i2s2.
Marked 2 switch rules as full_case in process $proc$../../provided_modules/axis_i2s2.v:91$403 in module axis_i2s2.
Marked 2 switch rules as full_case in process $proc$../../provided_modules/axis_i2s2.v:77$397 in module axis_i2s2.
Marked 3 switch rules as full_case in process $proc$../../provided_modules/axis_i2s2.v:67$388 in module axis_i2s2.
Marked 1 switch rules as full_case in process $proc$sine.sv:25$382 in module sine.
Removed a total of 0 dead cases.

7.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 10 redundant assignments.
Promoted 43 assignments to connections.

7.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$244'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$240'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$233'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$229'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$222'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$219'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$216'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$213'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$210'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$208'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$206'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$202'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$195'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$191'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$184'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$181'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$178'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$175'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$172'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$170'.
  Set init value: \Q = 1'0
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:129$462'.
  Set init value: \rx_data_r = 0
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:128$461'.
  Set init value: \rx_data_l = 0
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:119$460'.
  Set init value: \rx_data_r_shift = 24'000000000000000000000000
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:118$459'.
  Set init value: \rx_data_l_shift = 24'000000000000000000000000
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:112$458'.
  Set init value: \din_sync_shift = 3'000
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:89$457'.
  Set init value: \tx_data_r_shift = 24'000000000000000000000000
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:88$456'.
  Set init value: \tx_data_l_shift = 24'000000000000000000000000
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:65$455'.
  Set init value: \tx_data_r = 0
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:64$454'.
  Set init value: \tx_data_l = 0
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:47$453'.
  Set init value: \count = 9'000000000
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:0$452'.
  Set init value: \rx_axis_p_last = 1'0
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:0$451'.
  Set init value: \rx_axis_p_valid = 1'0
Found init rule in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:0$450'.
  Set init value: \tx_axis_c_ready = 1'0
Found init rule in `\sine.$proc$sine.sv:17$385'.
  Set init value: \phase_l = 0

7.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$241'.
Found async reset \R in `\SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$230'.
Found async reset \S in `\SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$220'.
Found async reset \R in `\SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$214'.
Found async reset \S in `\SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$203'.
Found async reset \R in `\SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$192'.
Found async reset \S in `\SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$182'.
Found async reset \R in `\SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$176'.

7.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~43 debug messages>

7.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$244'.
Creating decoders for process `\SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$241'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$240'.
Creating decoders for process `\SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$234'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$233'.
Creating decoders for process `\SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$230'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$229'.
Creating decoders for process `\SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$223'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$222'.
Creating decoders for process `\SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$220'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$219'.
Creating decoders for process `\SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$217'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$216'.
Creating decoders for process `\SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$214'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$213'.
Creating decoders for process `\SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$211'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$210'.
Creating decoders for process `\SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$209'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$208'.
Creating decoders for process `\SB_DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:882$207'.
Creating decoders for process `\SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$206'.
Creating decoders for process `\SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$203'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$202'.
Creating decoders for process `\SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$196'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$195'.
Creating decoders for process `\SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$192'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$191'.
Creating decoders for process `\SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$185'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$184'.
Creating decoders for process `\SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$182'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$181'.
Creating decoders for process `\SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$179'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$178'.
Creating decoders for process `\SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$176'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$175'.
Creating decoders for process `\SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$173'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$172'.
Creating decoders for process `\SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$171'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$170'.
Creating decoders for process `\SB_DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$169'.
Creating decoders for process `$paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync.$proc$ram_1r1w_sync.sv:34$468'.
     1/3: $1$memwr$\mem$ram_1r1w_sync.sv:36$465_EN[23:0]$474
     2/3: $1$memwr$\mem$ram_1r1w_sync.sv:36$465_DATA[23:0]$473
     3/3: $1$memwr$\mem$ram_1r1w_sync.sv:36$465_ADDR[5:0]$472
Creating decoders for process `$paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync.$proc$ram_1r1w_sync.sv:29$466'.
Creating decoders for process `\dff.$proc$../../provided_modules/dff.sv:21$463'.
     1/1: $0\q_r[0:0]
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:129$462'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:128$461'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:119$460'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:118$459'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:112$458'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:89$457'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:88$456'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:65$455'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:64$454'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:47$453'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:0$452'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:0$451'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:0$450'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:149$441'.
     1/1: $0\rx_axis_p_last[0:0]
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:141$431'.
     1/1: $0\rx_axis_p_valid[0:0]
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:130$424'.
     1/2: $0\rx_data_r[31:0]
     2/2: $0\rx_data_l[31:0]
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:120$417'.
     1/2: $0\rx_data_r_shift[23:0]
     2/2: $0\rx_data_l_shift[23:0]
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:114$416'.
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:102$411'.
     1/2: $2\tx_sdout[0:0]
     2/2: $1\tx_sdout[0:0]
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:91$403'.
     1/2: $0\tx_data_r_shift[23:0]
     2/2: $0\tx_data_l_shift[23:0]
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:77$397'.
     1/2: $0\tx_data_r[31:0]
     2/2: $0\tx_data_l[31:0]
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:67$388'.
     1/1: $0\tx_axis_c_ready[0:0]
Creating decoders for process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:50$386'.
Creating decoders for process `\sine.$proc$sine.sv:17$385'.
Creating decoders for process `\sine.$proc$sine.sv:25$382'.
     1/2: $0\valid_o_l[0:0]
     2/2: $0\phase_l[31:0]

7.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\axis_i2s2.\tx_sdout' from process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:102$411'.

7.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$241'.
  created $adff cell `$procdff$628' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$234'.
  created $dff cell `$procdff$629' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$230'.
  created $adff cell `$procdff$630' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$223'.
  created $dff cell `$procdff$631' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$220'.
  created $adff cell `$procdff$632' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$217'.
  created $dff cell `$procdff$633' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$214'.
  created $adff cell `$procdff$634' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$211'.
  created $dff cell `$procdff$635' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$209'.
  created $dff cell `$procdff$636' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:882$207'.
  created $dff cell `$procdff$637' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$203'.
  created $adff cell `$procdff$638' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$196'.
  created $dff cell `$procdff$639' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$192'.
  created $adff cell `$procdff$640' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$185'.
  created $dff cell `$procdff$641' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$182'.
  created $adff cell `$procdff$642' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$179'.
  created $dff cell `$procdff$643' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$176'.
  created $adff cell `$procdff$644' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$173'.
  created $dff cell `$procdff$645' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$171'.
  created $dff cell `$procdff$646' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$169'.
  created $dff cell `$procdff$647' with positive edge clock.
Creating register for signal `$paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync.$memwr$\mem$ram_1r1w_sync.sv:36$465_ADDR' using process `$paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync.$proc$ram_1r1w_sync.sv:34$468'.
  created $dff cell `$procdff$648' with positive edge clock.
Creating register for signal `$paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync.$memwr$\mem$ram_1r1w_sync.sv:36$465_DATA' using process `$paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync.$proc$ram_1r1w_sync.sv:34$468'.
  created $dff cell `$procdff$649' with positive edge clock.
Creating register for signal `$paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync.$memwr$\mem$ram_1r1w_sync.sv:36$465_EN' using process `$paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync.$proc$ram_1r1w_sync.sv:34$468'.
  created $dff cell `$procdff$650' with positive edge clock.
Creating register for signal `$paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync.\read_addr_l' using process `$paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync.$proc$ram_1r1w_sync.sv:29$466'.
  created $dff cell `$procdff$651' with positive edge clock.
Creating register for signal `\dff.\q_r' using process `\dff.$proc$../../provided_modules/dff.sv:21$463'.
  created $dff cell `$procdff$652' with positive edge clock.
Creating register for signal `\axis_i2s2.\rx_axis_p_last' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:149$441'.
  created $dff cell `$procdff$653' with positive edge clock.
Creating register for signal `\axis_i2s2.\rx_axis_p_valid' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:141$431'.
  created $dff cell `$procdff$654' with positive edge clock.
Creating register for signal `\axis_i2s2.\rx_data_l' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:130$424'.
  created $dff cell `$procdff$655' with positive edge clock.
Creating register for signal `\axis_i2s2.\rx_data_r' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:130$424'.
  created $dff cell `$procdff$656' with positive edge clock.
Creating register for signal `\axis_i2s2.\rx_data_l_shift' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:120$417'.
  created $dff cell `$procdff$657' with positive edge clock.
Creating register for signal `\axis_i2s2.\rx_data_r_shift' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:120$417'.
  created $dff cell `$procdff$658' with positive edge clock.
Creating register for signal `\axis_i2s2.\din_sync_shift' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:114$416'.
  created $dff cell `$procdff$659' with positive edge clock.
Creating register for signal `\axis_i2s2.\tx_data_l_shift' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:91$403'.
  created $dff cell `$procdff$660' with positive edge clock.
Creating register for signal `\axis_i2s2.\tx_data_r_shift' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:91$403'.
  created $dff cell `$procdff$661' with positive edge clock.
Creating register for signal `\axis_i2s2.\tx_data_l' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:77$397'.
  created $dff cell `$procdff$662' with positive edge clock.
Creating register for signal `\axis_i2s2.\tx_data_r' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:77$397'.
  created $dff cell `$procdff$663' with positive edge clock.
Creating register for signal `\axis_i2s2.\tx_axis_c_ready' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:67$388'.
  created $dff cell `$procdff$664' with positive edge clock.
Creating register for signal `\axis_i2s2.\count' using process `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:50$386'.
  created $dff cell `$procdff$665' with positive edge clock.
Creating register for signal `\sine.\phase_l' using process `\sine.$proc$sine.sv:25$382'.
  created $dff cell `$procdff$666' with positive edge clock.
Creating register for signal `\sine.\valid_o_l' using process `\sine.$proc$sine.sv:25$382'.
  created $dff cell `$procdff$667' with positive edge clock.

7.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

7.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$244'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$241'.
Removing empty process `SB_DFFNES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$241'.
Removing empty process `SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$240'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$234'.
Removing empty process `SB_DFFNESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$234'.
Removing empty process `SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$233'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$230'.
Removing empty process `SB_DFFNER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$230'.
Removing empty process `SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$229'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$223'.
Removing empty process `SB_DFFNESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$223'.
Removing empty process `SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$222'.
Removing empty process `SB_DFFNS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$220'.
Removing empty process `SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$219'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$217'.
Removing empty process `SB_DFFNSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$217'.
Removing empty process `SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$216'.
Removing empty process `SB_DFFNR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$214'.
Removing empty process `SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$213'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$211'.
Removing empty process `SB_DFFNSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$211'.
Removing empty process `SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$210'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$209'.
Removing empty process `SB_DFFNE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$209'.
Removing empty process `SB_DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$208'.
Removing empty process `SB_DFFN.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:882$207'.
Removing empty process `SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$206'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$203'.
Removing empty process `SB_DFFES.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$203'.
Removing empty process `SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$202'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$196'.
Removing empty process `SB_DFFESS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$196'.
Removing empty process `SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$195'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$192'.
Removing empty process `SB_DFFER.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$192'.
Removing empty process `SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$191'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$185'.
Removing empty process `SB_DFFESR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$185'.
Removing empty process `SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$184'.
Removing empty process `SB_DFFS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$182'.
Removing empty process `SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$181'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$179'.
Removing empty process `SB_DFFSS.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$179'.
Removing empty process `SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$178'.
Removing empty process `SB_DFFR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$176'.
Removing empty process `SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$175'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$173'.
Removing empty process `SB_DFFSR.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$173'.
Removing empty process `SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$172'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$171'.
Removing empty process `SB_DFFE.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$171'.
Removing empty process `SB_DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$170'.
Removing empty process `SB_DFF.$proc$/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$169'.
Found and cleaned up 1 empty switch in `$paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync.$proc$ram_1r1w_sync.sv:34$468'.
Removing empty process `$paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync.$proc$ram_1r1w_sync.sv:34$468'.
Removing empty process `$paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync.$proc$ram_1r1w_sync.sv:29$466'.
Found and cleaned up 1 empty switch in `\dff.$proc$../../provided_modules/dff.sv:21$463'.
Removing empty process `dff.$proc$../../provided_modules/dff.sv:21$463'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:129$462'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:128$461'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:119$460'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:118$459'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:112$458'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:89$457'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:88$456'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:65$455'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:64$454'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:47$453'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:0$452'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:0$451'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:0$450'.
Found and cleaned up 3 empty switches in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:149$441'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:149$441'.
Found and cleaned up 3 empty switches in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:141$431'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:141$431'.
Found and cleaned up 2 empty switches in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:130$424'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:130$424'.
Found and cleaned up 2 empty switches in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:120$417'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:120$417'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:114$416'.
Found and cleaned up 2 empty switches in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:102$411'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:102$411'.
Found and cleaned up 3 empty switches in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:91$403'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:91$403'.
Found and cleaned up 3 empty switches in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:77$397'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:77$397'.
Found and cleaned up 4 empty switches in `\axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:67$388'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:67$388'.
Removing empty process `axis_i2s2.$proc$../../provided_modules/axis_i2s2.v:50$386'.
Removing empty process `sine.$proc$sine.sv:17$385'.
Found and cleaned up 1 empty switch in `\sine.$proc$sine.sv:25$382'.
Removing empty process `sine.$proc$sine.sv:25$382'.
Cleaned up 43 empty switches.

7.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync.
Optimizing module inv.
Optimizing module dff.
Optimizing module axis_i2s2.
<suppressed ~31 debug messages>
Optimizing module sine.
Optimizing module top.

7.5. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod$5a14fcbf932eef5a86394e1cd62b5e5f7c4dd8f0\ram_1r1w_sync.
Deleting now unused module inv.
Deleting now unused module dff.
Deleting now unused module axis_i2s2.
Deleting now unused module sine.
<suppressed ~6 debug messages>

7.6. Executing TRIBUF pass.

7.7. Executing DEMINOUT pass (demote inout ports to input or output).

7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~22 debug messages>

7.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 45 unused cells and 167 unused wires.
<suppressed ~61 debug messages>

7.10. Executing CHECK pass (checking for obvious problems).
Checking module top...
Warning: Wire top.\led_o [4] is used but has no driver.
Warning: Wire top.\led_o [3] is used but has no driver.
Warning: Wire top.\led_o [2] is used but has no driver.
Warning: Wire top.\led_o [1] is used but has no driver.
Warning: Wire top.\led_o [0] is used but has no driver.
Found and reported 5 problems.

7.11. Executing OPT pass (performing simple optimizations).

7.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

7.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\i2s2_inst.$procmux$574.
Removed 1 multiplexer ports.
<suppressed ~8 debug messages>

7.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.11.6. Executing OPT_DFF pass (perform DFF optimizations).

7.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

7.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.11.9. Rerunning OPT passes. (Maybe there is more to do..)

7.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

7.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.11.13. Executing OPT_DFF pass (perform DFF optimizations).

7.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.11.16. Finished OPT passes. (There is nothing left to do.)

7.12. Executing FSM pass (extract and optimize FSM).

7.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.i2s2_inst.tx_data_r as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

7.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

7.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

7.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

7.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

7.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

7.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

7.13. Executing OPT pass (performing simple optimizations).

7.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

7.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\sinegen.$procdff$666 ($dff) from module top (D = $flatten\sinegen.$add$sine.sv:28$384_Y, Q = \sinegen.phase_l).
Adding SRST signal on $flatten\i2s2_inst.$procdff$664 ($dff) from module top (D = $flatten\i2s2_inst.$procmux$611_Y, Q = \i2s2_inst.tx_axis_c_ready, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$670 ($sdff) from module top (D = 1'1, Q = \i2s2_inst.tx_axis_c_ready).
Adding EN signal on $flatten\i2s2_inst.$procdff$663 ($dff) from module top (D = 0, Q = \i2s2_inst.tx_data_r).
Adding SRST signal on $flatten\i2s2_inst.$procdff$662 ($dff) from module top (D = $flatten\i2s2_inst.$procmux$606_Y, Q = \i2s2_inst.tx_data_l, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$675 ($sdff) from module top (D = { 8'00000000 \sinegen.LUT.rd_data_o }, Q = \i2s2_inst.tx_data_l).
Adding EN signal on $flatten\i2s2_inst.$procdff$661 ($dff) from module top (D = $flatten\i2s2_inst.$0\tx_data_r_shift[23:0], Q = \i2s2_inst.tx_data_r_shift).
Adding EN signal on $flatten\i2s2_inst.$procdff$660 ($dff) from module top (D = $flatten\i2s2_inst.$0\tx_data_l_shift[23:0], Q = \i2s2_inst.tx_data_l_shift).
Setting constant 0-bit at position 24 on $auto$ff.cc:266:slice$676 ($sdffe) from module top.
Setting constant 0-bit at position 25 on $auto$ff.cc:266:slice$676 ($sdffe) from module top.
Setting constant 0-bit at position 26 on $auto$ff.cc:266:slice$676 ($sdffe) from module top.
Setting constant 0-bit at position 27 on $auto$ff.cc:266:slice$676 ($sdffe) from module top.
Setting constant 0-bit at position 28 on $auto$ff.cc:266:slice$676 ($sdffe) from module top.
Setting constant 0-bit at position 29 on $auto$ff.cc:266:slice$676 ($sdffe) from module top.
Setting constant 0-bit at position 30 on $auto$ff.cc:266:slice$676 ($sdffe) from module top.
Setting constant 0-bit at position 31 on $auto$ff.cc:266:slice$676 ($sdffe) from module top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 17 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 20 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 21 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 22 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 23 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 24 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 25 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 26 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 27 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 28 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 29 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 30 on $auto$ff.cc:266:slice$674 ($dffe) from module top.
Setting constant 0-bit at position 31 on $auto$ff.cc:266:slice$674 ($dffe) from module top.

7.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 7 unused cells and 7 unused wires.
<suppressed ~8 debug messages>

7.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

7.13.9. Rerunning OPT passes. (Maybe there is more to do..)

7.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

7.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

7.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$677 ($dffe) from module top (D = $flatten\i2s2_inst.$procmux$582_Y, Q = \i2s2_inst.tx_data_r_shift, rval = 24'000000000000000000000000).

7.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

7.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.13.16. Rerunning OPT passes. (Maybe there is more to do..)

7.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

7.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.13.20. Executing OPT_DFF pass (perform DFF optimizations).

7.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.13.23. Finished OPT passes. (There is nothing left to do.)

7.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 26 address bits (of 32) from memory init port top.$flatten\sinegen.\LUT.$meminit$\mem$ram_1r1w_sync.sv:0$475 (sinegen.LUT.mem).
Removed top 2 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$681 ($ne).
Removed top 3 bits (of 4) from port B of cell top.$flatten\i2s2_inst.$ge$../../provided_modules/axis_i2s2.v:103$413 ($ge).
Removed top 4 bits (of 5) from port B of cell top.$flatten\i2s2_inst.$ge$../../provided_modules/axis_i2s2.v:95$406 ($ge).
Removed top 31 bits (of 32) from port B of cell top.$flatten\i2s2_inst.$add$../../provided_modules/axis_i2s2.v:51$387 ($add).
Removed top 23 bits (of 32) from port Y of cell top.$flatten\i2s2_inst.$add$../../provided_modules/axis_i2s2.v:51$387 ($add).
Removed top 12 bits (of 32) from port B of cell top.$flatten\sinegen.$add$sine.sv:28$384 ($add).

7.15. Executing PEEPOPT pass (run peephole optimizers).

7.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

7.17. Executing SHARE pass (SAT-based resource sharing).

7.18. Executing TECHMAP pass (map to technology primitives).

7.18.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/cmp2lut.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

7.18.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~62 debug messages>

7.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.20. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.21. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\i2s2_inst.$add$../../provided_modules/axis_i2s2.v:51$387 ($add).
  creating $macc model for $flatten\sinegen.$add$sine.sv:28$384 ($add).
  creating $alu model for $macc $flatten\sinegen.$add$sine.sv:28$384.
  creating $alu model for $macc $flatten\i2s2_inst.$add$../../provided_modules/axis_i2s2.v:51$387.
  creating $alu model for $flatten\i2s2_inst.$ge$../../provided_modules/axis_i2s2.v:103$413 ($ge): new $alu
  creating $alu model for $flatten\i2s2_inst.$ge$../../provided_modules/axis_i2s2.v:95$406 ($ge): merged with $flatten\i2s2_inst.$ge$../../provided_modules/axis_i2s2.v:103$413.
  creating $alu model for $flatten\i2s2_inst.$le$../../provided_modules/axis_i2s2.v:103$412 ($le): new $alu
  creating $alu cell for $flatten\i2s2_inst.$le$../../provided_modules/axis_i2s2.v:103$412: $auto$alumacc.cc:485:replace_alu$696
  creating $alu cell for $flatten\i2s2_inst.$ge$../../provided_modules/axis_i2s2.v:103$413, $flatten\i2s2_inst.$ge$../../provided_modules/axis_i2s2.v:95$406: $auto$alumacc.cc:485:replace_alu$709
  creating $alu cell for $flatten\i2s2_inst.$add$../../provided_modules/axis_i2s2.v:51$387: $auto$alumacc.cc:485:replace_alu$720
  creating $alu cell for $flatten\sinegen.$add$sine.sv:28$384: $auto$alumacc.cc:485:replace_alu$723
  created 4 $alu and 0 $macc cells.

7.22. Executing OPT pass (performing simple optimizations).

7.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

7.22.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

7.22.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.22.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.22.6. Executing OPT_DFF pass (perform DFF optimizations).

7.22.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

7.22.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.22.9. Rerunning OPT passes. (Maybe there is more to do..)

7.22.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

7.22.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.22.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.22.13. Executing OPT_DFF pass (perform DFF optimizations).

7.22.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.22.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.22.16. Finished OPT passes. (There is nothing left to do.)

7.23. Executing MEMORY pass.

7.23.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 1 transformations.

7.23.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

7.23.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

7.23.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

7.23.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\sinegen.LUT.mem'[0] in module `\top': merging output FF to cell.

7.23.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 24 unused wires.
<suppressed ~2 debug messages>

7.23.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

7.23.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

7.23.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.23.10. Executing MEMORY_COLLECT pass (generating $mem cells).

7.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.25. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory top.sinegen.LUT.mem
<suppressed ~52 debug messages>

7.26. Executing TECHMAP pass (map to technology primitives).

7.26.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

7.26.2. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

7.26.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

7.27. Executing ICE40_BRAMINIT pass.

7.28. Executing OPT pass (performing simple optimizations).

7.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~26 debug messages>

7.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.28.3. Executing OPT_DFF pass (perform DFF optimizations).

7.28.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 5 unused wires.
<suppressed ~2 debug messages>

7.28.5. Finished fast OPT passes.

7.29. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \sinegen.LUT.mem in module \top:
  created 64 $dff cells and 0 static cells of width 24.
Extracted data FF from read port 0 of top.sinegen.LUT.mem: $\sinegen.LUT.mem$rdreg[0]
  read interface: 1 $dff and 63 $mux cells.
  write interface: 0 write mux blocks.

7.30. Executing OPT pass (performing simple optimizations).

7.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

7.30.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][30]$956:
      Old ports: A=24'111001111000001000011101, B=24'111011010110101111111001, Y=$memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864
      New ports: A=2'01, B=2'10, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [5] $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [2] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [23:6] $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [4:3] $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [1:0] } = { 4'1110 $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [5] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [2] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [2] $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [5] $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [5] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [5] 2'01 $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [5] $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [5] $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [5] 4'1101 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][29]$953:
      Old ports: A=24'110111000111000110001001, B=24'111000011101010010100010, Y=$memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862
      New ports: A=2'01, B=2'10, Y=$memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862 [1:0]
      New connections: $memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862 [23:2] = { 2'11 $memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862 [1:0] $memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862 [0] $memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862 [0] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862 [1] $memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862 [1] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862 [0] 2'10 $memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862 [0] 2'10 $memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][28]$950:
      Old ports: A=24'110100101011111011000011, B=24'110101110110011000011001, Y=$memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861
      New ports: A=2'01, B=2'10, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [3] $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [1] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [23:4] $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [2] $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [0] } = { 5'11010 $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [3] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [3] $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [1] $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [3] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [1] $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [1] 3'110 $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [1] $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [3] 2'01 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][27]$947:
      Old ports: A=24'110010101100100100110011, B=24'110011101000011011111111, Y=$memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859
      New ports: A=2'10, B=2'01, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859 [8] $memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859 [2] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859 [23:9] $memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859 [7:3] $memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859 [1:0] } = { 5'11001 $memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859 [2] 3'101 $memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859 [8] 2'00 $memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859 [8] $memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859 [2] $memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859 [2] $memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859 [2] $memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859 [2] 2'11 $memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][26]$944:
      Old ports: A=24'110001001101111100101000, B=24'110001111000111010011010, Y=$memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858
      New ports: A=2'10, B=2'01, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858 [5] $memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858 [1] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858 [23:6] $memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858 [4:2] $memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858 [0] } = { 6'110001 $memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858 [1] $memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858 [1] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858 [5] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858 [5] 3'111 $memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858 [5] $memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858 [1] 3'100 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][25]$941:
      Old ports: A=24'110000010011101011010000, B=24'110000101100000101111101, Y=$memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856
      New ports: A=2'10, B=2'01, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [7] $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [23:8] $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [6:1] } = { 6'110000 $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [0] $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [7] $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [0] $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [0] $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [7] $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [7] $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [7] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [7] $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [0] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [0] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [0] $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][24]$938:
      Old ports: A=24'110000000000000000000000, B=24'110000000100111011100100, Y=$memory\sinegen.LUT.mem$rdmux[0][4][12]$a$855
      New ports: A=1'0, B=1'1, Y=$memory\sinegen.LUT.mem$rdmux[0][4][12]$a$855 [2]
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][12]$a$855 [23:3] $memory\sinegen.LUT.mem$rdmux[0][4][12]$a$855 [1:0] } = { 9'110000000 $memory\sinegen.LUT.mem$rdmux[0][4][12]$a$855 [2] 2'00 $memory\sinegen.LUT.mem$rdmux[0][4][12]$a$855 [2] $memory\sinegen.LUT.mem$rdmux[0][4][12]$a$855 [2] $memory\sinegen.LUT.mem$rdmux[0][4][12]$a$855 [2] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][12]$a$855 [2] $memory\sinegen.LUT.mem$rdmux[0][4][12]$a$855 [2] $memory\sinegen.LUT.mem$rdmux[0][4][12]$a$855 [2] 4'0000 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][23]$935:
      Old ports: A=24'110000010011101011010000, B=24'110000000100111011100100, Y=$memory\sinegen.LUT.mem$rdmux[0][4][11]$b$853
      New ports: A=2'10, B=2'01, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][11]$b$853 [4] $memory\sinegen.LUT.mem$rdmux[0][4][11]$b$853 [2] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][11]$b$853 [23:5] $memory\sinegen.LUT.mem$rdmux[0][4][11]$b$853 [3] $memory\sinegen.LUT.mem$rdmux[0][4][11]$b$853 [1:0] } = { 7'1100000 $memory\sinegen.LUT.mem$rdmux[0][4][11]$b$853 [4] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][11]$b$853 [2] $memory\sinegen.LUT.mem$rdmux[0][4][11]$b$853 [4] $memory\sinegen.LUT.mem$rdmux[0][4][11]$b$853 [4] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][11]$b$853 [2] 4'1011 $memory\sinegen.LUT.mem$rdmux[0][4][11]$b$853 [2] 3'000 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][22]$932:
      Old ports: A=24'110001001101111100101000, B=24'110000101100000101111101, Y=$memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852
      New ports: A=2'10, B=2'01, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [9] $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [23:10] $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [8:1] } = { 5'11000 $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [9] $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [0] 4'0110 $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [9] $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [9] $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [9] 2'10 $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [0] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [0] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][21]$929:
      Old ports: A=24'110010101100100100110011, B=24'110001111000111010011010, Y=$memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850
      New ports: A=2'01, B=2'10, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [3] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [23:4] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [2:1] } = { 4'1100 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [0] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [3] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [3] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [0] 3'001 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [3] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [3] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [0] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [3] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [0] 3'101 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][20]$926:
      Old ports: A=24'110100101011111011000011, B=24'110011101000011011111111, Y=$memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849
      New ports: A=2'10, B=2'01, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849 [11] $memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849 [2] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849 [23:12] $memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849 [10:3] $memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849 [1:0] } = { 3'110 $memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849 [11] $memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849 [2] $memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849 [2] 4'1010 $memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849 [11] $memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849 [11] 5'11011 $memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849 [2] $memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849 [2] $memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849 [2] 2'11 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][19]$923:
      Old ports: A=24'110111000111000110001001, B=24'110101110110011000011001, Y=$memory\sinegen.LUT.mem$rdmux[0][4][9]$b$847
      New ports: A=2'10, B=2'01, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][9]$b$847 [7] $memory\sinegen.LUT.mem$rdmux[0][4][9]$b$847 [4] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][9]$b$847 [23:8] $memory\sinegen.LUT.mem$rdmux[0][4][9]$b$847 [6:5] $memory\sinegen.LUT.mem$rdmux[0][4][9]$b$847 [3:0] } = { 4'1101 $memory\sinegen.LUT.mem$rdmux[0][4][9]$b$847 [7] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][9]$b$847 [4] $memory\sinegen.LUT.mem$rdmux[0][4][9]$b$847 [4] 3'011 $memory\sinegen.LUT.mem$rdmux[0][4][9]$b$847 [7] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][9]$b$847 [4] $memory\sinegen.LUT.mem$rdmux[0][4][9]$b$847 [4] $memory\sinegen.LUT.mem$rdmux[0][4][9]$b$847 [7] 6'001001 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][18]$920:
      Old ports: A=24'111001111000001000011101, B=24'111000011101010010100010, Y=$memory\sinegen.LUT.mem$rdmux[0][4][9]$a$846
      New ports: A=2'01, B=2'10, Y=$memory\sinegen.LUT.mem$rdmux[0][4][9]$a$846 [1:0]
      New connections: $memory\sinegen.LUT.mem$rdmux[0][4][9]$a$846 [23:2] = { 5'11100 $memory\sinegen.LUT.mem$rdmux[0][4][9]$a$846 [0] $memory\sinegen.LUT.mem$rdmux[0][4][9]$a$846 [0] 2'11 $memory\sinegen.LUT.mem$rdmux[0][4][9]$a$846 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][9]$a$846 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][9]$a$846 [1:0] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][9]$a$846 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][9]$a$846 [1:0] $memory\sinegen.LUT.mem$rdmux[0][4][9]$a$846 [0] $memory\sinegen.LUT.mem$rdmux[0][4][9]$a$846 [0] }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][17]$917:
      Old ports: A=24'111100111000001110100011, B=24'111011010110101111111001, Y=$memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844
      New ports: A=2'01, B=2'10, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844 [3] $memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844 [1] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844 [23:4] $memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844 [2] $memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844 [0] } = { 3'111 $memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844 [1] $memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844 [3] $memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844 [3] $memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844 [1] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844 [1] $memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844 [3] $memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844 [3] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844 [3] 4'0111 $memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844 [3] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844 [3] 2'01 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][16]$914:
      Old ports: A=24'000000000000000000000000, B=24'111110011011101000010110, Y=$memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843
      New ports: A=1'0, B=1'1, Y=$memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [1]
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [23:2] $memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [0] } = { $memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [1] $memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [1] $memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [1] $memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [1] $memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [1] 2'00 $memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [1] $memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [1] $memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [1] $memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [1] 4'0000 $memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][15]$911:
      Old ports: A=24'000011000111110001011100, B=24'000001100100010111101001, Y=$memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841
      New ports: A=2'10, B=2'01, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [2] $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [23:3] $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [1] } = { 4'0000 $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [2] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [0] 3'001 $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [2] $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [2] $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [2] 2'10 $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [0] $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [0] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [0] $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [2] 2'10 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][14]$908:
      Old ports: A=24'000110000111110111100010, B=24'000100101001010000000110, Y=$memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840
      New ports: A=2'10, B=2'01, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [5] $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [2] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [23:6] $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [4:3] $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [1:0] } = { 4'0001 $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [5] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [2] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [2] $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [5] $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [5] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [5] 2'10 $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [5] $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [5] $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [5] 4'0010 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][13]$905:
      Old ports: A=24'001000111000111001110110, B=24'000111100010101101011101, Y=$memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838
      New ports: A=2'10, B=2'01, Y=$memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838 [1:0]
      New connections: $memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838 [23:2] = { 2'00 $memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838 [1:0] $memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838 [0] $memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838 [0] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838 [1] $memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838 [0] 2'01 $memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838 [1] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838 [0] 2'01 $memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838 [1] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][12]$902:
      Old ports: A=24'001011010100000100111100, B=24'001010001001100111100110, Y=$memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837
      New ports: A=2'10, B=2'01, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [3] $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [1] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [23:4] $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [2] $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [0] } = { 5'00101 $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [3] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [3] $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [1] $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [3] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [1] $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [1] 3'001 $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [1] $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [1] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [3] 2'10 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][11]$899:
      Old ports: A=24'001101010011011011001100, B=24'001100010111100100000000, Y=$memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835
      New ports: A=2'01, B=2'10, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835 [8] $memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835 [2] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835 [23:9] $memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835 [7:3] $memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835 [1:0] } = { 5'00110 $memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835 [2] 3'010 $memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835 [8] 2'11 $memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835 [8] $memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835 [2] $memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835 [2] $memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835 [2] $memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835 [2] 2'00 $memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835 [2] 2'00 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][10]$896:
      Old ports: A=24'001110110010000011010111, B=24'001110000111000101100101, Y=$memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834
      New ports: A=2'01, B=2'10, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834 [5] $memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834 [1] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834 [23:6] $memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834 [4:2] $memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834 [0] } = { 6'001110 $memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834 [1] $memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834 [5] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834 [5] 3'000 $memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834 [5] $memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834 [1] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834 [1] 3'011 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][9]$893:
      Old ports: A=24'001111101100010100101111, B=24'001111010011111010000010, Y=$memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832
      New ports: A=2'01, B=2'10, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [7] $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [23:8] $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [6:1] } = { 6'001111 $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [0] $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [7] $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [0] $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [0] $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [7] $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [7] $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [7] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [7] $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [0] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [0] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [0] $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][8]$890:
      Old ports: A=24'010000000000000000000000, B=24'001111111011000100011011, Y=$memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831
      New ports: A=2'10, B=2'01, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [22] $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [23] $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [21:1] } = { 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [0] $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [0] $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [0] $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [0] $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [0] $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [0] $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [0] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [0] $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [0] 3'000 $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [0] 3'000 $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [0] $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [0] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [0] }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][7]$887:
      Old ports: A=24'001111101100010100101111, B=24'001111111011000100011011, Y=$memory\sinegen.LUT.mem$rdmux[0][4][3]$b$829
      New ports: A=2'01, B=2'10, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][3]$b$829 [4] $memory\sinegen.LUT.mem$rdmux[0][4][3]$b$829 [2] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][3]$b$829 [23:5] $memory\sinegen.LUT.mem$rdmux[0][4][3]$b$829 [3] $memory\sinegen.LUT.mem$rdmux[0][4][3]$b$829 [1:0] } = { 7'0011111 $memory\sinegen.LUT.mem$rdmux[0][4][3]$b$829 [4] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][3]$b$829 [2] $memory\sinegen.LUT.mem$rdmux[0][4][3]$b$829 [4] $memory\sinegen.LUT.mem$rdmux[0][4][3]$b$829 [4] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][3]$b$829 [2] 4'0100 $memory\sinegen.LUT.mem$rdmux[0][4][3]$b$829 [2] 3'111 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][6]$884:
      Old ports: A=24'001110110010000011010111, B=24'001111010011111010000010, Y=$memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828
      New ports: A=2'01, B=2'10, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [9] $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [23:10] $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [8:1] } = { 5'00111 $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [9] $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [0] 4'1001 $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [9] $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [9] $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [9] 2'01 $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [0] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [0] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [0] 1'1 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][5]$881:
      Old ports: A=24'001101010011011011001100, B=24'001110000111000101100101, Y=$memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826
      New ports: A=2'10, B=2'01, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826 [3] $memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826 [0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826 [23:4] $memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826 [2:1] } = { 4'0011 $memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826 [0] $memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826 [3] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826 [3] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826 [0] 3'110 $memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826 [3] $memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826 [3] $memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826 [0] $memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826 [3] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826 [0] 3'010 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][4]$878:
      Old ports: A=24'001011010100000100111100, B=24'001100010111100100000000, Y=$memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825
      New ports: A=2'01, B=2'10, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825 [11] $memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825 [2] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825 [23:12] $memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825 [10:3] $memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825 [1:0] } = { 3'001 $memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825 [11] $memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825 [2] $memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825 [2] 4'0101 $memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825 [11] $memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825 [11] 5'00100 $memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825 [2] $memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825 [2] $memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825 [2] 2'00 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][3]$875:
      Old ports: A=24'001000111000111001110110, B=24'001010001001100111100110, Y=$memory\sinegen.LUT.mem$rdmux[0][4][1]$b$823
      New ports: A=2'01, B=2'10, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][1]$b$823 [7] $memory\sinegen.LUT.mem$rdmux[0][4][1]$b$823 [4] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][1]$b$823 [23:8] $memory\sinegen.LUT.mem$rdmux[0][4][1]$b$823 [6:5] $memory\sinegen.LUT.mem$rdmux[0][4][1]$b$823 [3:0] } = { 4'0010 $memory\sinegen.LUT.mem$rdmux[0][4][1]$b$823 [7] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][1]$b$823 [4] $memory\sinegen.LUT.mem$rdmux[0][4][1]$b$823 [4] 3'100 $memory\sinegen.LUT.mem$rdmux[0][4][1]$b$823 [7] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][1]$b$823 [4] $memory\sinegen.LUT.mem$rdmux[0][4][1]$b$823 [4] $memory\sinegen.LUT.mem$rdmux[0][4][1]$b$823 [7] 6'110110 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][2]$872:
      Old ports: A=24'000110000111110111100010, B=24'000111100010101101011101, Y=$memory\sinegen.LUT.mem$rdmux[0][4][1]$a$822
      New ports: A=2'10, B=2'01, Y=$memory\sinegen.LUT.mem$rdmux[0][4][1]$a$822 [1:0]
      New connections: $memory\sinegen.LUT.mem$rdmux[0][4][1]$a$822 [23:2] = { 5'00011 $memory\sinegen.LUT.mem$rdmux[0][4][1]$a$822 [0] $memory\sinegen.LUT.mem$rdmux[0][4][1]$a$822 [0] 2'00 $memory\sinegen.LUT.mem$rdmux[0][4][1]$a$822 [1] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][1]$a$822 [1] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][1]$a$822 [1:0] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][1]$a$822 [1] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][1]$a$822 [1:0] $memory\sinegen.LUT.mem$rdmux[0][4][1]$a$822 [0] $memory\sinegen.LUT.mem$rdmux[0][4][1]$a$822 [0] }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][1]$869:
      Old ports: A=24'000011000111110001011100, B=24'000100101001010000000110, Y=$memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820
      New ports: A=2'10, B=2'01, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [3] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [1] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [23:4] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [2] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [0] } = { 3'000 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [1] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [3] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [3] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [1] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [3] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [3] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [3] 4'1000 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [3] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [3] 2'10 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][0]$866:
      Old ports: A=24'000000000000000000000000, B=24'000001100100010111101001, Y=$memory\sinegen.LUT.mem$rdmux[0][4][0]$a$819
      New ports: A=1'0, B=1'1, Y=$memory\sinegen.LUT.mem$rdmux[0][4][0]$a$819 [0]
      New connections: $memory\sinegen.LUT.mem$rdmux[0][4][0]$a$819 [23:1] = { 5'00000 $memory\sinegen.LUT.mem$rdmux[0][4][0]$a$819 [0] $memory\sinegen.LUT.mem$rdmux[0][4][0]$a$819 [0] 2'00 $memory\sinegen.LUT.mem$rdmux[0][4][0]$a$819 [0] 3'000 $memory\sinegen.LUT.mem$rdmux[0][4][0]$a$819 [0] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][0]$a$819 [0] $memory\sinegen.LUT.mem$rdmux[0][4][0]$a$819 [0] $memory\sinegen.LUT.mem$rdmux[0][4][0]$a$819 [0] $memory\sinegen.LUT.mem$rdmux[0][4][0]$a$819 [0] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][0]$a$819 [0] 2'00 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][5][31]$959:
      Old ports: A=24'111100111000001110100011, B=24'111110011011101000010110, Y=$memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865
      New ports: A=2'01, B=2'10, Y={ $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [2] $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [23:3] $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [1] } = { 4'1111 $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [2] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [0] 3'110 $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [2] $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [2] $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [2] 2'01 $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [0] $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [0] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [0] $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [2] 2'01 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][15]$863:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864, B=$memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865, Y=$memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [2] $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [2] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [5] $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [5] $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [5] 2'11 $memory\sinegen.LUT.mem$rdmux[0][4][15]$a$864 [2] 2'01 }, B={ $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [0] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [2] $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [2] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [0] $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [2] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [2] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][15]$b$865 [0] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [17] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [15] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [6:0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [23:18] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [16] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [14:13] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [10:7] } = { 3'111 $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [1] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [11] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [3] 1'1 $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [6] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [11] 2'01 $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [5] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [5] }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][14]$860:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861, B=$memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862, Y=$memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [3] $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [3] 3'110 $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [1] $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [3] $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [3] $memory\sinegen.LUT.mem$rdmux[0][4][14]$a$861 [1] 1'1 }, B={ $memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862 [1] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862 [0] 2'10 $memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862 [0] $memory\sinegen.LUT.mem$rdmux[0][4][14]$b$862 [1:0] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [16] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [14] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [10:3] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [1:0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [23:17] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [15] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [13:11] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [2] } = { 2'11 $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [5] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [0] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [8] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [3] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [9] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [1:0] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [7:6] 1'0 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][13]$857:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858, B=$memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859, Y=$memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858 [1] $memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858 [5] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858 [5] $memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858 [1] $memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858 [5] 2'10 $memory\sinegen.LUT.mem$rdmux[0][4][13]$a$858 [1] 1'0 }, B={ 2'00 $memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859 [8] $memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859 [8] $memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859 [2] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859 [2] $memory\sinegen.LUT.mem$rdmux[0][4][13]$b$859 [2] 2'11 }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [16] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [8:7] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [5] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [3:0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [23:17] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [15:13] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [10:9] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [6] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [4] } = { 4'1100 $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [0] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [3] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [1] 1'1 $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [8] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [3] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [3:1] }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][12]$854:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][4][12]$a$855, B=$memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856, Y=$memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813
      New ports: A={ 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][12]$a$855 [2] $memory\sinegen.LUT.mem$rdmux[0][4][12]$a$855 [2] $memory\sinegen.LUT.mem$rdmux[0][4][12]$a$855 [2] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][12]$a$855 [2] 1'0 }, B={ $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [7] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [7] 2'11 $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [0] $memory\sinegen.LUT.mem$rdmux[0][4][12]$b$856 [0] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [12] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [10] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [7:6] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [4] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [2] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [23:13] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [11] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [9:8] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [5] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [3] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [1] } = { 6'110000 $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [0] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [12] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [0] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [2] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [12] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [7] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [7] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [0] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [2] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][11]$851:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852, B=$memory\sinegen.LUT.mem$rdmux[0][4][11]$b$853, Y=$memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [9] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [9] $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [9] $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [9] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [0] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [0] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [0] $memory\sinegen.LUT.mem$rdmux[0][4][11]$a$852 [0] }, B={ 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][11]$b$853 [4] $memory\sinegen.LUT.mem$rdmux[0][4][11]$b$853 [4] $memory\sinegen.LUT.mem$rdmux[0][4][11]$b$853 [2] 3'111 $memory\sinegen.LUT.mem$rdmux[0][4][11]$b$853 [2] $memory\sinegen.LUT.mem$rdmux[0][4][11]$b$853 [4] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][11]$b$853 [2] 1'0 }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [18] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [13:12] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [10:9] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [7:2] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [23:19] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [17:14] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [11] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [8] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [1] } = { 5'11000 $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [0] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [13] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [3] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [5] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [9] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [3] 1'0 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][10]$848:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849, B=$memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850, Y=$memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810
      New ports: A={ 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849 [11] $memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849 [11] 3'011 $memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849 [2] $memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849 [2] $memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849 [2] $memory\sinegen.LUT.mem$rdmux[0][4][10]$a$849 [2] 1'1 }, B={ $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [3] 2'01 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [0] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [3] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [0] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [3] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [0] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [16] $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [8:2] $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [23:17] $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [15:13] $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [10:9] $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [1] } = { 3'110 $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [12] $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [5] $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [3] 2'11 $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [8] $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [12] $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [7] $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [7] 1'1 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][9]$845:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][4][9]$a$846, B=$memory\sinegen.LUT.mem$rdmux[0][4][9]$b$847, Y=$memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808
      New ports: A={ 2'11 $memory\sinegen.LUT.mem$rdmux[0][4][9]$a$846 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][9]$a$846 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][9]$a$846 [1:0] $memory\sinegen.LUT.mem$rdmux[0][4][9]$a$846 [0] $memory\sinegen.LUT.mem$rdmux[0][4][9]$a$846 [1:0] }, B={ $memory\sinegen.LUT.mem$rdmux[0][4][9]$b$847 [4] 3'011 $memory\sinegen.LUT.mem$rdmux[0][4][9]$b$847 [4] $memory\sinegen.LUT.mem$rdmux[0][4][9]$b$847 [7] $memory\sinegen.LUT.mem$rdmux[0][4][9]$b$847 [7] $memory\sinegen.LUT.mem$rdmux[0][4][9]$b$847 [4] 3'001 }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [16:13] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [10] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [8:7] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [4] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [2:0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [23:17] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [9] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [6:5] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [3] } = { 2'11 $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [15] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [13] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [8] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [0] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [4] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [7] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [4] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [1:0] }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][8]$842:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843, B=$memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844, Y=$memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807
      New ports: A={ 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [1] $memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [1] $memory\sinegen.LUT.mem$rdmux[0][4][8]$a$843 [1] 1'0 }, B={ $memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844 [1] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844 [3] $memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844 [3] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][8]$b$844 [1] 1'1 }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [17] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [9] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [4:0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [23:18] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [16:10] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [8:5] } = { $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [9] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [9] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [9] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [1] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [4:3] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [9] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [1] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [3] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [4] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [2] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [4] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [0] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [0] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [3] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [0] }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][7]$839:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840, B=$memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841, Y=$memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [2] $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [2] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [5] $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [5] $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [5] 2'00 $memory\sinegen.LUT.mem$rdmux[0][4][7]$a$840 [2] 2'10 }, B={ $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [0] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [2] $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [2] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [0] $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [2] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [2] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][7]$b$841 [0] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [17] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [15] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [6:0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [23:18] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [16] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [14:13] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [10:7] } = { 3'000 $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [1] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [11] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [3] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [6] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [11] 2'10 $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [5] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [5] }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][6]$836:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837, B=$memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838, Y=$memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [3] $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [3] 3'001 $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [1] $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [1] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [3] $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [3] $memory\sinegen.LUT.mem$rdmux[0][4][6]$a$837 [1] 1'0 }, B={ $memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838 [1] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838 [0] 2'01 $memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838 [1] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838 [0] $memory\sinegen.LUT.mem$rdmux[0][4][6]$b$838 [1:0] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [16] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [14] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [10:3] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [1:0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [23:17] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [15] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [13:11] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [2] } = { 2'00 $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [5] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [0] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [8] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [3] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [9] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [1:0] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [7:6] 1'1 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][5]$833:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834, B=$memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835, Y=$memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834 [1] $memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834 [5] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834 [5] $memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834 [1] $memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834 [5] 2'01 $memory\sinegen.LUT.mem$rdmux[0][4][5]$a$834 [1] 1'1 }, B={ 2'11 $memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835 [8] $memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835 [8] $memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835 [2] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835 [2] $memory\sinegen.LUT.mem$rdmux[0][4][5]$b$835 [2] 2'00 }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [16] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [8:7] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [5] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [3:0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [23:17] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [15:13] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [10:9] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [6] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [4] } = { 4'0011 $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [0] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [3] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [1] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [8] 1'1 $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [3] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [3:1] }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][4]$830:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831, B=$memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832, Y=$memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [22] $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [0] 2'00 $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [0] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [0] $memory\sinegen.LUT.mem$rdmux[0][4][4]$a$831 [0] }, B={ 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [7] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [7] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [0] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][4]$b$832 [0] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [22] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [12] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [10] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [7] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [4] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [2:0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [23] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [21:13] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [11] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [9:8] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [6:5] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [3] } = { 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [1] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [1] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [1] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [1:0] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [12] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [0] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [2] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [12] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [7] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [7] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [0] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [2] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [0] }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][3]$827:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828, B=$memory\sinegen.LUT.mem$rdmux[0][4][3]$b$829, Y=$memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [9] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [9] $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [9] $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [9] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [0] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [0] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [0] $memory\sinegen.LUT.mem$rdmux[0][4][3]$a$828 [0] }, B={ 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][3]$b$829 [4] $memory\sinegen.LUT.mem$rdmux[0][4][3]$b$829 [4] $memory\sinegen.LUT.mem$rdmux[0][4][3]$b$829 [2] 3'000 $memory\sinegen.LUT.mem$rdmux[0][4][3]$b$829 [2] $memory\sinegen.LUT.mem$rdmux[0][4][3]$b$829 [4] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][3]$b$829 [2] 1'1 }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [18] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [13:12] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [10:9] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [7:2] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [23:19] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [17:14] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [11] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [8] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [1] } = { 5'00111 $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [0] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [13] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [3] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [5] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [9] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [3] 1'1 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][2]$824:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825, B=$memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826, Y=$memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798
      New ports: A={ 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825 [11] $memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825 [11] 3'100 $memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825 [2] $memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825 [2] $memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825 [2] $memory\sinegen.LUT.mem$rdmux[0][4][2]$a$825 [2] 1'0 }, B={ $memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826 [3] 2'10 $memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826 [0] $memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826 [3] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826 [0] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826 [3] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][2]$b$826 [0] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [16] $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [8:2] $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [23:17] $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [15:13] $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [10:9] $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [1] } = { 3'001 $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [12] $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [5] $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [3] 2'00 $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [8] $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [12] $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [7] $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [7] 1'0 }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][1]$821:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][4][1]$a$822, B=$memory\sinegen.LUT.mem$rdmux[0][4][1]$b$823, Y=$memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796
      New ports: A={ 2'00 $memory\sinegen.LUT.mem$rdmux[0][4][1]$a$822 [1] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][1]$a$822 [1] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][1]$a$822 [1:0] $memory\sinegen.LUT.mem$rdmux[0][4][1]$a$822 [0] $memory\sinegen.LUT.mem$rdmux[0][4][1]$a$822 [1:0] }, B={ $memory\sinegen.LUT.mem$rdmux[0][4][1]$b$823 [4] 3'100 $memory\sinegen.LUT.mem$rdmux[0][4][1]$b$823 [4] $memory\sinegen.LUT.mem$rdmux[0][4][1]$b$823 [7] $memory\sinegen.LUT.mem$rdmux[0][4][1]$b$823 [7] $memory\sinegen.LUT.mem$rdmux[0][4][1]$b$823 [4] 3'110 }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [16:13] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [10] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [8:7] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [4] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [2:0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [23:17] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [9] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [6:5] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [3] } = { 2'00 $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [15] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [13] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [8] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [0] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [4] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [7] 1'1 $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [4] 1'1 $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [1:0] }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][0]$818:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][4][0]$a$819, B=$memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820, Y=$memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][0]$a$819 [0] $memory\sinegen.LUT.mem$rdmux[0][4][0]$a$819 [0] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][0]$a$819 [0] 2'00 $memory\sinegen.LUT.mem$rdmux[0][4][0]$a$819 [0] }, B={ $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [1] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [3] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [3] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [1] 1'0 }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [17] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [10] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [4:0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [23:18] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [16:11] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [9:5] } = { 3'000 $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [1] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [4:3] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [1] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [3] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [4] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [2] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [4] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [0] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [0] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [3] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][3][7]$815:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816, B=$memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817, Y=$memory\sinegen.LUT.mem$rdmux[0][2][3]$b$793
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [5] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [0] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [8] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [9] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [16] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [1] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [14] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [0] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [7:6] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [10:3] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [1:0] }, B={ 1'1 $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [1] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [11] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [17] 1'1 $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [15] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [6] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [11] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [12:11] 2'01 $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [5] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [5] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [6:0] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][2][3]$b$793 [21:19] $memory\sinegen.LUT.mem$rdmux[0][2][3]$b$793 [17:0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][2][3]$b$793 [23:22] $memory\sinegen.LUT.mem$rdmux[0][2][3]$b$793 [18] } = { 2'11 $memory\sinegen.LUT.mem$rdmux[0][2][3]$b$793 [3] }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][3][6]$812:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813, B=$memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814, Y=$memory\sinegen.LUT.mem$rdmux[0][2][3]$a$792
      New ports: A={ 2'00 $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [0] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [12] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [0] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [2] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [12] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [12] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [7] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [10] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [7] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [0] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [7:6] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [2] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [4] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [0] $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [2] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][6]$a$813 [0] }, B={ $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [0] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [3] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [1] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [16] 1'1 $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [8] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [3] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [3] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [8:7] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [2] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [5] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [1] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [3:0] }, Y=$memory\sinegen.LUT.mem$rdmux[0][2][3]$a$792 [19:0]
      New connections: $memory\sinegen.LUT.mem$rdmux[0][2][3]$a$792 [23:20] = 4'1100
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][3][5]$809:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810, B=$memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811, Y=$memory\sinegen.LUT.mem$rdmux[0][2][2]$b$790
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [12] $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [5] $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [3] 1'1 $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [16] 1'1 $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [8] $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [12] $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [7] $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [7] $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [8:2] 1'1 $memory\sinegen.LUT.mem$rdmux[0][3][5]$a$810 [0] }, B={ 2'00 $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [18] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [0] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [13] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [3] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [5] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [13:12] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [9] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [10:9] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [3] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [7:2] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [0] }, Y=$memory\sinegen.LUT.mem$rdmux[0][2][2]$b$790 [20:0]
      New connections: $memory\sinegen.LUT.mem$rdmux[0][2][2]$b$790 [23:21] = 3'110
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][3][4]$806:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807, B=$memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808, Y=$memory\sinegen.LUT.mem$rdmux[0][2][2]$a$789
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [9] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [9] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [1] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [4] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [17] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [9] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [1] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [3] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [4] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [2] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [4] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [9] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [0] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [0] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [3] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [0] $memory\sinegen.LUT.mem$rdmux[0][3][4]$a$807 [4:0] }, B={ 1'1 $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [15] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [13] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [8] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [4] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [16:13] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [7] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [10] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [4] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [8:7] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [1] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [4] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [0] $memory\sinegen.LUT.mem$rdmux[0][3][4]$b$808 [2:0] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][2][2]$a$789 [22:19] $memory\sinegen.LUT.mem$rdmux[0][2][2]$a$789 [17:0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][2][2]$a$789 [23] $memory\sinegen.LUT.mem$rdmux[0][2][2]$a$789 [18] } = { $memory\sinegen.LUT.mem$rdmux[0][2][2]$a$789 [22] $memory\sinegen.LUT.mem$rdmux[0][2][2]$a$789 [3] }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][3][3]$803:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804, B=$memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805, Y=$memory\sinegen.LUT.mem$rdmux[0][2][1]$b$787
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [5] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [0] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [8] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [9] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [16] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [1] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [14] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [0] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [7:6] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [10:3] 1'1 $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [1:0] }, B={ 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [1] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [11] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [17] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [15] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [6] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [11] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [12:11] 2'10 $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [5] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [5] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [6:0] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][2][1]$b$787 [21:19] $memory\sinegen.LUT.mem$rdmux[0][2][1]$b$787 [17:0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][2][1]$b$787 [23:22] $memory\sinegen.LUT.mem$rdmux[0][2][1]$b$787 [18] } = { 2'00 $memory\sinegen.LUT.mem$rdmux[0][2][1]$b$787 [3] }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][3][2]$800:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801, B=$memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802, Y=$memory\sinegen.LUT.mem$rdmux[0][2][1]$a$786
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [22] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [1] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [1] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [1:0] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [12] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [0] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [2] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [12] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [12] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [7] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [10] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [7] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [0] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [7] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [2] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [4] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [0] $memory\sinegen.LUT.mem$rdmux[0][3][2]$a$801 [2:0] }, B={ 2'01 $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [0] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [3] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [1] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [16] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [8] 1'1 $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [3] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [3] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [8:7] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [2] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [5] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [1] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [3:0] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][2][1]$a$786 [22] $memory\sinegen.LUT.mem$rdmux[0][2][1]$a$786 [20:0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][2][1]$a$786 [23] $memory\sinegen.LUT.mem$rdmux[0][2][1]$a$786 [21] } = { 1'0 $memory\sinegen.LUT.mem$rdmux[0][2][1]$a$786 [20] }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][3][1]$797:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798, B=$memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799, Y=$memory\sinegen.LUT.mem$rdmux[0][2][0]$b$784
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [12] $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [5] $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [3] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [16] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [8] $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [12] $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [7] $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [7] $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [8:2] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][1]$a$798 [0] }, B={ 2'11 $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [18] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [0] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [13] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [3] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [5] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [13:12] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [9] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [10:9] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [3] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [7:2] 1'1 $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [0] }, Y=$memory\sinegen.LUT.mem$rdmux[0][2][0]$b$784 [20:0]
      New connections: $memory\sinegen.LUT.mem$rdmux[0][2][0]$b$784 [23:21] = 3'001
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][3][0]$794:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795, B=$memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796, Y=$memory\sinegen.LUT.mem$rdmux[0][2][0]$a$783
      New ports: A={ 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [1] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [4] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [17] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [1] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [3] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [4] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [2] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [4] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [10] 1'0 $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [0] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [0] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [3] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [0] $memory\sinegen.LUT.mem$rdmux[0][3][0]$a$795 [4:0] }, B={ $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [15] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [13] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [8] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [4] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [16:13] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [7] 1'1 $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [10] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [4] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [8:7] 1'1 $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [1] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [4] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [0] $memory\sinegen.LUT.mem$rdmux[0][3][0]$b$796 [2:0] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][2][0]$a$783 [21:19] $memory\sinegen.LUT.mem$rdmux[0][2][0]$a$783 [17:0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][2][0]$a$783 [23:22] $memory\sinegen.LUT.mem$rdmux[0][2][0]$a$783 [18] } = { 2'00 $memory\sinegen.LUT.mem$rdmux[0][2][0]$a$783 [3] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][2][3]$791:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][2][3]$a$792, B=$memory\sinegen.LUT.mem$rdmux[0][2][3]$b$793, Y=$memory\sinegen.LUT.mem$rdmux[0][1][1]$b$781
      New ports: A={ 2'00 $memory\sinegen.LUT.mem$rdmux[0][2][3]$a$792 [19:0] }, B={ $memory\sinegen.LUT.mem$rdmux[0][2][3]$b$793 [21:19] $memory\sinegen.LUT.mem$rdmux[0][2][3]$b$793 [3] $memory\sinegen.LUT.mem$rdmux[0][2][3]$b$793 [17:0] }, Y=$memory\sinegen.LUT.mem$rdmux[0][1][1]$b$781 [21:0]
      New connections: $memory\sinegen.LUT.mem$rdmux[0][1][1]$b$781 [23:22] = 2'11
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][2][2]$788:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][2][2]$a$789, B=$memory\sinegen.LUT.mem$rdmux[0][2][2]$b$790, Y=$memory\sinegen.LUT.mem$rdmux[0][1][1]$a$780
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][2][2]$a$789 [22:19] $memory\sinegen.LUT.mem$rdmux[0][2][2]$a$789 [3] $memory\sinegen.LUT.mem$rdmux[0][2][2]$a$789 [17:0] }, B={ 2'10 $memory\sinegen.LUT.mem$rdmux[0][2][2]$b$790 [20:0] }, Y=$memory\sinegen.LUT.mem$rdmux[0][1][1]$a$780 [22:0]
      New connections: $memory\sinegen.LUT.mem$rdmux[0][1][1]$a$780 [23] = $memory\sinegen.LUT.mem$rdmux[0][1][1]$a$780 [22]
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][2][1]$785:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][2][1]$a$786, B=$memory\sinegen.LUT.mem$rdmux[0][2][1]$b$787, Y=$memory\sinegen.LUT.mem$rdmux[0][1][0]$b$778
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][2][1]$a$786 [22] $memory\sinegen.LUT.mem$rdmux[0][2][1]$a$786 [20] $memory\sinegen.LUT.mem$rdmux[0][2][1]$a$786 [20:0] }, B={ 1'0 $memory\sinegen.LUT.mem$rdmux[0][2][1]$b$787 [21:19] $memory\sinegen.LUT.mem$rdmux[0][2][1]$b$787 [3] $memory\sinegen.LUT.mem$rdmux[0][2][1]$b$787 [17:0] }, Y=$memory\sinegen.LUT.mem$rdmux[0][1][0]$b$778 [22:0]
      New connections: $memory\sinegen.LUT.mem$rdmux[0][1][0]$b$778 [23] = 1'0
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][2][0]$782:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][2][0]$a$783, B=$memory\sinegen.LUT.mem$rdmux[0][2][0]$b$784, Y=$memory\sinegen.LUT.mem$rdmux[0][1][0]$a$777
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][2][0]$a$783 [21:19] $memory\sinegen.LUT.mem$rdmux[0][2][0]$a$783 [3] $memory\sinegen.LUT.mem$rdmux[0][2][0]$a$783 [17:0] }, B={ 1'1 $memory\sinegen.LUT.mem$rdmux[0][2][0]$b$784 [20:0] }, Y=$memory\sinegen.LUT.mem$rdmux[0][1][0]$a$777 [21:0]
      New connections: $memory\sinegen.LUT.mem$rdmux[0][1][0]$a$777 [23:22] = 2'00
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][1][1]$779:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][1][1]$a$780, B=$memory\sinegen.LUT.mem$rdmux[0][1][1]$b$781, Y=$memory\sinegen.LUT.mem$rdmux[0][0][0]$b$775
      New ports: A=$memory\sinegen.LUT.mem$rdmux[0][1][1]$a$780 [22:0], B={ 1'1 $memory\sinegen.LUT.mem$rdmux[0][1][1]$b$781 [21:0] }, Y=$memory\sinegen.LUT.mem$rdmux[0][0][0]$b$775 [22:0]
      New connections: $memory\sinegen.LUT.mem$rdmux[0][0][0]$b$775 [23] = $memory\sinegen.LUT.mem$rdmux[0][0][0]$b$775 [22]
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][1][0]$776:
      Old ports: A=$memory\sinegen.LUT.mem$rdmux[0][1][0]$a$777, B=$memory\sinegen.LUT.mem$rdmux[0][1][0]$b$778, Y=$memory\sinegen.LUT.mem$rdmux[0][0][0]$a$774
      New ports: A={ 1'0 $memory\sinegen.LUT.mem$rdmux[0][1][0]$a$777 [21:0] }, B=$memory\sinegen.LUT.mem$rdmux[0][1][0]$b$778 [22:0], Y=$memory\sinegen.LUT.mem$rdmux[0][0][0]$a$774 [22:0]
      New connections: $memory\sinegen.LUT.mem$rdmux[0][0][0]$a$774 [23] = 1'0
  Optimizing cells in module \top.
Performed a total of 62 changes.

7.30.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~87 debug messages>
Removed a total of 29 cells.

7.30.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$684 ($dffe) from module top (D = \i2s2_inst.tx_data_l [0], Q = \i2s2_inst.tx_data_l_shift [0], rval = 1'0).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$692 ($sdffce) from module top.

7.30.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 93 unused wires.
<suppressed ~1 debug messages>

7.30.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.9. Rerunning OPT passes. (Maybe there is more to do..)

7.30.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][11]$851:
      Old ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] }, B={ 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 3'111 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20:19] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 1'0 }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [18] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [16] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [12] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [10] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [11] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [7:6] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [14] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [4] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [15] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [2] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [17] }
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] }, B={ 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 3'111 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20:19] 2'00 }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [18] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [16] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [10] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [11] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [7:6] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [14] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [4] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [15] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [17] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [12] $memory\sinegen.LUT.mem$rdmux[0][3][5]$b$811 [2] } = { $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][13]$857:
      Old ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20:19] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20:19] 2'10 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 1'0 }, B={ 2'00 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 2'11 }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [16] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [14] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [7] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [5] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [18] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [6] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [17] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [19] }
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20:19] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] 2'10 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 1'0 }, B={ 2'00 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 2'11 }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [16] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [5] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [18] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [6] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [17] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [19] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [14] $memory\sinegen.LUT.mem$rdmux[0][3][6]$b$814 [7] } = { $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][14]$860:
      Old ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] 3'110 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 1'1 }, B={ $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 2'10 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19:18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [16] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [14] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [10] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [17] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [19] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [21] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [4] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [18] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [15] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [20] }
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] 3'110 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 1'1 }, B={ 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 2'10 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19:18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [14] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [10] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [17] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [19] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [21] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [4] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [18] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [15] $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [20] }
      New connections: $memory\sinegen.LUT.mem$rdmux[0][3][7]$a$816 [16] = $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18]
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][15]$863:
      Old ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] 2'11 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 2'01 }, B={ $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19:18] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [17] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [15] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [12] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [19] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [14] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [8] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [4] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [18] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [2] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [20] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [0] }
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] 2'11 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 2'01 }, B={ 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19:18] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [15] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [12] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [14] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [8] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [4] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [18] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [2] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [20] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [17] $memory\sinegen.LUT.mem$rdmux[0][3][7]$b$817 [19] } = $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19:18]
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][3]$827:
      Old ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] }, B={ 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 3'000 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19:18] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 1'1 }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [18] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [16] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [12] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [10] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [11] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [7:6] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [14] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [4] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [15] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [2] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [17] }
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] }, B={ 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 3'000 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19:18] 2'11 }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [18] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [16] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [10] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [11] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [7:6] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [14] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [4] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [15] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [17] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [12] $memory\sinegen.LUT.mem$rdmux[0][3][1]$b$799 [2] } = { $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][5]$833:
      Old ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19:18] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19:18] 2'01 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 1'1 }, B={ 2'11 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 2'00 }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [16] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [14] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [7] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [5] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [18] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [6] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [17] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [19] }
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19:18] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] 2'01 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 1'1 }, B={ 2'11 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] 2'00 }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [16] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [5] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [18] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [6] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [17] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [19] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [14] $memory\sinegen.LUT.mem$rdmux[0][3][2]$b$802 [7] } = { $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [18] $memory\sinegen.LUT.mem$rdmux[0][4][10]$b$850 [19] }
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][6]$836:
      Old ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] 3'001 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 1'0 }, B={ $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 2'01 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20:19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [16] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [14] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [10] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [17] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [19] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [21] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [4] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [18] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [15] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [20] }
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] 3'001 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 1'0 }, B={ 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 2'01 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20:19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [14] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [10] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [17] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [19] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [12:11] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [21] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [4] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [18] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [15] $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [20] }
      New connections: $memory\sinegen.LUT.mem$rdmux[0][3][3]$a$804 [16] = $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19]
    Consolidated identical input bits for $mux cell $memory\sinegen.LUT.mem$rdmux[0][4][7]$839:
      Old ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] 2'00 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 2'10 }, B={ $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20:19] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [17] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [15] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [12] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [19] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [14] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [8] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [4] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [18] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [2] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [20] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [0] }
      New ports: A={ $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] 2'00 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] 2'10 }, B={ 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20:19] 1'1 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [19] 1'0 $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20] }, Y={ $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [15] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [12] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [14] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [8] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [4] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [18] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [2] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [20] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [0] }
      New connections: { $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [17] $memory\sinegen.LUT.mem$rdmux[0][3][3]$b$805 [19] } = $memory\sinegen.LUT.mem$rdmux[0][4][0]$b$820 [20:19]
  Optimizing cells in module \top.
Performed a total of 8 changes.

7.30.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$964 ($sdffce) from module top.

7.30.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

7.30.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.16. Rerunning OPT passes. (Maybe there is more to do..)

7.30.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$965 ($sdffce) from module top.

7.30.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.23. Rerunning OPT passes. (Maybe there is more to do..)

7.30.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$966 ($sdffce) from module top.

7.30.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.30. Rerunning OPT passes. (Maybe there is more to do..)

7.30.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.34. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$967 ($sdffce) from module top.

7.30.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.37. Rerunning OPT passes. (Maybe there is more to do..)

7.30.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.41. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$968 ($sdffce) from module top.

7.30.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.44. Rerunning OPT passes. (Maybe there is more to do..)

7.30.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.48. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$969 ($sdffce) from module top.

7.30.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.51. Rerunning OPT passes. (Maybe there is more to do..)

7.30.52. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.53. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.54. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.55. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$970 ($sdffce) from module top.

7.30.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.58. Rerunning OPT passes. (Maybe there is more to do..)

7.30.59. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.60. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.61. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.62. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$971 ($sdffce) from module top.

7.30.63. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.64. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.65. Rerunning OPT passes. (Maybe there is more to do..)

7.30.66. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.67. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.68. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.69. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$972 ($sdffce) from module top.

7.30.70. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.71. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.72. Rerunning OPT passes. (Maybe there is more to do..)

7.30.73. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.74. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.75. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.76. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$973 ($sdffce) from module top.

7.30.77. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.78. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.79. Rerunning OPT passes. (Maybe there is more to do..)

7.30.80. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.81. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.82. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.83. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$974 ($sdffce) from module top.

7.30.84. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.85. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.86. Rerunning OPT passes. (Maybe there is more to do..)

7.30.87. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.88. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.89. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.90. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$975 ($sdffce) from module top.

7.30.91. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.92. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.93. Rerunning OPT passes. (Maybe there is more to do..)

7.30.94. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.95. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.96. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.97. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$976 ($sdffce) from module top.

7.30.98. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.99. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.100. Rerunning OPT passes. (Maybe there is more to do..)

7.30.101. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.102. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.103. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.104. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$977 ($sdffce) from module top.

7.30.105. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.106. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.107. Rerunning OPT passes. (Maybe there is more to do..)

7.30.108. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.109. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.110. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.111. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$978 ($sdffce) from module top.

7.30.112. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.113. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.114. Rerunning OPT passes. (Maybe there is more to do..)

7.30.115. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.116. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.117. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.118. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$979 ($sdffce) from module top.

7.30.119. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.120. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.121. Rerunning OPT passes. (Maybe there is more to do..)

7.30.122. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.123. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.124. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.125. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$980 ($sdffce) from module top.

7.30.126. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.127. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.128. Rerunning OPT passes. (Maybe there is more to do..)

7.30.129. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.130. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.131. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.132. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$981 ($sdffce) from module top.

7.30.133. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.134. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.135. Rerunning OPT passes. (Maybe there is more to do..)

7.30.136. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.137. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.138. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.139. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$982 ($sdffce) from module top.

7.30.140. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.141. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.142. Rerunning OPT passes. (Maybe there is more to do..)

7.30.143. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.144. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.145. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.146. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$983 ($sdffce) from module top.

7.30.147. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.148. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.149. Rerunning OPT passes. (Maybe there is more to do..)

7.30.150. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.151. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.152. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.153. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$984 ($sdffce) from module top.

7.30.154. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.155. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.156. Rerunning OPT passes. (Maybe there is more to do..)

7.30.157. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.158. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.159. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.160. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$985 ($sdffce) from module top.

7.30.161. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.162. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.163. Rerunning OPT passes. (Maybe there is more to do..)

7.30.164. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.165. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.166. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.167. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$986 ($sdffce) from module top.

7.30.168. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

7.30.169. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.170. Rerunning OPT passes. (Maybe there is more to do..)

7.30.171. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

7.30.172. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

7.30.173. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.30.174. Executing OPT_DFF pass (perform DFF optimizations).

7.30.175. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.30.176. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.30.177. Finished OPT passes. (There is nothing left to do.)

7.31. Executing ICE40_WRAPCARRY pass (wrap carries).

7.32. Executing TECHMAP pass (map to technology primitives).

7.32.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.32.2. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

7.32.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$6b90a16b6f3b57b9c9d958838204f952a01dc262\_80_ice40_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_80_ice40_alu for cells of type $alu.
Using template $paramod$a73b73c5f5a1d9d7f80c290f47c75c83218240f1\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~241 debug messages>

7.33. Executing OPT pass (performing simple optimizations).

7.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~175 debug messages>

7.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~639 debug messages>
Removed a total of 213 cells.

7.33.3. Executing OPT_DFF pass (perform DFF optimizations).

7.33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 34 unused cells and 120 unused wires.
<suppressed ~35 debug messages>

7.33.5. Finished fast OPT passes.

7.34. Executing ICE40_OPT pass (performing simple optimizations).

7.34.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$696.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$696.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$709.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$696.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$720.slice[0].carry: CO=\i2s2_inst.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$723.slice[0].carry: CO=\sinegen.phase_l [0]

7.34.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~5 debug messages>

7.34.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

7.34.4. Executing OPT_DFF pass (perform DFF optimizations).

7.34.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

7.34.6. Rerunning OPT passes. (Removed registers in this run.)

7.34.7. Running ICE40 specific optimizations.

7.34.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.34.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.34.10. Executing OPT_DFF pass (perform DFF optimizations).

7.34.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.34.12. Finished OPT passes. (There is nothing left to do.)

7.35. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

7.36. Executing TECHMAP pass (map to technology primitives).

7.36.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

7.36.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
No more expansions possible.
<suppressed ~121 debug messages>

7.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$720.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$723.slice[0].carry ($lut).

7.39. Executing ICE40_OPT pass (performing simple optimizations).

7.39.1. Running ICE40 specific optimizations.

7.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~56 debug messages>

7.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~72 debug messages>
Removed a total of 24 cells.

7.39.4. Executing OPT_DFF pass (perform DFF optimizations).

7.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 534 unused wires.
<suppressed ~1 debug messages>

7.39.6. Rerunning OPT passes. (Removed registers in this run.)

7.39.7. Running ICE40 specific optimizations.

7.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

7.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

7.39.10. Executing OPT_DFF pass (perform DFF optimizations).

7.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

7.39.12. Finished OPT passes. (There is nothing left to do.)

7.40. Executing TECHMAP pass (map to technology primitives).

7.40.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

7.40.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

7.41. Executing ABC pass (technology mapping using ABC).

7.41.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 373 gates and 444 wires to a netlist network with 69 inputs and 63 outputs.

7.41.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =     114.
ABC: Participating nodes from both networks       =     247.
ABC: Participating nodes from the first network   =     114. (  58.46 % of nodes)
ABC: Participating nodes from the second network  =     133. (  68.21 % of nodes)
ABC: Node pairs (any polarity)                    =     114. (  58.46 % of names can be moved)
ABC: Node pairs (same polarity)                   =      97. (  49.74 % of names can be moved)
ABC: Total runtime =     0.02 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

7.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      194
ABC RESULTS:        internal signals:      312
ABC RESULTS:           input signals:       69
ABC RESULTS:          output signals:       63
Removing temp directory.

7.42. Executing ICE40_WRAPCARRY pass (wrap carries).

7.43. Executing TECHMAP pass (map to technology primitives).

7.43.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

7.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 9 unused cells and 170 unused wires.

7.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      233
  1-LUT                9
  2-LUT               26
  3-LUT               95
  4-LUT              103
  with \SB_CARRY    (#0)   37
  with \SB_CARRY    (#1)   37

Eliminating LUTs.
Number of LUTs:      233
  1-LUT                9
  2-LUT               26
  3-LUT               95
  4-LUT              103
  with \SB_CARRY    (#0)   37
  with \SB_CARRY    (#1)   37

Combining LUTs.
Number of LUTs:      233
  1-LUT                9
  2-LUT               26
  3-LUT               95
  4-LUT              103
  with \SB_CARRY    (#0)   37
  with \SB_CARRY    (#1)   37

Eliminated 0 LUTs.
Combined 0 LUTs.
<suppressed ~1154 debug messages>

7.45. Executing TECHMAP pass (map to technology primitives).

7.45.1. Executing Verilog-2005 frontend: /opt/oss-cad-suite/lib/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/opt/oss-cad-suite/lib/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

7.45.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$453111cff761ac57957f9972d987be765170f931\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$ae9b8abdb4f811ce37985dd5106af9cd21223954\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011000 for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$2de296c0f54c5ef532710b049108d6056e6152c5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$a4df2b5be2b644499880e088a11556935f22b401\$lut for cells of type $lut.
Using template $paramod$c2c7fe860c90cfc70af61d39029863cfb8b6f377\$lut for cells of type $lut.
Using template $paramod$614ef1a9526067216a5ae1d6d394bc9d4c1ce50a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101011 for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010100 for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$12879138d1e376f344e47ea40be66b776233be75\$lut for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$ad3a97108c9f4d10f8acfa309b668b9455d3d733\$lut for cells of type $lut.
Using template $paramod$fec5a3e586b1930427fa7af9f5aac7fd41e707a1\$lut for cells of type $lut.
Using template $paramod$aa1af7cf17f680ab69ea5070795fa88bda89de14\$lut for cells of type $lut.
Using template $paramod$a63d84c9dd26caf4e75c7cc2f6f70f64a5b14aa1\$lut for cells of type $lut.
Using template $paramod$253cd9a0f7e80b595c475d04df5c7c90b0e0ab16\$lut for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod$a9ee9524606d47769a02efd4f1f39eb2ccd6def7\$lut for cells of type $lut.
Using template $paramod$7f88ae8b0ca78f7b736f446522956805c49fb79f\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$208571967a0f6bfbae2454dfcebee8faffd9afe6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100001 for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod$070ad9d1ddbf89389161ba7e9ac58b9c0e081923\$lut for cells of type $lut.
Using template $paramod$9d8ea59aa55d8c94d14eb467a0a6973df3bd57eb\$lut for cells of type $lut.
Using template $paramod$e053a22d78e6bd5ea33183ea69976f0db741be0e\$lut for cells of type $lut.
Using template $paramod$81281693907c526a9c15a055205ebc0f295effec\$lut for cells of type $lut.
Using template $paramod$a9eda3037176ef2eebae7c8b0804bd441b3ecef9\$lut for cells of type $lut.
Using template $paramod$5da9e32e6cad289d787e84f13269323907d9debb\$lut for cells of type $lut.
Using template $paramod$e0c48eb8c215cf4f425dbafcf2f2ea258489a947\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$282f8342f73f915a7ad601426de8e3c86e230bde\$lut for cells of type $lut.
Using template $paramod$710e2f28b833d9ff9835883514d3e174c73017ba\$lut for cells of type $lut.
Using template $paramod$82c294a29041eacdde6bff6563505762a198d28b\$lut for cells of type $lut.
Using template $paramod$64669a7e87c28e39425dffff48145545533b4971\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$2bdfdda73873e8931790d872b72220895e67fee5\$lut for cells of type $lut.
Using template $paramod$8063bb1b512fcad764f13beded777873befdacd6\$lut for cells of type $lut.
Using template $paramod$6207276bfc1a864e106701dfc22f8684d7931468\$lut for cells of type $lut.
Using template $paramod$868427562418b5dc988caeac6a54689ec9c9025e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$bec5be7d552ede21c071ad538afdf64e0c15a37c\$lut for cells of type $lut.
Using template $paramod$b572a17bfa464a5e9eb4fa5b87f66c8c9ee2ad3d\$lut for cells of type $lut.
Using template $paramod$cdb72bc3d313969931da67949833a2dd638a3f2f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$c24ed72ebb67e9ead6029e42e909ef7fc0abbb11\$lut for cells of type $lut.
Using template $paramod$97c4788112e3b4c17eee74207c1b599e28df835d\$lut for cells of type $lut.
Using template $paramod$b8251bd6a6009b7f8717eeee6d4ce1ee764681fb\$lut for cells of type $lut.
Using template $paramod$fdecc78febe9c3da0532f4d654ca4a6698922930\$lut for cells of type $lut.
Using template $paramod$98d40e23bb57d56e14345fb0942003de3e361f25\$lut for cells of type $lut.
Using template $paramod$bdb7f9ed72fd4f5c7ad81c376f2d8a5c72a0098d\$lut for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod$a670b08a47dd8a34f954c50cd06e9996d77e8467\$lut for cells of type $lut.
Using template $paramod$c4a97cf0b46779df8741d618ac94cb76d112af85\$lut for cells of type $lut.
Using template $paramod$14ddd0326b0bae59b6495b3054a9f85f6f7e8bdb\$lut for cells of type $lut.
Using template $paramod$99b108e57094a4794425471421a2ce3c899d89af\$lut for cells of type $lut.
Using template $paramod$4eba0e203f3947cd255c51248f306841a4ae38c5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001011 for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$f63fe32f78d5f3c5de711945c592c8c5ec2303ae\$lut for cells of type $lut.
Using template $paramod$d9b36ce2fdd8ce897e45d62a5761501fd1d217bc\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110100 for cells of type $lut.
Using template $paramod$04b674496422df8889c01c3744b94097628ccfbc\$lut for cells of type $lut.
Using template $paramod$19ec49f31a8d230a567aa44ce3ea81a03c101e2b\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod$7843e8c123bb8acf2cb35298776a29dcf1524827\$lut for cells of type $lut.
Using template $paramod$052ca015f1400ebf950f85d5f181f7a5865c336c\$lut for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod$017b0f6e22afa072091804f6ea7bec6bef05308a\$lut for cells of type $lut.
Using template $paramod$d567bba3e8ea5142deb2586d5045a7f7828e2b2a\$lut for cells of type $lut.
Using template $paramod$924b5fc3610387a65701a800d1a257682ffc9e52\$lut for cells of type $lut.
Using template $paramod$0d71ccb5a2c3ff9094522b5a6b3fb7bbc8ad4909\$lut for cells of type $lut.
Using template $paramod$60193eb7029ec1bbe4f7488706fe1b2e318bfeda\$lut for cells of type $lut.
Using template $paramod$10cf713b4186bc18302043b90ad995f32fe0efd7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$06a49eeef9c9c0ca3eeb308c4b5ee09a412d6201\$lut for cells of type $lut.
Using template $paramod$e628c2a8d9b1fa44d10e1de24bfb8e31bf8a4ac6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$babd7b66946317c093947d0782d51c26873023e7\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$bb4fff1cc3b827238aa40993cafede1c5beecbe3\$lut for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod$84f377b34f066b6e07e327408ad42a2ed873c89d\$lut for cells of type $lut.
Using template $paramod$93d2145af0f316fd985265231857c746a90a31c1\$lut for cells of type $lut.
Using template $paramod$ef26adabe6060e01077b576cfe34e95e55a26aef\$lut for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod$d0afe6301400fc6556328d79c407e8da0d479f0a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$b569ae7efb9a90971a6b662179bc4fb7ffd31726\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$2d73cf21e7a3b53006ebbae47ecc48e73975ec46\$lut for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod$bd30e88998eb3f40bd5b483dd9ac73c42f6b8ec7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
No more expansions possible.
<suppressed ~1783 debug messages>
Removed 0 unused cells and 524 unused wires.

7.46. Executing AUTONAME pass.
Renamed 6228 objects in module top (37 iterations).
<suppressed ~490 debug messages>

7.47. Executing HIERARCHY pass (managing design hierarchy).

7.47.1. Analyzing design hierarchy..
Top module:  \top

7.47.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

7.48. Printing statistics.

=== top ===

   Number of wires:                186
   Number of wire bits:            852
   Number of public wires:         186
   Number of public wire bits:     852
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                377
     SB_CARRY                       44
     SB_DFF                         18
     SB_DFFE                        55
     SB_DFFESR                      26
     SB_LUT4                       233
     SB_PLL40_PAD                    1

7.49. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

7.50. Executing JSON backend.

Warnings: 7 unique messages, 7 total
End of script. Logfile hash: 13412ee6fb, CPU: user 0.85s system 0.34s, MEM: 32.90 MB peak
Yosys 0.25+1 (git sha1 d3216593d, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 30% 23x read_verilog (0 sec), 22% 1x abc (0 sec), ...
